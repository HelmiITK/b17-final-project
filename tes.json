{
  "success": true,
  "enrolledCourses": [
    {
      "course": {
        "id": 14,
        "title": "Course Kotlin for Android: Beginner",
        "description": "Course Kotlin for Android: Beginner dirancang khusus untuk membantu pemula memahami dasar-dasar pengembangan aplikasi Android menggunakan bahasa pemrograman Kotlin. Dalam kursus ini, Anda akan diperkenalkan dengan konsep-konsep dasar Kotlin dan bagaimana mengaplikasikannya dalam konteks pengembangan aplikasi Android. Kursus ini dirancang untuk membantu Anda membangun landasan yang kuat dalam penggunaan Kotlin untuk membuat aplikasi Android yang efektif dan efisien.",
        "price": 0,
        "type_course": "free",
        "level": "pemula",
        "url_group": "www.discord.com/backend2",
        "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231213_7KaF3FAw6",
        "createdAt": "2023-12-09T01:28:22.172Z",
        "updatedAt": "2023-12-13T16:02:07.773Z",
        "category_id": 4,
        "chapters": [
          {
            "id": 49,
            "title": "Chapter 1 - Pengenalan Kotlin dan dasar-dasar Android",
            "course_id": 14,
            "content": "Chapter pertama ini akan memperkenalkan Anda pada bahasa pemrograman Kotlin dan memahami keunggulan serta kegunaannya dalam pengembangan aplikasi Android. Anda akan belajar tentang dasar-dasar Kotlin, termasuk variabel, tipe data, struktur kontrol, dan fungsi. Selain itu, Anda akan memahami bagaimana Kotlin berinteraksi dengan platform Android, mulai dari struktur proyek hingga pembuatan tampilan sederhana menggunakan XML dan Kotlin."
          },
          {
            "id": 50,
            "title": "Chapter 2 - Fundamental Kotlin untuk Pengembangan Android",
            "course_id": 14,
            "content": "Pada chapter kedua, Anda akan menjelajahi konsep-konsep Object-Oriented Programming (OOP) dalam Kotlin dan bagaimana menerapkannya dalam konteks pengembangan Android. Melalui topik ini, Anda akan memahami penggunaan Kotlin Android Extensions, interaksi antara komponen Android seperti Activities dan Fragments, serta manfaat penggunaan Intent untuk navigasi antar aktivitas."
          },
          {
            "id": 52,
            "title": "Chapter 3 - Advanced Topics in Kotlin for Android",
            "course_id": 14,
            "content": "Chapter terakhir akan membawa Anda ke tingkat yang lebih mendalam dalam pengembangan aplikasi Android menggunakan Kotlin. Anda akan mempelajari manajemen data dengan Kotlin, termasuk penggunaan Shared Preferences, SQLite, dan Room Persistence Library. Selain itu, kursus ini akan mengenalkan Anda pada Kotlin Coroutines untuk pemrograman asynchronous, serta teknik optimisasi kode dan alat bantu debugging yang dapat meningkatkan kinerja aplikasi Android Anda."
          }
        ],
        "materials": [
          {
            "id": 86,
            "chapter_id": 49,
            "course_id": 14,
            "title": "Pengenalan Kotlin",
            "content": "Kotlin merupakan bahasa pemrograman modern yang sangat diminati dalam pengembangan aplikasi, terutama di platform Android. Dikembangkan oleh JetBrains, Kotlin menawarkan sintaksis yang bersih, ekspresif, dan ringkas, membuatnya mudah dipelajari dan digunakan oleh para pengembang. Salah satu keunggulan utamanya adalah keamanan jenis data yang kuat, mengurangi risiko kesalahan umum seperti NullPointerException dengan sistem yang memeriksa nilai null secara otomatis. Keunggulan lainnya adalah interoperabilitasnya yang baik dengan Java, memungkinkan integrasi yang lancar dengan kode Java yang sudah ada. Fitur-fitur kunci termasuk null safety, extension functions, dukungan penuh terhadap pemrograman fungsional, dan kemampuan coroutines untuk pemrograman asynchronous yang efisien. Kotlin banyak digunakan dalam pengembangan aplikasi Android dan juga dapat diterapkan dalam pengembangan backend serta aplikasi desktop. Dukungan yang kuat dari komunitas dan perusahaan serta keunggulan fiturnya menjadikan Kotlin sebagai pilihan utama bagi pengembang dalam membangun aplikasi yang aman, efisien, dan inovatif.",
            "url_video": "https://youtu.be/6dSNbskzlz4?si=N4tqsPU0aIS6rIMp"
          },
          {
            "id": 87,
            "chapter_id": 49,
            "course_id": 14,
            "title": "Dasar-dasar Kotlin",
            "content": "Dasar-dasar Kotlin membentuk fondasi yang penting dalam pemrograman dengan bahasa ini. Dalam Kotlin, pengguna dapat mendefinisikan berbagai jenis variabel dengan tipe data seperti Int, Float, Double, Boolean, Char, dan lainnya, menggunakan kata kunci `val` untuk nilai yang tetap dan `var` untuk nilai yang dapat diubah. Struktur kontrol seperti `if`, `else`, `when`, dan perulangan `for` serta `while` memungkinkan pengontrolan alur eksekusi program dan iterasi melalui data. Fungsi-fungsi dapat didefinisikan dengan kata kunci `fun`, termasuk fungsi tingkat tinggi yang dapat diteruskan atau mengembalikan fungsi lain sebagai hasil. Kotlin juga mendukung konsep OOP seperti kelas, objek, pewarisan, enkapsulasi, dan polimorfisme. Salah satu fitur utama Kotlin adalah null safety yang secara alami mengelola nilai-nilai yang dapat bernilai null untuk menghindari NullPointerException. Ekstensi (Extension Functions) memungkinkan penambahan fungsi baru ke kelas yang sudah ada tanpa mengubah struktur asli kelas tersebut. Kotlin juga mendukung paradigma pemrograman fungsional dengan lambda expressions, operasi pada koleksi, dan fitur coroutines yang memudahkan pemrograman asynchronous untuk menangani tugas-tugas latar belakang tanpa kompleksitas yang terkait dengan threading atau callback secara langsung. Pemahaman mendalam terhadap dasar-dasar Kotlin memungkinkan pengembang untuk membangun aplikasi yang efisien, kuat, dan aman dalam bahasa pemrograman ini.",
            "url_video": "https://youtu.be/_x8aEC-si5Y?si=SjqY2Kagwb2ClTtw"
          },
          {
            "id": 88,
            "chapter_id": 49,
            "course_id": 14,
            "title": "Pengantar Pengembangan Android dengan Kotlin",
            "content": "Pengantar Pengembangan Android dengan Kotlin membawa para pemula ke dalam dunia pengembangan aplikasi Android menggunakan bahasa pemrograman Kotlin. Materi ini memperkenalkan lingkungan pengembangan, terutama Android Studio, sebagai IDE utama untuk membuat aplikasi Android dengan Kotlin. Ini juga menjelaskan interaksi antara Kotlin dan XML dalam mengontrol logika aplikasi dan merancang tampilan UI. Fokusnya termasuk pembuatan tampilan sederhana menggunakan XML untuk menampilkan elemen UI dasar seperti tombol, teks, dan gambar, sementara Kotlin memberikan fungsi dan perilaku pada elemen-elemen tersebut. Pengantar ini juga mencakup konsep dasar komponen Android seperti Activities, Fragments, dan Views, serta cara integrasi fitur khusus Android dan praktik terbaik dalam pengembangan aplikasi dengan Kotlin. Tujuannya adalah memberikan landasan pemahaman yang kokoh bagi pemula untuk mulai membangun aplikasi Android dengan Kotlin, memperoleh pemahaman awal yang penting dalam proses pengembangan aplikasi Android.",
            "url_video": "https://youtu.be/W-SE6lGd1E0?si=1dkacn1YArQx4K7i"
          },
          {
            "id": 90,
            "chapter_id": 50,
            "course_id": 14,
            "title": "Konsep OOP dalam Kotlin",
            "content": "Konsep OOP (Object-Oriented Programming) dalam Kotlin menawarkan landasan yang integral dalam pembangunan aplikasi dengan fokus pada objek dan hubungan antar mereka. Dalam Kotlin, kelas berperan sebagai cetakan yang mendefinisikan atribut (variabel) dan metode (fungsi), sementara objek merepresentasikan instance dari kelas tersebut. Pewarisan memungkinkan kelas turunan untuk mewarisi sifat-sifat dari kelas induknya, memperluas fungsionalitas, sedangkan enkapsulasi memungkinkan penyembunyian detail implementasi internal objek. Konsep polimorfisme memungkinkan objek menunjukkan berbagai perilaku dengan overriding (penggantian perilaku fungsi dari kelas induk) dan overloading (fungsi dengan nama yang sama tetapi parameter yang berbeda). Abstraksi memungkinkan pembuatan kelas abstrak sebagai kerangka kerja dasar, sementara interface menentukan perilaku yang harus diimplementasikan oleh kelas. Kotlin juga menawarkan fitur `companion object` untuk pembuatan objek yang terkait dengan kelas tanpa perlu menciptakan instance kelas tersebut, serta konsep Singleton yang memastikan hanya ada satu instance kelas yang dapat diakses secara global. Konsep-konsep OOP dalam Kotlin memberikan struktur yang kokoh bagi pengembang untuk mengorganisir kode secara terstruktur dan mudah dimengerti, memungkinkan pengembangan aplikasi yang lebih terkelola dan skalabel.",
            "url_video": "https://youtu.be/QlmMEagRNnA?si=j3BJzYL4-5MMF0x-"
          },
          {
            "id": 91,
            "chapter_id": 50,
            "course_id": 14,
            "title": "Kotlin Android Extensions",
            "content": "Kotlin Android Extensions adalah fitur penting dalam pengembangan aplikasi Android dengan Kotlin yang mempermudah koneksi antara kode Kotlin dan file XML yang mendefinisikan tampilan aplikasi. Fitur ini menghilangkan kebutuhan untuk menggunakan `findViewById()` secara manual, memungkinkan penggunaan sintaks yang lebih sederhana untuk mereferensikan elemen UI yang telah didefinisikan dalam file XML. Dengan Kotlin Android Extensions, pengembang dapat mengakses elemen UI langsung dalam kode Kotlin hanya dengan menggunakan nama yang sama seperti yang diberikan pada XML, mengurangi kompleksitas dan boilerplate code. Fitur property extensions juga memperluas fungsionalitas kelas bawaan Android, memungkinkan penambahan properti tambahan ke elemen UI atau menetapkan fungsi click listener secara langsung. Meskipun memudahkan pengembangan, beberapa praktik terbaik menyarankan alternatif seperti View Binding atau Data Binding untuk aplikasi yang lebih besar guna manajemen yang lebih baik. Secara keseluruhan, Kotlin Android Extensions memberikan kemudahan signifikan dalam mengakses dan memanipulasi elemen UI, meningkatkan produktivitas pengembangan, dan mempercepat proses pengembangan aplikasi Android.",
            "url_video": "https://youtu.be/K1u8S2e41LA?si=mYwtE3LRLt7hppbe"
          },
          {
            "id": 93,
            "chapter_id": 50,
            "course_id": 14,
            "title": "Interaksi dengan Komponen Android",
            "content": "Interaksi dengan komponen-komponen inti Android merupakan esensi dalam pengembangan aplikasi dengan Kotlin. Hal ini meliputi aktivitas (Activities) yang mewakili layar aplikasi, fragmen (Fragments) sebagai bagian modular yang dapat digunakan kembali, serta views dan layouts untuk mengatur elemen antarmuka pengguna. Intents digunakan untuk memulai komponen baru, mentransfer data, atau menangani aksi tertentu dalam aplikasi. Services berperan di latar belakang untuk menjalankan tugas jangka panjang, sementara Broadcast Receivers mendengarkan pesan sistem atau aplikasi lain. Content Providers memfasilitasi berbagi data antaraplikasi. Pengembang berinteraksi dengan komponen-komponen ini melalui manajemen siklus hidup, pengaturan properti, menangani peristiwa, dan menggunakan berbagai libraries/APIs untuk menambahkan fungsionalitas tambahan seperti sensor perangkat, akses lokasi, kamera, dan lainnya. Pemahaman yang baik tentang interaksi dengan komponen-komponen ini membantu pengembang dalam membuat aplikasi yang responsif, berfungsi optimal, dan memanfaatkan fitur-fitur Android secara efisien.",
            "url_video": "https://youtu.be/0wYkzDNoaZg?si=8mvKOzRWOOIgbbkS"
          },
          {
            "id": 94,
            "chapter_id": 52,
            "course_id": 14,
            "title": "Pengelolaan Data dengan Kotlin",
            "content": "Pengelolaan data dengan Kotlin melibatkan serangkaian strategi untuk menyimpan, memproses, dan menggunakan data dalam aplikasi. Bahasa Kotlin menyediakan berbagai jenis tipe data serta kemampuan pengelompokan data dalam struktur data seperti Array, List, Set, dan Map, memudahkan pengelolaan data dalam berbagai bentuk. Kotlin juga mengatasi masalah nilai null dengan sistem null safety, memastikan keamanan dalam penanganan nilai-nilai yang tidak pasti. Operasi pada koleksi data menggunakan fungsi tingkat tinggi seperti map, filter, atau reduce mempermudah manipulasi data dalam koleksi. Untuk pengelolaan data persisten, Kotlin dapat berinteraksi dengan database SQLite atau menggunakan library seperti Room Persistence untuk menyimpan dan mengakses data lokal. Selain itu, Kotlin mendukung proses serialisasi dan deserialisasi data, integrasi dengan layanan web melalui library seperti Retrofit, serta pengelolaan status aplikasi dan pengujian data. Melalui fitur-fitur dan integrasi ini, pengelolaan data dengan Kotlin menjadi lebih efisien, aman, dan dapat diandalkan dalam pengembangan aplikasi.",
            "url_video": "https://youtu.be/Tmpv2S7fp34?si=T7RSHYKad2nlszAo"
          },
          {
            "id": 95,
            "chapter_id": 52,
            "course_id": 14,
            "title": "Kotlin Coroutines",
            "content": "Kotlin Coroutines adalah fitur dalam bahasa Kotlin yang memungkinkan penulisan kode asynchronous dengan mudah dan efisien. Mereka memfasilitasi penanganan tugas-tugas yang memerlukan waktu, seperti pemanggilan jaringan atau operasi IO, tanpa menghadapi kompleksitas dari callback atau manajemen thread secara langsung. Coroutines adalah lightweight threads yang dikelola oleh Kotlin Runtime, tidak menggunakan sumber daya banyak seperti thread konvensional, dan dapat menjalankan kode asynchronous tanpa memblokir proses utama. Melalui konsep suspend functions, coroutines dapat menjeda eksekusi tanpa menghalangi thread, memungkinkan untuk melakukan operasi asynchronous tanpa memblokir thread utama. Coroutine Scope mengatur siklus hidup sebuah coroutine, memungkinkan kontrol atas waktu hidup dan pengelolaan coroutines. Mekanisme bawaan untuk menangani pengecualian dalam coroutines memudahkan penanganan kesalahan. Terintegrasi dengan baik dalam berbagai library dan framework populer seperti Retrofit, Room, serta kotlinx.coroutines-android untuk pengembangan Android. Selain itu, Kotlin Coroutines memperkenalkan Kotlin Flows, yang memungkinkan pengeluaran sekuens data yang dapat berubah secara asynchronous, sering digunakan untuk pemrosesan data yang berkelanjutan. Dengan ekspresi yang kuat dan ringan, Kotlin Coroutines memberikan pendekatan yang bersih, mudah dibaca, dan responsif dalam menangani pemrograman asynchronous dalam aplikasi Kotlin.",
            "url_video": "https://youtu.be/Cu1c77pBFuo?si=PiCpwSgIh4ZKUT8j"
          },
          {
            "id": 96,
            "chapter_id": 52,
            "course_id": 14,
            "title": "Optimisasi Kode dan Debugging",
            "content": "Optimisasi Kode merupakan praktik penting dalam pengembangan perangkat lunak yang melibatkan pemilihan algoritma efisien, penggunaan struktur data yang tepat, manajemen memori yang bijaksana, penulisan kode yang bersih, serta optimalisasi penggunaan sumber daya seperti jaringan dan database. Sementara itu, debugging adalah proses krusial dalam mengidentifikasi dan memperbaiki kesalahan dalam kode. Menggunakan debugger, menangani pengecualian, logging yang efektif, melakukan pengujian dan profil aplikasi, serta melakukan refaktor kode adalah langkah-langkah penting dalam proses debugging. Keduanya, optimisasi kode dan debugging, merupakan langkah berkelanjutan yang membantu meningkatkan kualitas, kinerja, dan keandalan aplikasi serta meminimalkan kecacatan dan bug yang mungkin terjadi.",
            "url_video": "https://youtu.be/0WYF7mA1xFA?si=q0E1mhrqhABj886K"
          }
        ],
        "userProgress": [
          {
            "id": 3,
            "user_id": 2,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 88,
            "is_completed": true,
            "completed_at": "2023-12-12T11:10:12.598Z"
          },
          {
            "id": 40,
            "user_id": 13,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 86,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 41,
            "user_id": 13,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 87,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 42,
            "user_id": 13,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 88,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 43,
            "user_id": 13,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 90,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 44,
            "user_id": 13,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 91,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 45,
            "user_id": 13,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 93,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 46,
            "user_id": 13,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 94,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 47,
            "user_id": 13,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 95,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 48,
            "user_id": 13,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 96,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 70,
            "user_id": 14,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 86,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 71,
            "user_id": 14,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 87,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 72,
            "user_id": 14,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 88,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 73,
            "user_id": 14,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 90,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 74,
            "user_id": 14,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 91,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 75,
            "user_id": 14,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 93,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 76,
            "user_id": 14,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 94,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 77,
            "user_id": 14,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 95,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 78,
            "user_id": 14,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 96,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 1,
            "user_id": 2,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 86,
            "is_completed": true,
            "completed_at": "2023-12-19T02:53:22.467Z"
          },
          {
            "id": 2,
            "user_id": 2,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 87,
            "is_completed": true,
            "completed_at": "2023-12-19T03:38:44.357Z"
          },
          {
            "id": 141,
            "user_id": 15,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 87,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 142,
            "user_id": 15,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 88,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 143,
            "user_id": 15,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 90,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 144,
            "user_id": 15,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 91,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 145,
            "user_id": 15,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 93,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 146,
            "user_id": 15,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 94,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 147,
            "user_id": 15,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 95,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 148,
            "user_id": 15,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 96,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 5,
            "user_id": 2,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 91,
            "is_completed": true,
            "completed_at": "2023-12-21T03:38:35.171Z"
          },
          {
            "id": 6,
            "user_id": 2,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 93,
            "is_completed": true,
            "completed_at": "2023-12-21T03:38:38.126Z"
          },
          {
            "id": 8,
            "user_id": 2,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 95,
            "is_completed": true,
            "completed_at": "2023-12-21T03:38:43.716Z"
          },
          {
            "id": 9,
            "user_id": 2,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 96,
            "is_completed": true,
            "completed_at": "2023-12-21T03:38:46.583Z"
          },
          {
            "id": 140,
            "user_id": 15,
            "course_id": 14,
            "chapter_id": 49,
            "course_material_id": 86,
            "is_completed": true,
            "completed_at": "2023-12-21T04:36:55.119Z"
          },
          {
            "id": 4,
            "user_id": 2,
            "course_id": 14,
            "chapter_id": 50,
            "course_material_id": 90,
            "is_completed": true,
            "completed_at": "2023-12-21T02:24:31.172Z"
          },
          {
            "id": 7,
            "user_id": 2,
            "course_id": 14,
            "chapter_id": 52,
            "course_material_id": 94,
            "is_completed": true,
            "completed_at": "2023-12-21T03:38:40.822Z"
          }
        ],
        "ratings": [
          {
            "id": 7,
            "course_id": 14,
            "user_id": 2,
            "rating": 4.5,
            "createdAt": "2023-12-21T04:14:30.674Z",
            "updatedAt": "2023-12-21T04:14:30.674Z"
          }
        ]
      },
      "enrolled_at": "2023-12-12T10:52:45.947Z",
      "is_completed": false,
      "progressPercentage": 100,
      "userProgress": [
        {
          "id": 3,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 88,
          "is_completed": true,
          "completed_at": "2023-12-12T11:10:12.598Z"
        },
        {
          "id": 1,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 86,
          "is_completed": true,
          "completed_at": "2023-12-19T02:53:22.467Z"
        },
        {
          "id": 2,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 87,
          "is_completed": true,
          "completed_at": "2023-12-19T03:38:44.357Z"
        },
        {
          "id": 5,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 91,
          "is_completed": true,
          "completed_at": "2023-12-21T03:38:35.171Z"
        },
        {
          "id": 6,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 93,
          "is_completed": true,
          "completed_at": "2023-12-21T03:38:38.126Z"
        },
        {
          "id": 8,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 95,
          "is_completed": true,
          "completed_at": "2023-12-21T03:38:43.716Z"
        },
        {
          "id": 9,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 96,
          "is_completed": true,
          "completed_at": "2023-12-21T03:38:46.583Z"
        },
        {
          "id": 4,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 90,
          "is_completed": true,
          "completed_at": "2023-12-21T02:24:31.172Z"
        },
        {
          "id": 7,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 94,
          "is_completed": true,
          "completed_at": "2023-12-21T03:38:40.822Z"
        }
      ],
      "averageRating": 4.5
    },
    {
      "course": {
        "id": 11,
        "title": "Dasar-Dasar User Interface (UI)",
        "description": "Course ini dirancang untuk memberikan pemahaman menyeluruh tentang Dasar-Dasar User Interface (UI) kepada para peserta yang ingin memahami prinsip-prinsip dasar desain antarmuka pengguna yang efektif. Dibagi menjadi tiga chapter yang terstruktur dengan baik, setiap chapter memberikan wawasan mendalam tentang aspek-aspek utama yang terkait dengan UI.",
        "price": 0,
        "type_course": "free",
        "level": "pemula",
        "url_group": "www.discord.com/backend2",
        "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231213_U4UeP6nFw",
        "createdAt": "2023-12-08T22:27:22.622Z",
        "updatedAt": "2023-12-13T15:55:16.649Z",
        "category_id": 2,
        "chapters": [
          {
            "id": 39,
            "title": "Chapter 1 - Pengenalan UI",
            "course_id": 11,
            "content": "Chapter pertama kursus ini akan membawa Anda memahami secara mendalam peran penting User Interface (UI) dalam konteks pengalaman pengguna. Anda akan belajar tentang definisi UI, prinsip-prinsip dasar dalam desain UI, dan sejarah perkembangan UI dari waktu ke waktu. Bab ini akan memberikan fondasi yang kuat untuk memahami konsep dasar UI."
          },
          {
            "id": 40,
            "title": "Chapter 2 - Desain Visual",
            "course_id": 11,
            "content": "Di Chapter kedua, fokus akan tertuju pada aspek visual dari UI. Anda akan mendalami teori warna dan penggunaannya dalam UI, tata letak (layout) yang efektif untuk menciptakan komposisi UI yang menarik, serta penggunaan tipografi yang tepat untuk memperkuat pesan dalam desain UI."
          },
          {
            "id": 41,
            "title": "Chapter 3 - Interaksi Pengguna",
            "course_id": 11,
            "content": "Chapter terakhir akan mengeksplorasi interaksi pengguna yang efektif. Ini mencakup prinsip-prinsip interaksi pengguna (UI/UX) yang mempengaruhi pengalaman pengguna, desain responsif dan adaptif untuk berbagai perangkat, serta pentingnya navigasi yang intuitif dalam menciptakan pengalaman pengguna yang menyenangkan."
          }
        ],
        "materials": [
          {
            "id": 55,
            "chapter_id": 39,
            "course_id": 11,
            "title": "Definisi dan Peran UI dalam Pengalaman Pengguna",
            "content": "User Interface (UI) merujuk pada semua elemen yang memungkinkan interaksi antara manusia dan perangkat. Ini meliputi tampilan, tombol, ikon, dan elemen visual lainnya yang memfasilitasi interaksi pengguna dengan sistem atau aplikasi. Dalam pengalaman pengguna (UX), UI berperan penting dalam mempermudah interaksi, menghadirkan keselarasan antara harapan pengguna dan sistem, meningkatkan keterlibatan melalui desain menarik, serta meminimalkan kesalahan pengguna. Desain UI yang baik juga bertugas menyampaikan informasi dengan jelas, menciptakan kesan positif, dan membangun identitas merek yang kuat. Dengan demikian, UI menjadi salah satu faktor utama dalam menciptakan pengalaman pengguna yang memuaskan dan efisien.",
            "url_video": "https://youtu.be/dAtNLaAyWjM?si=W4A2_mjNk2j-N1k0"
          },
          {
            "id": 63,
            "chapter_id": 41,
            "course_id": 11,
            "title": "Prinsip Navigasi dalam UI",
            "content": "Prinsip navigasi dalam desain antarmuka pengguna (UI) memainkan peran krusial dalam memandu pengguna untuk berinteraksi dengan lancar dalam suatu aplikasi atau situs web. Navigasi yang efektif memiliki tujuan untuk membimbing pengguna dengan jelas, menciptakan pengalaman yang nyaman, dan memastikan struktur informasi terorganisir dengan baik. Konsistensi dalam penempatan elemen navigasi, kesederhanaan dalam presentasi, dan kejelasan elemen navigasi seperti menu dropdown atau tombol berkontribusi pada kemudahan dalam navigasi. Desain navigasi yang responsif, mudah digunakan, dan memiliki fitur pencarian yang efektif membantu pengguna menemukan informasi dengan cepat. Prinsip ini juga menekankan pentingnya pengujian, pembaruan terus-menerus, serta memberikan umpan balik yang jelas untuk memastikan keterbacaan, keteraturan, dan kesesuaian navigasi dengan kebutuhan pengguna. Dengan menerapkan prinsip-prinsip navigasi ini, desainer dapat menciptakan antarmuka yang memandu pengguna dengan baik, meningkatkan interaksi, dan menyediakan pengalaman pengguna yang memuaskan dalam aplikasi atau situs web.",
            "url_video": "https://youtu.be/4sSquW6jiEE?si=5vyp6xs2bIqfR_ZT"
          },
          {
            "id": 56,
            "chapter_id": 39,
            "course_id": 11,
            "title": "Prinsip-prinsip Dasar Desain UI",
            "content": "Prinsip-prinsip dasar dalam Desain User Interface (UI) merupakan pedoman esensial yang membimbing desainer dalam menciptakan antarmuka yang efektif dan menarik bagi pengguna. Keterpaduan (Consistency) menekankan penggunaan yang seragam dalam elemen-elemen desain untuk meminimalisir kebingungan, sementara Visibilitas (Visibility) memastikan bahwa fungsi-fungsi penting mudah ditemukan oleh pengguna. Prinsip Feedback yang Jelas (Clear Feedback) menggarisbawahi pentingnya respon yang tepat waktu untuk memastikan pengguna mendapatkan umpan balik yang informatif. Konteks menjadi kunci dalam Ketergantungan pada Konteks (Contextual Relevance) agar UI dapat menyesuaikan diri dengan kebutuhan pengguna. Efisiensi dan Efektivitas (Efficiency and Effectiveness) berfokus pada kemudahan mencapai tujuan dengan langkah yang minimal, sementara Pengaturan Pengguna (User Control) memberikan kontrol kepada pengguna. Kesederhanaan (Simplicity) menjadi prinsip penting dalam menyederhanakan desain, mengurangi kompleksitas, dan memfokuskan pada hal-hal yang esensial untuk menciptakan pengalaman pengguna yang baik dan mudah dipahami. Dengan memperhatikan prinsip-prinsip ini, desainer dapat menciptakan antarmuka yang responsif, intuitif, serta menghasilkan pengalaman pengguna yang memuaskan.",
            "url_video": "https://youtu.be/uwNClNmekGU?si=T5u2tZcf_M2bFkS7"
          },
          {
            "id": 57,
            "chapter_id": 39,
            "course_id": 11,
            "title": "Sejarah Perkembangan UI",
            "content": "Sejarah perkembangan User Interface (UI) mencerminkan evolusi yang signifikan seiring dengan kemajuan teknologi dari masa ke masa. Dimulai dari era mainframe dengan antarmuka teks yang terbatas, kemudian berkembang dengan munculnya GUI (Graphical User Interface) yang revolusioner oleh Xerox PARC pada tahun 1970-an hingga 1980-an. Apple dan Macintosh membawa konsep GUI ke pasar massal dengan tampilan yang lebih ramah pengguna. Microsoft dengan Windows 1.0 juga ikut mengubah wajah UI di komputer PC. Perkembangan internet dan web membawa pengalaman visual yang lebih kaya melalui browser seperti Netscape Navigator pada tahun 1990-an. Puncaknya, perkembangan mobile UI membawa layar sentuh yang memperkaya pengalaman pengguna pada smartphone. Selanjutnya, desain UI terus beradaptasi dengan berbagai perangkat dan layar yang berbeda, menjadi responsif dan adaptif di era modern. Pengembangan AR/VR menghadirkan antarmuka yang revolusioner dengan interaksi yang lebih imersif. Evolusi ini mencerminkan transformasi teknologi, desain, serta kebutuhan pengguna, terus membawa UI menuju pengalaman yang lebih baik, intuitif, dan responsif.",
            "url_video": "https://youtu.be/hxHwOgY9Lms?si=V1Ef8WStLxzw50qk"
          },
          {
            "id": 58,
            "chapter_id": 40,
            "course_id": 11,
            "title": "Teori Warna dan Penggunaannya dalam UI",
            "content": "Teori warna adalah studi tentang interaksi dan pengaruh warna dalam konteks pengalaman visual. Dalam Desain User Interface (UI), teori warna sangat signifikan karena memiliki kekuatan dalam mempengaruhi suasana hati, fokus, dan kesan visual pengguna. Melalui roda warna, kontras, serta konsep kecerahan, kejenuhan, dan nilai warna, desainer dapat memilih kombinasi warna yang sesuai untuk mencapai tujuan tertentu. Penggunaan warna dalam UI dapat meliputi identifikasi merek, pengaruh emosional, bantuan navigasi, penekanan pada elemen penting, keterbacaan teks, serta penciptaan harmoni visual. Pemahaman yang kuat terhadap teori warna memungkinkan desainer untuk menciptakan antarmuka yang menarik, mudah dipahami, dan mampu memengaruhi pengguna dengan cara yang diinginkan secara visual dan emosional.",
            "url_video": "https://youtu.be/H201gb46u_U?si=QXszNuugox9ggqe2"
          },
          {
            "id": 59,
            "chapter_id": 40,
            "course_id": 11,
            "title": "Tata Letak (Layout) dan Komposisi Desain UI",
            "content": "Tata Letak (Layout) dan Komposisi dalam Desain User Interface (UI) merujuk pada susunan dan pengaturan elemen-elemen desain yang bertujuan menciptakan hierarki visual yang jelas serta pengalaman pengguna yang efektif. Tata letak yang baik memperhatikan hierarki visual, konsistensi, penggunaan grid system, dan whitespace untuk mengatur elemen dengan terstruktur dan memberikan pengalaman yang konsisten. Komposisi, sementara itu, melibatkan prinsip-prinsip seperti aturan ketiga (rule of thirds), keseimbangan visual, penekanan pada titik fokus, dan keterbacaan yang optimal, membantu menyusun elemen-elemen desain agar terlihat seimbang, menarik, dan mudah dipahami oleh pengguna. Memahami prinsip-prinsip tata letak dan komposisi memungkinkan desainer untuk menciptakan antarmuka yang menarik secara visual, mudah dinavigasi, serta memberikan pengalaman pengguna yang lebih baik dan lebih efisien.",
            "url_video": "https://youtu.be/UB5q7-RE2oc?si=SdU4RZxohAuPg_Te"
          },
          {
            "id": 60,
            "chapter_id": 40,
            "course_id": 11,
            "title": "Tipografi dan Penggunaannya dalam UI",
            "content": "Tipografi dalam Desain User Interface (UI) adalah seni dan ilmu pemilihan serta penyusunan teks yang berperan penting dalam menyampaikan informasi secara jelas dan estetis. Penggunaan tipografi yang tepat, termasuk jenis huruf, ukuran, spasi, dan hierarki teks, memiliki dampak besar pada keterbacaan, suasana, dan kesan visual dari suatu antarmuka. Pemilihan jenis huruf yang cocok, pengaturan ukuran dan ruang antar huruf yang tepat, serta penekanan hierarki informasi melalui perbedaan ukuran dan gaya huruf, semuanya berkontribusi pada pengalaman pengguna yang lebih baik. Konsistensi dalam tipografi, baik dalam branding maupun kesesuaian antar elemen desain, juga penting untuk menciptakan kesan yang teratur dan mudah dipahami. Dengan mempertimbangkan aspek-aspek tersebut, desainer UI dapat menciptakan tampilan teks yang menarik, mudah dipahami, dan mendukung pengalaman pengguna yang optimal.",
            "url_video": "https://youtu.be/ot-5dQG2v5M?si=hwdV81Ogp5iaNq97"
          },
          {
            "id": 61,
            "chapter_id": 41,
            "course_id": 11,
            "title": "Prinsip-prinsip Interaksi Pengguna (UI/UX)",
            "content": "Prinsip-prinsip Interaksi Pengguna (UI/UX) merupakan pedoman kunci dalam desain produk digital yang bertujuan menciptakan pengalaman pengguna yang intuitif dan memuaskan. Konsistensi dalam tata letak, keteraturan, dan prediktabilitas dalam respons sistem memastikan pengguna merasa nyaman dan mampu memahami produk dengan cepat. Menggunakan mental model pengguna sebagai landasan, desain UI/UX harus sesuai dengan harapan pengguna. Feedback yang jelas setelah tindakan pengguna, fokus pada perbaikan pengalaman pengguna, serta desain yang sederhana dan keterbacaan yang tinggi, semuanya turut berkontribusi dalam menciptakan antarmuka yang baik. Konteks dan adaptabilitas menjadi penting, memastikan desain yang responsif, aksesibilitas yang baik, serta interaksi yang responsif dan intuitif. Keseluruhan prinsip-prinsip ini membantu dalam menciptakan produk yang memahami dan mengakomodasi kebutuhan pengguna secara menyeluruh, memberikan pengalaman pengguna yang lebih baik.",
            "url_video": "https://youtu.be/aql-GpvBFBo?si=OmihDbVwoFvosWtk"
          },
          {
            "id": 62,
            "chapter_id": 41,
            "course_id": 11,
            "title": "Desain Responsif dan Adaptif",
            "content": "Desain responsif dan adaptif merupakan dua strategi kunci dalam merancang antarmuka yang dapat menyesuaikan tampilannya dengan berbagai perangkat dan ukuran layar. Desain responsif menggunakan pendekatan fleksibel dengan grid system, media queries, dan fleksibilitas konten untuk menyesuaikan tampilan secara dinamis pada berbagai perangkat, mulai dari desktop hingga ponsel, tetap memperhatikan pengalaman pengguna yang konsisten. Sementara itu, desain adaptif melibatkan pembuatan beberapa versi desain yang dioptimalkan untuk kisaran resolusi layar tertentu, memberikan pengalaman yang lebih spesifik dan dioptimalkan. Responsif lebih menekankan fleksibilitas, sedangkan adaptif memberikan kontrol yang lebih besar terhadap tampilan dan fungsi pada setiap ukuran layar yang ditargetkan. Kedua pendekatan ini memiliki tujuan sama dalam memberikan pengalaman pengguna yang optimal, dan kombinasi dari keduanya kadang-kadang digunakan untuk memperkuat responsivitas dan kontrol desain secara keseluruhan.",
            "url_video": "https://youtu.be/jEGPKL7n4Uw?si=O2RsbpFO_Yy4Pm6w"
          }
        ],
        "userProgress": [
          {
            "id": 31,
            "user_id": 2,
            "course_id": 11,
            "chapter_id": 39,
            "course_material_id": 55,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 32,
            "user_id": 2,
            "course_id": 11,
            "chapter_id": 39,
            "course_material_id": 56,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 33,
            "user_id": 2,
            "course_id": 11,
            "chapter_id": 39,
            "course_material_id": 57,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 34,
            "user_id": 2,
            "course_id": 11,
            "chapter_id": 40,
            "course_material_id": 58,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 35,
            "user_id": 2,
            "course_id": 11,
            "chapter_id": 40,
            "course_material_id": 59,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 36,
            "user_id": 2,
            "course_id": 11,
            "chapter_id": 40,
            "course_material_id": 60,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 37,
            "user_id": 2,
            "course_id": 11,
            "chapter_id": 41,
            "course_material_id": 63,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 38,
            "user_id": 2,
            "course_id": 11,
            "chapter_id": 41,
            "course_material_id": 61,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 39,
            "user_id": 2,
            "course_id": 11,
            "chapter_id": 41,
            "course_material_id": 62,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 82,
            "user_id": 14,
            "course_id": 11,
            "chapter_id": 40,
            "course_material_id": 58,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 83,
            "user_id": 14,
            "course_id": 11,
            "chapter_id": 40,
            "course_material_id": 59,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 84,
            "user_id": 14,
            "course_id": 11,
            "chapter_id": 40,
            "course_material_id": 60,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 85,
            "user_id": 14,
            "course_id": 11,
            "chapter_id": 41,
            "course_material_id": 63,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 86,
            "user_id": 14,
            "course_id": 11,
            "chapter_id": 41,
            "course_material_id": 61,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 87,
            "user_id": 14,
            "course_id": 11,
            "chapter_id": 41,
            "course_material_id": 62,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 79,
            "user_id": 14,
            "course_id": 11,
            "chapter_id": 39,
            "course_material_id": 55,
            "is_completed": true,
            "completed_at": "2023-12-19T03:44:12.794Z"
          },
          {
            "id": 80,
            "user_id": 14,
            "course_id": 11,
            "chapter_id": 39,
            "course_material_id": 56,
            "is_completed": true,
            "completed_at": "2023-12-19T03:53:48.837Z"
          },
          {
            "id": 81,
            "user_id": 14,
            "course_id": 11,
            "chapter_id": 39,
            "course_material_id": 57,
            "is_completed": true,
            "completed_at": "2023-12-19T04:38:08.250Z"
          }
        ],
        "ratings": []
      },
      "enrolled_at": "2023-12-14T13:15:53.230Z",
      "is_completed": false,
      "progressPercentage": 0,
      "userProgress": [
        {
          "id": 31,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 55,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 32,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 56,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 33,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 57,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 34,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 58,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 35,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 59,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 36,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 60,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 37,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 63,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 38,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 61,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 39,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 62,
          "is_completed": false,
          "completed_at": null
        }
      ],
      "averageRating": null
    },
    {
      "course": {
        "id": 12,
        "title": "The Web Developer Bootcamp 2023",
        "description": "The Web Developer Bootcamp 2023 adalah Course intensif yang menyajikan fondasi esensial dalam pengembangan web menggunakan HTML, CSS, dan JavaScript. Course ini tidak hanya membahas aspek frontend seperti Flexbox, tetapi juga memperkenalkan konsep-konsep backend dengan Node.js dan database SQL. Peserta akan diberdayakan untuk menjadi full-stack developer dengan pembelajaran tentang pembuatan RESTful APIs, integrasi frontend-backend, serta pemanfaatan Git untuk manajemen versi dan deployment aplikasi web. Dengan pendekatan terstruktur, kursus ini bertujuan untuk mempersiapkan peserta agar memiliki landasan yang kuat dalam industri pengembangan web pada tahun 2023.",
        "price": 0,
        "type_course": "free",
        "level": "pemula",
        "url_group": "www.discord.com/backend2",
        "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231213_x3Ik1HqON",
        "createdAt": "2023-12-08T22:54:46.209Z",
        "updatedAt": "2023-12-13T15:58:33.695Z",
        "category_id": 3,
        "chapters": [
          {
            "id": 42,
            "title": "Chapter 1: Pengenalan Fundamental Web Development",
            "course_id": 12,
            "content": "Pada chapter ini, peserta akan mempelajari dasar-dasar pengembangan web melalui HTML, CSS, dan JavaScript. Mereka akan menguasai cara membuat struktur dasar halaman web menggunakan HTML, menerapkan styling dengan CSS, dan memperoleh pemahaman tentang logika dan fungsionalitas dasar JavaScript."
          },
          {
            "id": 43,
            "title": "Chapter 2: Pengembangan Web Interaktif",
            "course_id": 12,
            "content": "Chapter ini memperdalam pemahaman peserta tentang JavaScript dengan fokus pada manipulasi DOM, penanganan event, dan penggunaan AJAX & Fetch API untuk berkomunikasi dengan server. Peserta akan belajar bagaimana membuat halaman web yang responsif dan interaktif."
          },
          {
            "id": 44,
            "title": "Chapter 3: Framework & Tools Modern Web Development",
            "course_id": 12,
            "content": "Pada chapter ini, peserta akan diperkenalkan dengan framework front-end seperti React.js atau Vue.js, serta belajar tentang pengembangan back-end menggunakan Node.js dan Express. Mereka juga akan memahami penggunaan Git untuk kontrol versi dan kolaborasi dalam pengembangan perangkat lunak."
          },
          {
            "id": 45,
            "title": "Chapter 4: Pengembangan Proyek dan Deployment",
            "course_id": 12,
            "content": "Chapter terakhir ini menekankan pada penerapan praktis dari pengetahuan yang diperoleh dalam proyek nyata. Peserta akan belajar tentang debugging, optimisasi kinerja, dan tahap-tahap deployment sebuah proyek web. Mereka akan mengembangkan keterampilan dalam mempersiapkan aplikasi untuk produksi dan memilih opsi hosting yang tepat."
          }
        ],
        "materials": [
          {
            "id": 64,
            "chapter_id": 42,
            "course_id": 12,
            "title": "Pengenalan HTML",
            "content": "Pengenalan HTML merupakan fondasi utama dalam pembangunan halaman web. HTML, singkatan dari HyperText Markup Language, adalah bahasa markup yang menentukan struktur dasar suatu halaman web dengan menggunakan elemen-elemen (tags) yang menandai berbagai jenis konten. Setiap elemen HTML dimulai dengan sebuah tag pembuka dan diakhiri dengan tag penutup, kecuali elemen tertentu yang tidak memerlukan penutup. Dalam struktur dasar dokumen HTML, terdapat elemen-elemen seperti `<html>`, `<head>`, `<title>`, dan `<body>`. Semantik memainkan peran penting dalam HTML dengan menyediakan elemen-elemen bawaan seperti `<header>`, `<footer>`, dan lainnya, yang memperjelas struktur konten. Konsep dasar seperti tag untuk judul (`<h1>` hingga `<h6>`), paragraf (`<p>`), tautan (`<a>`), gambar (`<img>`), serta list (`<ul>`, `<ol>`, `<li>`) merupakan bagian integral dari penulisan HTML. Atribut seperti `id`, `class`, `href`, dan `src` memberikan informasi tambahan atau menentukan karakteristik dari setiap elemen. Lebih lanjut, pemahaman tentang HTML5, validasi HTML, dan responsive design akan memperkaya kemampuan dalam membangun halaman web yang informatif dan responsif di berbagai perangkat. Dengan pemahaman yang kuat tentang struktur dasar HTML, pengembang web dapat menciptakan halaman web yang terstruktur dan kompatibel dengan berbagai browser.",
            "url_video": "https://youtu.be/NBZ9Ro6UKV8?si=L8IFo2zMEkTXleN1"
          },
          {
            "id": 65,
            "chapter_id": 42,
            "course_id": 12,
            "title": "CSS Dasar",
            "content": "CSS (Cascading Style Sheets) merupakan bahasa yang mengontrol tampilan dan presentasi elemen dalam dokumen HTML. Fungsinya adalah untuk mengatur gaya seperti warna, font, ukuran, dan layout halaman web. Konsep dasar CSS meliputi penggunaan selektor untuk menentukan elemen mana yang akan diubah gayanya, properti yang mengatur atribut seperti warna dan ukuran, serta box model yang memahami pemosisian elemen dalam halaman. Ada dua cara utama dalam menulis CSS: Internal CSS, yang dituliskan di dalam tag <style> dalam elemen <head> dokumen HTML, dan External CSS, yang terdapat dalam file terpisah dan dihubungkan ke dokumen HTML melalui tag <link>. Pengembangan lebih lanjut dalam CSS melibatkan pemahaman yang mendalam tentang selektor yang lebih spesifik, tata letak responsif menggunakan CSS Grid dan Flexbox, serta aspek kepatuhan dan kompatibilitas CSS dengan berbagai browser. Dengan pemahaman yang kuat tentang CSS, pengembang web mampu meningkatkan penampilan, kejelasan, dan responsivitas dari halaman web yang mereka bangun.",
            "url_video": "https://youtu.be/CleFk3BZB3g?si=bBCzaFtHDtRGuv6U"
          },
          {
            "id": 66,
            "chapter_id": 42,
            "course_id": 12,
            "title": "JavaScript Fundamentals",
            "content": "JavaScript, sebagai bahasa pemrograman tingkat tinggi yang berjalan di sisi klien pada web browser, memiliki peran krusial dalam memberikan interaktivitas pada halaman web. Konsep dasar JavaScript mencakup variabel untuk menyimpan nilai yang berubah, tipe data seperti string, number, boolean, serta operator untuk melakukan operasi pada nilai. Kontrol alur, dalam bentuk kondisional dan perulangan, memungkinkan pengaturan alur program berdasarkan kondisi yang ditentukan serta mengeksekusi blok kode secara berulang. Fungsi, sebagai blok kode yang dapat dipanggil dan digunakan kembali, memungkinkan untuk menerima input dan mengembalikan output. Penggunaan utama JavaScript meliputi manipulasi DOM untuk mengubah struktur dan konten halaman web, penggunaan AJAX & Fetch API untuk pengambilan data asinkron, serta penggunaan objek dan metode bawaan yang memfasilitasi operasi dalam bahasa ini. Kemampuan lebih lanjut dalam JavaScript mencakup pemahaman tentang ES6 dan fitur modern, penggunaan framework dan library seperti React, Angular, atau Vue.js untuk pengembangan aplikasi web yang kompleks, serta teknik debugging untuk mengidentifikasi dan memperbaiki kesalahan dalam kode JavaScript. Dengan pemahaman yang mendalam tentang JavaScript, pengembang dapat menciptakan aplikasi web yang dinamis, interaktif, dan responsif untuk meningkatkan pengalaman pengguna secara keseluruhan.",
            "url_video": "https://youtu.be/vEROU2XtPR8?si=LmllMxGOHEVQ8GSf"
          },
          {
            "id": 67,
            "chapter_id": 43,
            "course_id": 12,
            "title": "DOM Manipulasi dengan JavaScript",
            "content": "Manipulasi DOM (Document Object Model) dengan JavaScript adalah proses di mana JavaScript dapat mengakses, memodifikasi, dan mengubah elemen-elemen HTML pada halaman web secara dinamis. DOM adalah representasi struktur hierarkis dari dokumen HTML yang dibuat oleh browser. JavaScript menggunakan berbagai metode seperti `getElementById`, `getElementsByClassName`, `getElementsByTagName`, dan `querySelector` untuk memilih elemen-elemen dalam DOM. Setelah elemen terpilih, JavaScript dapat mengubah konten dengan mengedit properti seperti `innerHTML`, `innerText`, atau `textContent`, serta menambah atau menghapus elemen dengan menggunakan metode seperti `appendChild`, `removeChild`, `createElement`, dan lainnya. Selain itu, JavaScript juga dapat mengubah nilai atribut elemen seperti `class`, `id`, `src`, `href`, menggunakan metode seperti `setAttribute`, `getAttribute`, dan `removeAttribute`. Melalui manipulasi DOM, pengembang dapat menciptakan halaman web yang dinamis, menanggapi interaksi pengguna, validasi formulir, membuat animasi, serta meningkatkan responsivitas dan interaktivitas halaman web secara keseluruhan. Manipulasi DOM dengan JavaScript menjadi kunci dalam menciptakan pengalaman pengguna yang lebih baik dan interaktif dalam pengembangan aplikasi web.",
            "url_video": "https://youtu.be/Y8wDTG7qjuA?si=JvOtOUdxWg857Mw5"
          },
          {
            "id": 69,
            "chapter_id": 43,
            "course_id": 12,
            "title": "Event Handling",
            "content": "Event Handling dalam konteks pengembangan web merujuk pada kemampuan JavaScript dalam mendeteksi serta menanggapi berbagai peristiwa yang terjadi di dalam browser. Peristiwa ini bisa berupa tindakan pengguna seperti klik mouse, input keyboard, atau penggunaan form, maupun peristiwa lain seperti pemuatan halaman atau perubahan ukuran jendela. Konsep dasar dari Event Handling melibatkan penggunaan event listener, yaitu mekanisme yang mengaitkan fungsi atau aksi tertentu dengan peristiwa yang terjadi. Dengan menggunakan metode seperti `addEventListener()`, JavaScript dapat menambahkan event listener ke suatu elemen, yang kemudian menangkap event tersebut dan menjalankan aksi yang telah ditetapkan saat event tersebut terjadi. Berbagai jenis event seperti mouse events, keyboard events, form events, dan window events dapat dideteksi dan ditangani oleh JavaScript. Penggunaan Event Handling sangat bervariasi, mulai dari meningkatkan interaktivitas pengguna, validasi form, hingga mengatur animasi atau efek transisi berdasarkan peristiwa yang terjadi. Keseluruhan, Event Handling merupakan fitur yang krusial dalam pengembangan web, memungkinkan pengembang untuk menciptakan pengalaman pengguna yang lebih dinamis, responsif, dan interaktif di dalam aplikasi web.",
            "url_video": "https://youtu.be/YiOlaiscqDY?si=LVzWCqRZf2gql3Za"
          },
          {
            "id": 70,
            "chapter_id": 43,
            "course_id": 12,
            "title": "AJAX & Fetch API",
            "content": "AJAX (Asynchronous JavaScript and XML) dan Fetch API merupakan teknologi yang memungkinkan interaksi asinkronus antara halaman web dan server tanpa perlu memuat ulang halaman secara keseluruhan. Konsep dasar dari AJAX melibatkan penggunaan objek XMLHttpRequest (XHR) yang digunakan untuk mengirim permintaan ke server dan menerima respon tanpa mempengaruhi tampilan keseluruhan halaman. AJAX memungkinkan manipulasi data yang diterima dalam format JSON, XML, atau teks untuk diperbarui di dalam halaman web dengan bantuan event listener yang mendeteksi dan menanggapi respon dari server. Sementara itu, Fetch API adalah API modern dalam JavaScript yang menawarkan pendekatan yang lebih sederhana dan bersih dalam mengelola permintaan HTTP serta menangani respons dari server. Fetch API menggunakan metode `fetch()` yang menghasilkan Promise untuk mengirim permintaan dan menangani respons data dari server. Dengan sintaks yang lebih ringkas dan dukungan terhadap Promise, Fetch API menjadi pilihan yang lebih populer dalam pengembangan aplikasi web modern dibandingkan dengan pendekatan yang lebih klasik seperti AJAX. Kedua teknologi ini digunakan untuk memperbarui konten halaman secara dinamis, memungkinkan pengembang untuk mengambil atau mengirim data dari dan ke server tanpa mengganggu pengalaman pengguna secara keseluruhan. Kemampuan untuk melakukan komunikasi asinkronus ini meningkatkan responsivitas aplikasi web dan memungkinkan perubahan konten yang lebih dinamis tanpa perlu me-refresh halaman secara keseluruhan. Pemahaman yang baik tentang AJAX dan Fetch API menjadi penting dalam pengembangan web modern untuk memperkaya pengalaman pengguna dan meningkatkan kinerja aplikasi web secara keseluruhan.",
            "url_video": "https://youtu.be/ZTQcJWixB1k?si=gLvuMAuPcsC3rnY8"
          },
          {
            "id": 71,
            "chapter_id": 44,
            "course_id": 12,
            "title": "Pengantar Framework Front-End (Contoh: React.js atau Vue.js)",
            "content": "Framework front-end seperti React.js atau Vue.js adalah alat yang sangat berharga dalam pengembangan aplikasi web modern. React.js, yang merupakan sebuah library JavaScript yang dikembangkan oleh Facebook, difokuskan pada pembuatan komponen yang dapat digunakan kembali untuk membangun antarmuka pengguna yang efisien dan dinamis. Dengan fitur seperti Virtual DOM dan JSX, React memungkinkan pengembang untuk membangun aplikasi dengan tampilan yang kompleks dan dinamis. Di sisi lain, Vue.js, sebuah framework JavaScript progresif, menawarkan pendekatan yang mudah diimplementasikan dan fleksibel dalam membangun antarmuka pengguna yang reaktif. Vue juga berbasis komponen dan menawarkan reaktivitas yang kuat, memungkinkan perubahan data untuk secara otomatis diperbarui dalam UI. Kedua framework ini memiliki keunggulan dan kelemahan masing-masing; React dengan kinerja tinggi namun memerlukan kurva pembelajaran yang lebih curam, sementara Vue mudah dipelajari dan diimplementasikan tetapi mungkin memiliki dukungan komunitas yang lebih sedikit. Kedua framework ini memiliki komunitas yang besar, dokumentasi yang baik, serta digunakan secara luas dalam pengembangan web modern, memberikan pengembang berbagai pilihan untuk membangun aplikasi web yang responsif, interaktif, dan sesuai dengan kebutuhan proyek yang mereka kerjakan. Pemilihan antara React.js dan Vue.js seringkali didasarkan pada preferensi pengembang, kompleksitas proyek, dan kebutuhan spesifik aplikasi yang akan dibangun.",
            "url_video": "https://youtu.be/Fzcr0rTVRwo?si=fsbh3DJbL201HVYE"
          },
          {
            "id": 72,
            "chapter_id": 44,
            "course_id": 12,
            "title": "Node.js dan Express",
            "content": "Node.js merupakan lingkungan runtime JavaScript yang menggunakan mesin JavaScript V8 dari Google Chrome untuk menjalankan kode di sisi server. Hal ini memungkinkan pengembang untuk membuat aplikasi web skalabel dan berkinerja tinggi dengan menggunakan JavaScript. Node.js mengadopsi pendekatan event-driven dan non-blocking I/O yang memungkinkan penanganan banyak permintaan secara efisien tanpa menghentikan proses lain. Selain itu, Node.js memiliki sistem modul built-in dan memanfaatkan paket-paket dari npm (Node Package Manager) yang luas. Di sisi lain, Express adalah framework aplikasi web yang berjalan di atas Node.js, menyediakan alat yang membantu dalam pengembangan aplikasi web dengan cepat. Express memiliki fitur seperti sistem routing yang memungkinkan penanganan permintaan HTTP ke endpoint tertentu, middleware untuk pengolahan permintaan sebelum mencapai endpoint, dan dukungan untuk berbagai mesin template. Biasanya, Node.js digunakan sebagai lingkungan runtime untuk menjalankan JavaScript di sisi server, sementara Express memberikan bingkai kerja untuk mempermudah pengembangan aplikasi web di atas Node.js. Kombinasi Node.js dan Express sering digunakan untuk membangun backend aplikasi web, API, atau server untuk aplikasi web modern karena memberikan kecepatan pengembangan yang tinggi dan fleksibilitas dalam membangun aplikasi yang efisien dan skalabel.",
            "url_video": "https://youtu.be/TecGUz4bPFA?si=Y2-NsXJMrOqyMNCJ"
          },
          {
            "id": 73,
            "chapter_id": 44,
            "course_id": 12,
            "title": "Penggunaan Git & Version Control",
            "content": "Git adalah sistem kontrol versi yang memungkinkan pengembang untuk melacak perubahan dalam kode sumber selama pengembangan perangkat lunak. Dengan konsep dasar seperti repository (tempat penyimpanan file proyek beserta riwayat perubahannya), commit (penyimpanan perubahan dengan pesan yang menjelaskan perubahan yang dilakukan), branching (membuat cabang dari kode untuk pengembangan fitur baru atau perbaikan bug), dan merging (menggabungkan perubahan dari satu cabang ke cabang lainnya), Git memberikan pengembang kontrol yang kuat atas kode yang mereka tulis. Penggunaan dasar Git meliputi inisialisasi repositori, perintah seperti add, commit, push, pull, branching, checkout, merge, dan menggunakan hosting platform seperti GitHub atau GitLab untuk kolaborasi tim dan manajemen proyek secara terpusat. Dengan manfaat seperti kolaborasi tim yang efisien, melacak riwayat perubahan, eksperimen yang aman di branch terpisah, serta kemampuan untuk pemulihan cepat saat terjadi masalah, Git menjadi kunci dalam pengembangan perangkat lunak modern, membantu memfasilitasi kolaborasi yang efisien dan pengelolaan kode sumber yang efektif.",
            "url_video": "https://youtu.be/fQbTeNX1mvM?si=UnYU2Zp2HAw21bK7"
          },
          {
            "id": 74,
            "chapter_id": 45,
            "course_id": 12,
            "title": "Pengembangan Proyek Web",
            "content": "Pengembangan proyek web merupakan serangkaian proses mulai dari perencanaan hingga peluncuran serta pemeliharaan aplikasi atau situs web. Tahap awal mencakup perencanaan yang mencakup definisi tujuan, penentuan lingkup, dan penyusunan rencana kerja. Desain melibatkan pembuatan wireframe, mockup, dan arsitektur teknis yang mendukung aplikasi. Tahap pengembangan melibatkan penulisan kode, pengujian, dan pengembangan perangkat lunak. Setelah itu, dilakukan peluncuran awal dan pemilihan platform hosting yang tepat. Tahap pemeliharaan dan pengembangan lanjutan menjadi esensial untuk memastikan kelangsungan aplikasi dengan perbaikan bug, pembaruan, serta penambahan fitur. Ada berbagai metode pengembangan seperti waterfall, agile, dan scrum, dengan penggunaan beragam alat dan teknologi seperti bahasa pemrograman, framework, database, dan platform hosting. Tantangan dalam pengembangan termasuk perubahan persyaratan, kinerja, keamanan, dan ketersediaan sumber daya. Dengan perencanaan yang matang, pemilihan metode yang tepat, serta penggunaan alat dan teknologi yang sesuai, pengembangan proyek web dapat menghasilkan aplikasi atau situs web yang sukses dan sesuai dengan kebutuhan pengguna.",
            "url_video": "https://youtu.be/vnZ4LEMhap4?si=V99TnDrJli4ajsMj"
          },
          {
            "id": 75,
            "chapter_id": 45,
            "course_id": 12,
            "title": "Optimisasi & Debugging",
            "content": "Optimisasi dan debugging merupakan proses krusial dalam pengembangan perangkat lunak yang bertujuan untuk meningkatkan kualitas, performa, dan kehandalan aplikasi. Optimisasi melibatkan perbaikan dalam kode, performa aplikasi, dan pengaturan pada berbagai tingkatan seperti front-end, back-end, serta database. Ini melibatkan strategi untuk meminimalkan ukuran file, mempercepat waktu respon server, dan memperbaiki kueri database. Pemantauan kinerja dan analisis data menjadi penting untuk mengidentifikasi area yang memerlukan perbaikan. Sementara itu, debugging melibatkan identifikasi masalah, isolasi bug dalam kode, dan perbaikan kode untuk memastikan perbaikan telah mengatasi masalah tanpa menimbulkan dampak negatif lainnya. Alat debugging seperti debugger, logging, dan monitoring digunakan untuk membantu dalam mengidentifikasi serta memperbaiki kesalahan atau perilaku tidak diinginkan. Keduanya memiliki peran yang krusial: optimisasi untuk meningkatkan performa dan kualitas, sedangkan debugging untuk memastikan stabilitas dan keandalan aplikasi. Dengan menerapkan praktik-praktik ini secara terus-menerus, aplikasi dapat ditingkatkan secara signifikan dalam hal performa, kualitas, dan keandalan.",
            "url_video": "https://youtu.be/C2Pv_ZHUdv0?si=1-KChuom0iSsH4EE"
          },
          {
            "id": 76,
            "chapter_id": 45,
            "course_id": 12,
            "title": "Deployment & Hosting",
            "content": "Deployment dan hosting merupakan dua tahapan penting dalam siklus pengembangan perangkat lunak, khususnya dalam konteks aplikasi web. Deployment merujuk pada proses memindahkan aplikasi dari lingkungan pengembangan ke lingkungan produksi, memungkinkan aplikasi tersebut dapat diakses oleh pengguna. Tahapan-tahapan deployment meliputi pemilihan lingkungan, pemrosesan aplikasi, konfigurasi untuk lingkungan produksi, pengujian terakhir, dan pengiriman ke server atau platform hosting. Sementara hosting adalah layanan yang menyediakan ruang dan infrastruktur untuk menyimpan serta menjalankan aplikasi atau situs web sehingga dapat diakses melalui internet. Ada beberapa tipe hosting seperti shared hosting, VPS hosting, dedicated hosting, dan cloud hosting, masing-masing dengan kelebihan dan tujuan penggunaan yang berbeda. Pilihan platform hosting seperti AWS, Heroku, atau DigitalOcean, juga menjadi kunci dalam menentukan ketersediaan, kinerja, dan stabilitas aplikasi di lingkungan produksi. Keduanya, deployment dan hosting, berperan penting dalam memastikan aplikasi dapat diakses secara online dengan kinerja dan keandalan yang optimal setelah selesai dikembangkan.",
            "url_video": "https://youtu.be/pXHkqQz8xlE?si=IddvUsKMcwPv0mbL"
          }
        ],
        "userProgress": [
          {
            "id": 19,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 42,
            "course_material_id": 64,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 20,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 42,
            "course_material_id": 65,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 21,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 42,
            "course_material_id": 66,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 22,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 43,
            "course_material_id": 67,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 23,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 43,
            "course_material_id": 69,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 24,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 43,
            "course_material_id": 70,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 25,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 44,
            "course_material_id": 71,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 26,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 44,
            "course_material_id": 72,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 27,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 44,
            "course_material_id": 73,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 28,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 45,
            "course_material_id": 74,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 29,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 45,
            "course_material_id": 75,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 30,
            "user_id": 2,
            "course_id": 12,
            "chapter_id": 45,
            "course_material_id": 76,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 58,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 42,
            "course_material_id": 64,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 59,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 42,
            "course_material_id": 65,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 60,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 42,
            "course_material_id": 66,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 61,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 43,
            "course_material_id": 67,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 62,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 43,
            "course_material_id": 69,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 63,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 43,
            "course_material_id": 70,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 64,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 44,
            "course_material_id": 71,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 65,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 44,
            "course_material_id": 72,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 66,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 44,
            "course_material_id": 73,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 67,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 45,
            "course_material_id": 74,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 68,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 45,
            "course_material_id": 75,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 69,
            "user_id": 13,
            "course_id": 12,
            "chapter_id": 45,
            "course_material_id": 76,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 88,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 42,
            "course_material_id": 64,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 89,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 42,
            "course_material_id": 65,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 90,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 42,
            "course_material_id": 66,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 91,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 43,
            "course_material_id": 67,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 92,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 43,
            "course_material_id": 69,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 93,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 43,
            "course_material_id": 70,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 94,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 44,
            "course_material_id": 71,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 95,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 44,
            "course_material_id": 72,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 96,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 44,
            "course_material_id": 73,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 97,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 45,
            "course_material_id": 74,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 98,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 45,
            "course_material_id": 75,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 99,
            "user_id": 14,
            "course_id": 12,
            "chapter_id": 45,
            "course_material_id": 76,
            "is_completed": false,
            "completed_at": null
          }
        ],
        "ratings": []
      },
      "enrolled_at": "2023-12-14T12:27:04.751Z",
      "is_completed": false,
      "progressPercentage": 0,
      "userProgress": [
        {
          "id": 19,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 64,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 20,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 65,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 21,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 66,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 22,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 67,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 23,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 69,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 24,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 70,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 25,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 71,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 26,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 72,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 27,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 73,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 28,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 74,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 29,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 75,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 30,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 76,
          "is_completed": false,
          "completed_at": null
        }
      ],
      "averageRating": null
    },
    {
      "course": {
        "id": 13,
        "title": "Data Analyst Skillpath: Beginner in Excel, SQL & Python",
        "description": "Course komprehensif ini dirancang untuk membimbing calon Data Analyst dari pengetahuan dasar hingga level yang kompeten dalam menggunakan alat-alat penting untuk manipulasi, analisis, dan visualisasi data. Course ini terbagi menjadi tiga chapter yang berbeda, masing-masing didedikasikan untuk aspek penting dalam analisis data, yaitu Excel, SQL, dan Python.",
        "price": 0,
        "type_course": "free",
        "level": "pemula",
        "url_group": "www.discord.com/backend2",
        "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231213_3mBHL1HDf",
        "createdAt": "2023-12-08T23:30:50.407Z",
        "updatedAt": "2023-12-13T16:04:29.453Z",
        "category_id": 6,
        "chapters": [
          {
            "id": 46,
            "title": "Chapter 1: Dasar Excel",
            "course_id": 13,
            "content": "Chapter pertama ini bertujuan untuk memperkenalkan dan memperdalam pemahaman peserta dalam penggunaan Excel untuk manipulasi data. Materi dimulai dengan pengenalan antarmuka Excel serta navigasi dasar dalam spreadsheet. Peserta akan belajar tentang penggunaan formula dan referensi sel untuk melakukan perhitungan dan manipulasi data secara efisien. Selain itu, mereka akan mempelajari teknik penyaringan dan pengurutan data, serta penerapan fungsi seperti SUM, AVERAGE, IF, dan VLOOKUP untuk analisis data. Bab ini juga mengajarkan cara membuat grafik dan diagram untuk memvisualisasikan data dengan lebih efektif."
          },
          {
            "id": 47,
            "title": "Chapter 2: Dasar-dasar SQL",
            "course_id": 13,
            "content": "Chapter kedua fokus pada pengenalan dasar SQL untuk mengakses dan mengelola data dalam basis data relasional. Materi dimulai dengan memahami struktur dasar bahasa SQL, termasuk penggunaan perintah SELECT, FROM, dan WHERE. Peserta akan belajar bagaimana melakukan kueri data dari tabel, menerapkan teknik penyaringan, pengurutan, dan pengelompokan data, serta memahami konsep operasi join untuk menggabungkan data dari berbagai tabel. Bab ini juga mencakup teknik manipulasi data seperti menyisipkan, memperbarui, dan menghapus data, serta penggunaan fungsi agregasi untuk analisis data yang lebih mendalam."
          },
          {
            "id": 48,
            "title": "Chapter 3: Python untuk Analisis Data",
            "course_id": 13,
            "content": "Chapter terakhir kursus ini membahas penggunaan Python sebagai alat untuk analisis data. Materi dimulai dengan pengenalan dasar bahasa pemrograman Python serta penggunaan perpustakaan Pandas untuk manipulasi data. Peserta akan mempelajari cara memuat dan membersihkan dataset, serta menerapkan transformasi data menggunakan Pandas. Selain itu, bab ini juga mengajarkan penggunaan perpustakaan Matplotlib untuk menciptakan visualisasi data yang informatif, membantu peserta dalam menyampaikan temuan analisis secara visual dan jelas."
          }
        ],
        "materials": [
          {
            "id": 77,
            "chapter_id": 46,
            "course_id": 13,
            "title": "Pengenalan Excel",
            "content": "Pengenalan Excel adalah fondasi utama dalam analisis data dan pengelolaan informasi menggunakan spreadsheet. Microsoft Excel, yang sering digunakan, memiliki antarmuka pengguna yang terdiri dari toolbar, ribbon, dan worksheet yang terdiri dari sel-sel tempat data dimasukkan. Di dalamnya, formula dan berbagai fungsi bawaan seperti SUM, AVERAGE, dan VLOOKUP memungkinkan perhitungan matematis serta analisis data. Excel memungkinkan pengguna untuk menyortir, menyaring, dan mengelompokkan data, sementara kemampuannya dalam membuat grafik dan diagram memudahkan visualisasi data untuk pemahaman pola dan tren. Dengan fitur analisis statistik sederhana, pemformatan data, dan kemampuan berbagi data secara online, Excel menjadi alat yang vital dalam berbagai bidang, memungkinkan pengguna untuk melakukan tugas analitis dengan efisien dan efektif.",
            "url_video": "https://youtu.be/vbMA72Kl8rw?si=0PzGok3gMaIMuF32"
          },
          {
            "id": 78,
            "chapter_id": 46,
            "course_id": 13,
            "title": "Manipulasi Data di Excel",
            "content": "Manipulasi data di Excel melibatkan serangkaian proses yang memungkinkan pengguna untuk mengelola informasi dengan efisien di dalam spreadsheet. Ini mencakup beragam fitur yang sangat berguna, seperti penyortiran data untuk mengatur data berdasarkan nilai tertentu, penyaringan data untuk menampilkan entri yang memenuhi kriteria yang ditentukan, dan penggunaan fungsi dan formula untuk melakukan perhitungan matematis serta analisis data. Selain itu, pengguna juga dapat melakukan manipulasi teks dan data, mengaplikasikan validasi data untuk memastikan konsistensi, serta menggunakan pengaturan kondisional untuk memberikan format pada sel berdasarkan aturan tertentu. Dengan beragam fitur ini, Excel memungkinkan pengguna untuk mengubah, menyajikan, dan menganalisis data dengan lebih efisien, memudahkan pemahaman informasi yang terdapat dalam dataset yang mereka kelola.",
            "url_video": "https://youtu.be/svoHIomyE2c?si=y42n1tQa7RVn84Ub"
          },
          {
            "id": 79,
            "chapter_id": 46,
            "course_id": 13,
            "title": "Grafik dan Diagram di Excel",
            "content": "Grafik dan diagram merupakan fitur kunci dalam Excel yang memfasilitasi pengguna dalam memvisualisasikan data secara lebih menarik dan mudah dipahami. Dalam Excel, tersedia berbagai jenis grafik, seperti grafik garis, batang, pie, dan scatter plot, yang dapat dipilih sesuai dengan jenis data yang ingin disajikan. Proses pembuatan grafik melibatkan pemilihan data yang ingin divisualisasikan dan pemilihan jenis grafik yang tepat dari menu Excel, kemudian dapat disesuaikan dengan menambahkan judul, sumbu, label, serta mengatur tata letak dan gaya visual. Selain grafik, Excel juga menyediakan berbagai jenis diagram, seperti diagram batang atau lingkaran, yang membantu dalam menggambarkan proporsi data dengan jelas. Fitur-fitur manipulasi yang ada memungkinkan pengguna untuk menyesuaikan konfigurasi grafik, termasuk pengaturan warna, tata letak, serta menambahkan elemen tambahan seperti garis tren atau label data. Grafik dan diagram dalam Excel menjadi alat yang sangat berguna dalam memvisualisasikan tren, perbandingan, dan distribusi data, memungkinkan pengguna untuk dengan cepat menganalisis dan memahami informasi yang terkandung dalam dataset dengan lebih efektif.",
            "url_video": "https://youtu.be/iUU391GgDaY?si=X9oWciScqfIBOqAJ"
          },
          {
            "id": 80,
            "chapter_id": 47,
            "course_id": 13,
            "title": "Pengenalan SQL",
            "content": "Pengenalan SQL (Structured Query Language) merupakan fondasi krusial dalam mengelola dan mengambil data dari basis data relasional. SQL adalah bahasa yang digunakan untuk berinteraksi dengan basis data, memungkinkan pengguna untuk melakukan operasi seperti pengambilan data, manipulasi data, dan mengelola struktur basis data. Bahasa ini terdiri dari pernyataan-pernyataan yang mencakup SELECT, INSERT, UPDATE, DELETE, dan pernyataan DDL (Data Definition Language) seperti CREATE, ALTER, DROP untuk mengatur struktur tabel. Klausa seperti WHERE digunakan untuk menentukan kriteria dalam operasi yang dilakukan. Fungsi dan operasi matematis serta string seperti SUM, AVG, COUNT, MAX, MIN, JOIN, GROUP BY, ORDER BY memungkinkan pengguna untuk melakukan perhitungan, agregasi, dan pengelompokan data dengan efisiensi tinggi. SQL juga memungkinkan pengambilan data menggunakan pernyataan SELECT, pengelolaan data dengan INSERT, UPDATE, DELETE, serta penggabungan data dari tabel berbeda dengan operasi JOIN, memanfaatkan kunci relasi antar tabel. Pengelolaan struktur basis data seperti pembuatan, modifikasi, dan penghapusan tabel juga dapat dilakukan menggunakan pernyataan DDL. Kemampuan untuk menguasai SQL menjadi keterampilan yang sangat berharga dalam mengelola data, memungkinkan pengguna untuk melakukan berbagai operasi esensial terkait basis data relasional dengan kemudahan dan ketepatan.",
            "url_video": "https://youtu.be/MXMVPgcN-gY?si=L6xx5KQfAnoogBKq"
          },
          {
            "id": 81,
            "chapter_id": 47,
            "course_id": 13,
            "title": "Pengambilan Data",
            "content": "Pengambilan data dalam SQL adalah proses inti untuk mengekstrak informasi dari basis data relasional. Ini dilakukan melalui pernyataan SELECT, yang memungkinkan pengguna untuk menentukan data yang ingin diambil dari tabel-tabel dalam basis data. Klausa-klausa seperti FROM digunakan untuk menunjukkan tabel yang diinginkan, sedangkan klausa WHERE digunakan untuk menerapkan filter pada data yang diambil berdasarkan kriteria tertentu. Klausa ORDER BY membantu dalam pengurutan data, sementara klausa GROUP BY digunakan untuk mengelompokkan data. Fungsi agregasi seperti SUM, AVG, COUNT, dan lainnya digunakan untuk melakukan perhitungan statistik pada data yang diambil. Operasi JOIN memungkinkan pengguna untuk menggabungkan data dari beberapa tabel berdasarkan kunci relasional. Subquery atau nested query memungkinkan pengguna untuk menjalankan kueri di dalam kueri, memberikan fleksibilitas tambahan dalam mengekstrak informasi yang kompleks dari basis data. Pengambilan data dalam SQL merupakan pondasi utama untuk analisis data yang efektif, memungkinkan pengguna untuk mengekstrak informasi yang relevan dan spesifik dari basis data yang mereka kelola.",
            "url_video": "https://youtu.be/WWxoeVL8Brs?si=pA24hucYyft7tzxC"
          },
          {
            "id": 82,
            "chapter_id": 47,
            "course_id": 13,
            "title": "Manipulasi Data dengan SQL",
            "content": "Manipulasi data dengan SQL melibatkan sejumlah operasi yang penting untuk mengubah, mengelola, dan mengatur data di dalam basis data relasional. Pernyataan SQL seperti INSERT digunakan untuk menambahkan baris data baru ke dalam tabel, sedangkan pernyataan UPDATE memungkinkan pembaruan nilai dalam baris yang ada. Pernyataan DELETE memungkinkan pengguna untuk menghapus baris dari tabel berdasarkan kriteria tertentu. Selain itu, SQL juga menyediakan perintah-perintah Data Definition Language (DDL) seperti CREATE TABLE untuk membuat tabel baru, ALTER TABLE untuk mengubah struktur tabel yang ada, dan DROP TABLE untuk menghapus tabel dari basis data. Di samping itu, fitur transaksi dalam SQL memastikan kelengkapan eksekusi serangkaian perintah atau dapat membatalkannya secara keseluruhan jika diperlukan. Manipulasi data dengan SQL memberikan kontrol yang kuat kepada pengguna untuk memanipulasi dan mengelola data sesuai kebutuhan dalam basis data relasional. Hal ini memungkinkan pengguna untuk menjaga keakuratan, konsistensi, dan integritas data dalam sistem basis data mereka.",
            "url_video": "https://youtu.be/lhVqna6WFVs?si=hTI_-WtGe_FvDu5b"
          },
          {
            "id": 83,
            "chapter_id": 48,
            "course_id": 13,
            "title": "Pengenalan Python",
            "content": "Python adalah bahasa pemrograman tingkat tinggi yang populer dan serbaguna. Dikenal dengan sintaksis yang mudah dipahami, Python menjadi pilihan utama bagi pemula dalam pemrograman karena strukturnya yang mirip dengan bahasa Inggris. Kelebihan Python terletak pada kemampuannya dalam beragam pengembangan perangkat lunak, termasuk web, analisis data, kecerdasan buatan, jaringan, dan lainnya. Python juga mendukung metode interpretasi dan kompilasi, memberikan fleksibilitas dalam cara menjalankan kode. Kemampuan dinamisnya dan manajemen tipe data yang kuat memungkinkan pengguna tidak perlu mendeklarasikan tipe variabel secara eksplisit. Selain itu, Python memiliki beragam pustaka dan framework yang memperluas fungsionalitasnya di berbagai bidang. Dukungan Python terhadap paradigma pemrograman yang beragam, seperti berorientasi objek, fungsional, dan prosedural, menjadikannya alat yang fleksibel dalam menyelesaikan berbagai macam masalah pemrograman. Keunggulan ini, bersama dengan komunitas yang besar dan aktif, serta dokumentasi yang kuat, menjadikan Python sebagai salah satu bahasa pemrograman yang diminati dalam pengembangan solusi perangkat lunak yang efisien dan kuat.",
            "url_video": "https://youtu.be/iA8lLwmtKQM?si=-jn5V1Grli1CWBuA"
          },
          {
            "id": 84,
            "chapter_id": 48,
            "course_id": 13,
            "title": "Penanganan Data dengan Pandas",
            "content": "Pandas merupakan pustaka yang sangat populer dalam pemrosesan dan analisis data menggunakan Python. Diintegrasikan dengan Python, Pandas menyediakan struktur data utama seperti DataFrame, yang mirip dengan tabel spreadsheet, serta Series, yang merupakan struktur data satu dimensi. Pustaka ini memudahkan pengguna dalam membaca dan menulis data dari berbagai format seperti CSV, Excel, SQL, JSON, dan HTML, memungkinkan impor data dari berbagai sumber. Selain itu, Pandas menawarkan kemampuan manipulasi data yang luas, termasuk seleksi, pengindeksan, pengelompokan, dan pemrosesan data tanggal-waktu. Dalam pengolahan data, Pandas menyediakan berbagai fungsi statistik bawaan, memungkinkan operasi penggabungan data, pengurutan, serta penanganan nilai yang hilang. Selain itu, Pandas dapat berkolaborasi dengan pustaka visualisasi seperti Matplotlib dan Seaborn untuk menciptakan visualisasi data yang informatif. Keunggulan Pandas juga terletak pada kemampuannya mengoptimalkan kinerja dalam memproses data besar dengan teknik vektorisasi dan pengindeksan yang efisien. Secara keseluruhan, Pandas memberikan kemudahan dan kekuatan dalam mengelola, membersihkan, menganalisis, dan memvisualisasikan data, menjadikannya alat yang sangat berharga dalam analisis data dengan Python.",
            "url_video": "https://youtu.be/ma4rv9RFqtk?si=zo2aCI8kyOrAz5DP"
          },
          {
            "id": 85,
            "chapter_id": 48,
            "course_id": 13,
            "title": "Visualisasi Data dengan Matplotlib",
            "content": "Matplotlib merupakan pustaka visualisasi data yang sangat penting dalam analisis data menggunakan Python. Pustaka ini menawarkan beragam jenis grafik seperti grafik garis, batang, histogram, scatter plot, dan lainnya. Dalam menggunakan Matplotlib, pengguna memanfaatkan konsep objek (Figure) sebagai jendela utama visualisasi dan (Axes) sebagai area di dalamnya untuk menampilkan data. Pembuatan grafik dilakukan dengan menggunakan fungsi-fungsi seperti `plot()`, `scatter()`, `bar()`, dan sejenisnya, yang dapat disesuaikan dengan penambahan judul, label sumbu, label data, serta penyesuaian visual seperti warna, gaya garis, dan jenis marker. Pengguna juga dapat membuat subplot, yaitu beberapa grafik dalam satu tampilan, serta menyimpan grafik yang dihasilkan dalam berbagai format file. Selain itu, Matplotlib dapat berkolaborasi dengan pustaka lain seperti Pandas dan Seaborn untuk menyederhanakan proses pembuatan grafik dari data dalam DataFrame. Dengan kemampuannya yang kuat dalam visualisasi data, Matplotlib memungkinkan pengguna untuk menyajikan informasi dengan lebih jelas dan menarik, membantu dalam menggambarkan pola, tren, dan temuan penting dari analisis data.",
            "url_video": "https://youtu.be/5ISmXYJMxmI?si=84yZbNghfCpgOzbr"
          }
        ],
        "userProgress": [
          {
            "id": 11,
            "user_id": 2,
            "course_id": 13,
            "chapter_id": 46,
            "course_material_id": 78,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 12,
            "user_id": 2,
            "course_id": 13,
            "chapter_id": 46,
            "course_material_id": 79,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 13,
            "user_id": 2,
            "course_id": 13,
            "chapter_id": 47,
            "course_material_id": 80,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 14,
            "user_id": 2,
            "course_id": 13,
            "chapter_id": 47,
            "course_material_id": 81,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 15,
            "user_id": 2,
            "course_id": 13,
            "chapter_id": 47,
            "course_material_id": 82,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 16,
            "user_id": 2,
            "course_id": 13,
            "chapter_id": 48,
            "course_material_id": 83,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 17,
            "user_id": 2,
            "course_id": 13,
            "chapter_id": 48,
            "course_material_id": 84,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 18,
            "user_id": 2,
            "course_id": 13,
            "chapter_id": 48,
            "course_material_id": 85,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 49,
            "user_id": 13,
            "course_id": 13,
            "chapter_id": 46,
            "course_material_id": 77,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 50,
            "user_id": 13,
            "course_id": 13,
            "chapter_id": 46,
            "course_material_id": 78,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 51,
            "user_id": 13,
            "course_id": 13,
            "chapter_id": 46,
            "course_material_id": 79,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 52,
            "user_id": 13,
            "course_id": 13,
            "chapter_id": 47,
            "course_material_id": 80,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 53,
            "user_id": 13,
            "course_id": 13,
            "chapter_id": 47,
            "course_material_id": 81,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 54,
            "user_id": 13,
            "course_id": 13,
            "chapter_id": 47,
            "course_material_id": 82,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 55,
            "user_id": 13,
            "course_id": 13,
            "chapter_id": 48,
            "course_material_id": 83,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 56,
            "user_id": 13,
            "course_id": 13,
            "chapter_id": 48,
            "course_material_id": 84,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 57,
            "user_id": 13,
            "course_id": 13,
            "chapter_id": 48,
            "course_material_id": 85,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 100,
            "user_id": 14,
            "course_id": 13,
            "chapter_id": 46,
            "course_material_id": 77,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 101,
            "user_id": 14,
            "course_id": 13,
            "chapter_id": 46,
            "course_material_id": 78,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 102,
            "user_id": 14,
            "course_id": 13,
            "chapter_id": 46,
            "course_material_id": 79,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 103,
            "user_id": 14,
            "course_id": 13,
            "chapter_id": 47,
            "course_material_id": 80,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 104,
            "user_id": 14,
            "course_id": 13,
            "chapter_id": 47,
            "course_material_id": 81,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 105,
            "user_id": 14,
            "course_id": 13,
            "chapter_id": 47,
            "course_material_id": 82,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 106,
            "user_id": 14,
            "course_id": 13,
            "chapter_id": 48,
            "course_material_id": 83,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 107,
            "user_id": 14,
            "course_id": 13,
            "chapter_id": 48,
            "course_material_id": 84,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 108,
            "user_id": 14,
            "course_id": 13,
            "chapter_id": 48,
            "course_material_id": 85,
            "is_completed": false,
            "completed_at": null
          },
          {
            "id": 10,
            "user_id": 2,
            "course_id": 13,
            "chapter_id": 46,
            "course_material_id": 77,
            "is_completed": true,
            "completed_at": "2023-12-21T03:39:15.838Z"
          }
        ],
        "ratings": []
      },
      "enrolled_at": "2023-12-14T10:25:13.999Z",
      "is_completed": false,
      "progressPercentage": 11.11111111111111,
      "userProgress": [
        {
          "id": 11,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 78,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 12,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 79,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 13,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 80,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 14,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 81,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 15,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 82,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 16,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 83,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 17,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 84,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 18,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 85,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 10,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 77,
          "is_completed": true,
          "completed_at": "2023-12-21T03:39:15.838Z"
        }
      ],
      "averageRating": null
    }
  ]
}