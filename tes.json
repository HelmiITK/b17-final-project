{
  "status": "success",
  "message": "Data for all courses successfully obtained!",
  "courses": [
    {
      "id": 18,
      "title": "JAVASCRIPT: TUTORIAL PAYMENT GATEWAY MIDTRANS",
      "description": "Course ini bertujuan untuk memberikan pemahaman mendalam tentang penggunaan Midtrans sebagai gateway pembayaran dalam pengembangan aplikasi web menggunakan JavaScript. Kursus ini dirancang untuk membantu pengembang memahami konsep dasar, implementasi praktis, dan integrasi lanjutan dengan Midtrans, sebuah platform pembayaran yang populer di Indonesia dan di seluruh dunia.",
      "target_audience": [
        "Pengembang Web Full Stackt",
        "Pengembang Front-end atau Back-end",
        "Mahasiswa atau Siswa Teknik Informatika"
      ],
      "prerequisite": [
        "Pemahaman Dasar JavaScript",
        "Pemahaman Dasar tentang Pengembangan Web",
        "Kemauan untuk Belajar API payment",
        "Kemampuan Menggunakan Terminal atau Command Line"
      ],
      "price": 245000,
      "type_course": "premium",
      "level": "lanjutan",
      "url_group": "www.discord.com/backend2",
      "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231215_RqqIj9wfP",
      "createdAt": "2023-12-15T10:35:13.206Z",
      "updatedAt": "2023-12-22T10:26:29.212Z",
      "category_id": 3,
      "chapters": [
        {
          "id": 67,
          "title": "Chapter 1 - Midtrans Fundamentals",
          "course_id": 18,
          "content": "Chapter ini memperkenalkan peserta kursus pada konsep dasar dari Midtrans sebagai gateway pembayaran. Anda akan belajar tentang sejarah, manfaat, dan prinsip dasar yang mendasari operasi platform ini. Selain itu, chapter ini akan membimbing langkah-langkah dalam menyiapkan akun Midtrans yang diperlukan untuk memulai integrasi pembayaran."
        },
        {
          "id": 68,
          "title": "Chapter 2 - Implementing Midtrans Checkout",
          "course_id": 18,
          "content": "Dalam Chapter ini, peserta akan belajar bagaimana mengimplementasikan proses checkout menggunakan Midtrans. Termasuk di dalamnya adalah pembuatan token transaksi yang diperlukan untuk memulai pembayaran, integrasi Snap.js untuk menciptakan antarmuka pembayaran yang responsif, dan bagaimana mengelola peristiwa yang terkait dengan proses pembayaran."
        },
        {
          "id": 69,
          "title": "Chapter 3 - Advanced Integrations and Security",
          "course_id": 18,
          "content": "Chapter ini akan membahas integrasi yang lebih mendalam dengan Midtrans. Peserta akan mempelajari cara menyesuaikan formulir pembayaran, menambahkan fitur tambahan ke integrasi, dan akan diberikan wawasan tentang praktik keamanan terbaik yang diperlukan untuk melindungi data pengguna dan transaksi."
        }
      ],
      "materials": [
        {
          "id": 132,
          "chapter_id": 67,
          "course_id": 18,
          "title": "Midtrans Introduction",
          "content": "Midtrans adalah sebuah perusahaan yang menyediakan layanan pembayaran online terkemuka di Indonesia dan Asia Tenggara. Didirikan pada tahun 2012 sebagai Veritrans Indonesia, kemudian berganti nama menjadi Midtrans setelah diakuisisi oleh Gojek pada tahun 2017. Platform ini memfasilitasi proses pembayaran dengan berbagai metode seperti kartu kredit, debit, transfer bank, dan dompet digital seperti GoPay, OVO, dan Dana. Midtrans menekankan keamanan transaksi dengan penerapan standar tinggi seperti enkripsi data, verifikasi 3D Secure, dan kepatuhan terhadap standar keamanan PCI DSS. Mereka menyediakan dokumentasi lengkap dan alat bantu seperti Snap.js untuk mempermudah integrasi pembayaran ke dalam aplikasi web dan seluler. Dengan fokus pada kemudahan integrasi, keamanan, dan beragamnya metode pembayaran, Midtrans menjadi pilihan terpercaya bagi bisnis dan pengembang aplikasi dalam mengimplementasikan solusi pembayaran online.",
          "url_video": "https://youtu.be/PfcqkIOk6so?si=05DKANTI9hDLU3kq"
        },
        {
          "id": 133,
          "chapter_id": 67,
          "course_id": 18,
          "title": "Setting Up Your Midtrans Account",
          "content": "Proses penyiapan akun Midtrans merupakan langkah kunci dalam memulai integrasi layanan pembayaran mereka ke dalam aplikasi Anda. Tahapan pertama melibatkan registrasi akun melalui situs web resmi Midtrans dengan mengisi formulir yang memuat informasi perusahaan, seperti nama, alamat email, nomor telepon, dan rincian penting lainnya. Setelah proses registrasi, tahap verifikasi identitas mungkin diperlukan dengan mengunggah dokumen-dokumen perusahaan seperti surat izin usaha atau dokumen resmi lainnya. Setelah akun diverifikasi, akses ke dashboard akun akan diberikan, memungkinkan Anda mengonfigurasi preferensi, memilih opsi pembayaran yang ingin diaktifkan, serta mendapatkan kunci API dan sandi rahasia untuk integrasi. Langkah berikutnya adalah melakukan integrasi dan uji coba transaksi untuk memastikan keberhasilan proses pembayaran. Di lingkungan pengembangan, Anda dapat menggunakan fasilitas uji coba yang disediakan oleh Midtrans. Setelah integrasi selesai, pemantauan transaksi, tinjauan laporan keuangan, dan pemeliharaan secara berkala sangat penting untuk menjaga keandalan layanan pembayaran. Penting untuk mengikuti panduan resmi yang disediakan oleh Midtrans untuk menjalankan langkah-langkah ini dengan tepat sesuai kebutuhan bisnis dan persyaratan yang berlaku.",
          "url_video": "https://youtu.be/OGrNNMVXlJA?si=ESMt_G3Jm7TEYvDi"
        },
        {
          "id": 134,
          "chapter_id": 67,
          "course_id": 18,
          "title": "Understanding Midtrans API",
          "content": "API Midtrans adalah serangkaian antarmuka pemrograman aplikasi yang dipersembahkan oleh Midtrans untuk menghubungkan aplikasi atau situs web dengan layanan pembayaran yang mereka tawarkan. Melalui API ini, pengembang dapat mengintegrasikan fungsionalitas penuh Midtrans ke dalam aplikasi mereka. Ini mencakup operasi-operasi seperti penciptaan transaksi, pengecekan status pembayaran, manajemen daftar pembayaran, dan lainnya dengan menggunakan permintaan HTTP ke endpoint yang disediakan oleh Midtrans. Penggunaan API ini membutuhkan autentikasi yang tepat menggunakan kunci API dan sandi rahasia yang diberikan saat pendaftaran akun. Midtrans menyediakan dokumentasi yang lengkap mengenai penggunaan API, mencakup endpoint, parameter yang dibutuhkan, serta contoh-contoh penggunaan. Keamanan transaksi ditegakkan melalui protokol enkripsi dan standar keamanan PCI DSS untuk melindungi informasi sensitif. Dengan memahami API Midtrans secara mendalam, pengembang dapat memanfaatkan layanan pembayaran mereka dengan baik, memastikan integrasi yang lancar, dan memberikan pengalaman pembayaran yang aman dan efisien kepada pengguna aplikasi.",
          "url_video": "https://youtu.be/FOHJQwst1uw?si=yl35AXPY6-LBOWZg"
        },
        {
          "id": 135,
          "chapter_id": 68,
          "course_id": 18,
          "title": "Generating Transaction Token ",
          "content": "Pembuatan token transaksi merupakan langkah esensial dalam proses pembayaran melalui Midtrans API. Token ini berfungsi sebagai kunci unik yang digunakan untuk mengidentifikasi dan menginisiasi setiap transaksi pembayaran. Proses penciptaan token terjadi saat pengembang mengirim permintaan API ke endpoint yang relevan dengan parameter transaksi yang dibutuhkan, seperti jumlah pembayaran, deskripsi transaksi, dan metode pembayaran yang dipilih. Midtrans kemudian menghasilkan token unik yang akan digunakan sebagai referensi untuk memulai dan melacak proses pembayaran. Selain itu, token transaksi juga membantu meningkatkan keamanan transaksi dengan mengurangi penyimpanan informasi sensitif di sisi aplikasi dan memastikan data-data penting dikelola dengan aman oleh Midtrans. Proses integrasi dengan API Midtrans memerlukan pemahaman tentang cara mengirimkan permintaan untuk menciptakan token transaksi dan parameter yang diperlukan, yang dijelaskan dalam dokumentasi resmi Midtrans. Keseluruhan, pembuatan token transaksi memainkan peran krusial dalam mengamankan transaksi pembayaran dan memastikan setiap transaksi memiliki identifikasi unik dalam sistem.",
          "url_video": "https://youtu.be/tdDARiQOmZE?si=ZQje7vGF1dFEifBj"
        },
        {
          "id": 136,
          "chapter_id": 68,
          "course_id": 18,
          "title": "Integrating Snap.js",
          "content": "Mengintegrasikan Snap.js ke dalam aplikasi web Anda merupakan langkah penting saat memanfaatkan layanan Midtrans, karena memungkinkan pengalaman pembayaran yang lancar dan ramah pengguna. Snap.js berfungsi sebagai perpustakaan JavaScript resmi yang disediakan oleh Midtrans, memfasilitasi pembuatan antarmuka pembayaran yang responsif dan berpusat pada pengguna dalam aplikasi web Anda. Pustaka ini menyederhanakan dan menyederhanakan proses pembayaran dengan menawarkan jendela pembayaran siap pakai yang dapat dengan mudah disesuaikan agar sesuai dengan kebutuhan spesifik aplikasi Anda. Integrasi Snap.js menghadirkan beberapa keuntungan, terutama dalam mengurangi waktu dan kompleksitas pengembangan dengan menyediakan antarmuka pembayaran yang siap pakai. Dengan memasukkan skrip Snap.js ke halaman web Anda dan memanfaatkan fungsinya, seperti 'MidtransSnap.render', pengembang dapat menyesuaikan jendela pembayaran untuk menentukan metode pembayaran, mengonfigurasi tampilan, dan mengelola respons selama proses pembayaran. Intinya, integrasi Snap.js menyederhanakan proses pembayaran, meningkatkan pengalaman pengguna secara keseluruhan, dan menjamin keamanan transaksi. Memanfaatkan Snap.js memberdayakan pengembang untuk menciptakan antarmuka pembayaran yang sangat responsif dan terintegrasi dengan mulus yang mematuhi standar UI/UX Midtrans dalam aplikasi web mereka.",
          "url_video": "https://youtu.be/cI6OaTH8E-w?si=gb76gwteS1FqUkN3"
        },
        {
          "id": 137,
          "chapter_id": 69,
          "course_id": 18,
          "title": "Customizing the Payment Form",
          "content": "Menyesuaikan formulir pembayaran melibatkan penyesuaian tampilan, tata letak, dan fungsionalitas agar selaras dengan merek dan kebutuhan spesifik aplikasi. Penyesuaian ini memainkan peran penting dalam menciptakan pengalaman yang konsisten dan bermerek bagi pengguna, meningkatkan kepercayaan dan keterlibatan. Ini mencakup elemen desain seperti warna, font, logo, dan gaya, memastikan tampilan kohesif yang mencerminkan pedoman branding aplikasi. Selain itu, penyesuaian melampaui estetika untuk mengoptimalkan pengalaman pengguna dengan menyederhanakan kolom input, menyederhanakan tata letak, dan memastikan respons seluler. Hal ini juga memungkinkan penyertaan bidang khusus untuk mengumpulkan informasi tambahan terkait transaksi dari pengguna. Selain itu, fitur pelokalan melayani beragam audiens dengan menawarkan pilihan bahasa dan mengadaptasi formulir pembayaran ke berbagai wilayah. Dengan memanfaatkan opsi konfigurasi yang disediakan oleh API gateway pembayaran, seperti Midtrans, pengembang dapat menyesuaikan perilaku formulir pembayaran sesuai dengan kebutuhan bisnis. Pengujian menyeluruh dan perbaikan berulang berdasarkan umpan balik pengguna merupakan bagian integral untuk terus menyempurnakan formulir pembayaran. Secara keseluruhan, penyesuaian formulir pembayaran berkontribusi signifikan dalam menciptakan pengalaman pembayaran yang lebih menarik, ramah pengguna, dan dapat dipercaya dalam aplikasi.",
          "url_video": "https://www.youtube.com/watch?v=RTZe12Ye1gY"
        },
        {
          "id": 138,
          "chapter_id": 69,
          "course_id": 18,
          "title": "Integrating Additional Features",
          "content": "Mengintegrasikan fitur tambahan mengacu pada proses menggabungkan fungsionalitas atau kemampuan tambahan ke dalam sistem atau aplikasi yang sudah ada, khususnya dalam sistem pembayaran seperti Midtrans. Integrasi ini bertujuan untuk memperluas fungsi inti proses pembayaran dengan memperkenalkan fitur pelengkap yang meningkatkan pengalaman pengguna, keamanan, fungsionalitas, atau kemampuan pelaporan. Fitur tambahan dapat mencakup peningkatan pengalaman pengguna melalui opsi pembayaran tamu, metode pembayaran tersimpan, atau antarmuka intuitif. Peningkatan keamanan seperti tokenisasi, autentikasi dua faktor, atau sistem deteksi penipuan juga dapat diintegrasikan untuk memperkuat perlindungan data. Selain itu, integrasi ini dapat diperluas hingga menawarkan beberapa metode pembayaran seperti dompet elektronik atau transfer bank, memfasilitasi pembayaran berlangganan dan berulang, memungkinkan pelaporan dan analisis yang disesuaikan untuk wawasan yang lebih baik, mengintegrasikan opsi pembayaran seluler, menggabungkan program loyalitas, dan memastikan kepatuhan terhadap peraturan industri seperti PCI DSS atau GDPR. Proses integrasi memerlukan perencanaan yang matang, keahlian teknis, dan potensi kolaborasi dengan layanan atau API pihak ketiga. Memprioritaskan fitur-fitur yang selaras dengan tujuan bisnis, kepuasan pengguna, dan pengalaman pembayaran yang lancar dan aman dalam aplikasi sangat penting dalam upaya integrasi ini.",
          "url_video": "https://youtu.be/069oMpRX9zA?si=y0-3QpX1hsa6hvB5"
        }
      ],
      "orders": [
        {
          "id": 1,
          "course_id": 18,
          "user_id": 2,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1702971585080",
          "createdAt": "2023-12-19T07:39:45.081Z",
          "updatedAt": "2023-12-19T07:39:45.081Z"
        },
        {
          "id": 10,
          "course_id": 18,
          "user_id": 14,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703079476266",
          "createdAt": "2023-12-20T13:37:56.266Z",
          "updatedAt": "2023-12-20T13:37:56.266Z"
        },
        {
          "id": 14,
          "course_id": 18,
          "user_id": 15,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703092915634",
          "createdAt": "2023-12-20T17:21:55.635Z",
          "updatedAt": "2023-12-20T17:21:55.635Z"
        },
        {
          "id": 19,
          "course_id": 18,
          "user_id": 12,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703416117948",
          "createdAt": "2023-12-24T11:08:37.949Z",
          "updatedAt": "2023-12-24T11:08:37.949Z"
        }
      ],
      "comments": [],
      "ratings": [
        {
          "id": 5,
          "course_id": 18,
          "user_id": 2,
          "rating": 4.5,
          "createdAt": "2023-12-21T01:36:04.590Z",
          "updatedAt": "2023-12-21T01:36:04.590Z"
        },
        {
          "id": 6,
          "course_id": 18,
          "user_id": 2,
          "rating": 4.5,
          "createdAt": "2023-12-21T01:36:17.909Z",
          "updatedAt": "2023-12-21T01:36:17.909Z"
        },
        {
          "id": 18,
          "course_id": 18,
          "user_id": 12,
          "rating": 5,
          "createdAt": "2023-12-24T11:47:34.486Z",
          "updatedAt": "2023-12-24T11:57:31.982Z"
        }
      ],
      "userProgress": [
        {
          "id": 149,
          "user_id": 15,
          "course_id": 18,
          "chapter_id": 67,
          "course_material_id": 132,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 150,
          "user_id": 15,
          "course_id": 18,
          "chapter_id": 67,
          "course_material_id": 133,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 151,
          "user_id": 15,
          "course_id": 18,
          "chapter_id": 67,
          "course_material_id": 134,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 152,
          "user_id": 15,
          "course_id": 18,
          "chapter_id": 68,
          "course_material_id": 135,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 153,
          "user_id": 15,
          "course_id": 18,
          "chapter_id": 68,
          "course_material_id": 136,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 154,
          "user_id": 15,
          "course_id": 18,
          "chapter_id": 69,
          "course_material_id": 137,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 155,
          "user_id": 15,
          "course_id": 18,
          "chapter_id": 69,
          "course_material_id": 138,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 192,
          "user_id": 12,
          "course_id": 18,
          "chapter_id": 67,
          "course_material_id": 133,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 193,
          "user_id": 12,
          "course_id": 18,
          "chapter_id": 67,
          "course_material_id": 134,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 194,
          "user_id": 12,
          "course_id": 18,
          "chapter_id": 68,
          "course_material_id": 135,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 195,
          "user_id": 12,
          "course_id": 18,
          "chapter_id": 68,
          "course_material_id": 136,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 196,
          "user_id": 12,
          "course_id": 18,
          "chapter_id": 69,
          "course_material_id": 137,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 197,
          "user_id": 12,
          "course_id": 18,
          "chapter_id": 69,
          "course_material_id": 138,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 191,
          "user_id": 12,
          "course_id": 18,
          "chapter_id": 67,
          "course_material_id": 132,
          "is_completed": true,
          "completed_at": "2023-12-24T11:09:09.392Z"
        }
      ],
      "averageRating": 4.666666666666667
    },
    {
      "id": 17,
      "title": "Product Management: Building Great Products",
      "description": "Course ini didesain untuk memberikan pemahaman mendalam mengenai praktik terbaik dalam manajemen produk untuk mengembangkan produk-produk yang luar biasa. Dalam kursus ini, Anda akan mempelajari berbagai konsep, strategi, dan keterampilan yang diperlukan untuk menjadi seorang Product Manager yang sukses. Dari konsepsi ide produk hingga pengelolaan siklus hidup produk, kursus ini akan membekali Anda dengan pengetahuan yang diperlukan untuk menciptakan, mengelola, dan meningkatkan produk-produk yang memenuhi kebutuhan pengguna dan pasar.",
      "target_audience": [
        "Calon Manajer Produk",
        "Pengusaha atau Pemilik Bisnis",
        "Profesional TI atau Pengembang Perangkat Lunak",
        "Manajer Proyek atau Tim Produk"
      ],
      "prerequisite": [
        "Pemahaman Dasar Bisnis",
        "Pengetahuan Produk dan Industri",
        "Kemampuan Analitis",
        "Kemampuan Komunikasi dan Keterampilan Manajemen",
        "Kemauan Untuk Belajar"
      ],
      "price": 200000,
      "type_course": "premium",
      "level": "menengah",
      "url_group": "www.discord.com/backend2",
      "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231214_obqYyxhRW",
      "createdAt": "2023-12-14T23:33:30.668Z",
      "updatedAt": "2023-12-22T10:50:28.955Z",
      "category_id": 1,
      "chapters": [
        {
          "id": 63,
          "title": "Chapter 1 - Pengenalan Product Management",
          "course_id": 17,
          "content": "Dalam chapter ini, Anda akan diperkenalkan dengan dasar-dasar Product Management. Anda akan mempelajari peran seorang Product Manager, bagaimana menganalisis pasar dan pengguna, serta tahapan dalam pengembangan produk dari konsepsi hingga roadmap."
        },
        {
          "id": 64,
          "title": "Chapter 2 - Strategi dan Perencanaan Produk",
          "course_id": 17,
          "content": "Pada chapter ini, fokusnya adalah pada strategi dan perencanaan produk. Anda akan belajar bagaimana merumuskan visi produk, melakukan riset untuk validasi konsep, dan merencanakan peluncuran produk yang efektif."
        },
        {
          "id": 66,
          "title": "Chapter 3 - Manajemen Produk Lanjutan",
          "course_id": 17,
          "content": "Chapter terakhir ini akan membahas topik-topik lanjutan dalam manajemen produk. Anda akan mempelajari pengelolaan siklus hidup produk, strategi pengukuran kinerja produk, serta keterampilan kepemimpinan dan kolaborasi yang diperlukan dalam memimpin tim produk."
        }
      ],
      "materials": [
        {
          "id": 122,
          "chapter_id": 63,
          "course_id": 17,
          "title": "Pengantar Product Management",
          "content": "Product Management adalah disiplin yang mengelola siklus hidup produk dari konsepsi hingga peluncuran dan perawatan. Ini melibatkan pengembangan visi produk, identifikasi pasar yang tepat, serta koordinasi antara berbagai tim seperti pengembangan, pemasaran, dan desain. Seorang Product Manager berperan dalam merumuskan strategi produk, menentukan fitur kunci berdasarkan riset pasar, dan membuat keputusan yang didukung oleh data. Selain itu, mereka memainkan peran penting dalam mengelola siklus hidup produk, melakukan pembaruan, dan berkomunikasi secara efektif dengan pelanggan serta pemangku kepentingan lainnya. Peran ini memerlukan kombinasi keterampilan manajerial, analitis, komunikasi, dan pemahaman yang mendalam tentang kebutuhan pengguna untuk memastikan produk yang sukses dan memenuhi harapan pasar.",
          "url_video": "https://youtu.be/oqJn-zx-QoE?si=dl3OFXQjM02LnMcl"
        },
        {
          "id": 123,
          "chapter_id": 63,
          "course_id": 17,
          "title": "Pemahaman Pasar dan Pengguna",
          "content": "Analisis pasar produk merupakan proses mendalam yang melibatkan pengumpulan data, penelitian, dan evaluasi terhadap pasar yang dituju untuk produk tertentu. Tujuannya adalah untuk memperoleh pemahaman yang komprehensif tentang pasar, termasuk kebutuhan konsumen, tren, pesaing, dan faktor-faktor yang memengaruhi penerimaan produk di pasar. Langkah-langkah ini meliputi identifikasi kebutuhan pasar, analisis pesaing, penetapan target pasar, serta evaluasi tren yang membantu dalam merumuskan strategi yang tepat untuk produk. Sementara itu, pembuatan profil pengguna dan pembuatan persona merupakan langkah terperinci yang memfokuskan pada deskripsi karakteristik, preferensi, dan kebutuhan segmen pengguna yang berbeda. Dengan membuat persona yang representatif, seperti dengan menggunakan data demografis, perilaku, dan motivasi, ini membantu dalam memahami pengguna secara lebih mendalam. Proses ini memastikan bahwa pengembangan produk tidak hanya memenuhi kebutuhan pasar yang diidentifikasi, tetapi juga dirancang secara khusus untuk memaksimalkan pengalaman pengguna yang memuaskan.",
          "url_video": "https://youtu.be/aranw1-azg8?si=Y9sMBhaEwcgwyvw0"
        },
        {
          "id": 124,
          "chapter_id": 63,
          "course_id": 17,
          "title": "Proses Pengembangan Produk",
          "content": "Konsepsi ide produk merupakan tahap awal dalam pengembangan, di mana tim produk mengeksplorasi gagasan-gagasan baru atau perbaikan terhadap produk yang sudah ada. Langkah pertama melibatkan identifikasi masalah atau kebutuhan yang belum terpenuhi, kemudian ide-ide kreatif dikumpulkan dan dievaluasi untuk memilih solusi yang paling menjanjikan. Dari ide-ide yang terpilih, konsep awal produk dibentuk dengan deskripsi singkat tentang manfaat, cara kerja produk, dan pengguna yang dituju. Sementara itu, pengembangan roadmap produk adalah proses penyusunan rencana strategis yang merinci langkah-langkah dalam pengembangan produk dari konsepsi hingga peluncuran dan perbaikan berkelanjutan. Tahapan pengembangan, prioritas fitur, jadwal waktu, dan komunikasi terperinci dalam roadmap ini membantu tim produk memahami tujuan, prioritas, dan progres pengembangan produk secara keseluruhan. Keduanya, konsepsi ide produk dan roadmap produk, merupakan fondasi yang krusial dalam memastikan pengembangan produk yang sukses dan terfokus sesuai dengan kebutuhan pasar dan pengguna.",
          "url_video": "https://youtu.be/Fdk3g9i3s2I?si=1sgT_bKkyGjVWRd6"
        },
        {
          "id": 125,
          "chapter_id": 64,
          "course_id": 17,
          "title": "Strategi Produk",
          "content": "Penentuan visi produk merupakan tahap awal yang krusial dalam pengembangan produk, menggambarkan tujuan jangka panjang, nilai inti, dan dampak yang ingin dicapai. Proses ini melibatkan pemahaman mendalam akan kebutuhan pengguna, nilai-nilai yang ingin disampaikan, serta penetapan tujuan yang ingin dicapai oleh produk. Komunikasi yang jelas terkait visi produk kepada seluruh tim dan pemangku kepentingan adalah kunci untuk memastikan pemahaman dan fokus yang sama terhadap arah yang diinginkan bagi produk tersebut. Di sisi lain, strategi penetapan harga memainkan peran penting dalam menentukan harga yang tepat untuk produk. Dengan menganalisis pasar, mempertimbangkan biaya produksi, tujuan perusahaan, dan respons pasar, strategi penetapan harga yang efektif dapat diatur. Dalam kenyataannya, penetapan visi yang jelas dan strategi penetapan harga yang tepat memainkan peran penting dalam kesuksesan produk di pasar serta dalam membangun posisi kompetitif yang kuat.",
          "url_video": "https://youtu.be/uRPLXzWOnsg?si=VYoi44TeLhySQvM4"
        },
        {
          "id": 126,
          "chapter_id": 64,
          "course_id": 17,
          "title": "Riset Produk",
          "content": "Metode riset produk mencakup sejumlah pendekatan untuk mengumpulkan data yang relevan terkait pengembangan produk. Ini termasuk wawancara dengan pengguna potensial untuk memahami pengalaman dan kebutuhan mereka, survei untuk data dari kelompok yang lebih luas, observasi langsung terhadap perilaku pengguna, dan uji coba prototipe untuk mendapatkan umpan balik pengguna. Di sisi lain, validasi konsep produk melibatkan proses menguji keberhasilan ide produk sebelum pengembangan penuh. Ini melibatkan definisi yang jelas terkait konsep produk, pengujian konsep kepada pengguna potensial, analisis umpan balik, dan penyesuaian berdasarkan respons pengguna sebelum tahap pengembangan lebih lanjut. Kombinasi kedua metode ini membantu memastikan bahwa produk yang dikembangkan tidak hanya sesuai dengan kebutuhan pengguna, tetapi juga memiliki potensi untuk sukses di pasar.",
          "url_video": "https://youtu.be/e7ah-BUXQUg?si=xwvb_IDDoz1lHvbW"
        },
        {
          "id": 127,
          "chapter_id": 64,
          "course_id": 17,
          "title": "Perencanaan Peluncuran Produk",
          "content": "Pengembangan Minimum Viable Product (MVP) melibatkan pembuatan versi produk dengan fitur esensial yang memadai untuk memuaskan pengguna awal atau pengguna beta. Langkah-langkahnya mencakup identifikasi fitur kunci, pembuatan prototipe sederhana, pengujian dengan pengguna awal, dan iterasi berdasarkan umpan balik untuk meningkatkan kualitas produk. Sebagai kontras, rencana peluncuran dan pemasaran bertujuan untuk merencanakan strategi yang detail untuk memasarkan produk kepada pasar yang ditargetkan. Ini melibatkan penetapan tujuan peluncuran, segmentasi pasar, pendekatan pemasaran yang tepat, strategi peluncuran yang efektif, dan pemantauan kinerja pasca-peluncuran. Kombinasi dari kedua strategi ini memungkinkan perusahaan untuk menguji dan mengembangkan produk dengan efisien sambil mempersiapkan fondasi yang kuat untuk memasarkan produk ke pasar dengan cara yang menarik dan efektif.",
          "url_video": "https://youtu.be/WbjS6dtycJ8?si=iI6ZDDeyizaCvxSF"
        },
        {
          "id": 128,
          "chapter_id": 66,
          "course_id": 17,
          "title": "Pengelolaan Siklus Hidup Produk",
          "content": "Siklus hidup produk merujuk pada perjalanan produk dari tahap pengenalan, pertumbuhan, kematangan, hingga penurunan dalam pasar. Tahapan-tahapan ini meliputi fase pengenalan di mana produk diperkenalkan, pertumbuhan yang menandai adopsi tinggi, kematangan dengan penjualan puncak, dan akhirnya, tahap penurunan di mana penjualan mengalami penurunan. Strategi pembaruan dan pensiun produk merupakan bagian penting dalam mengelola siklus hidup produk. Strategi pembaruan melibatkan peningkatan dan perbaikan pada produk yang ada untuk menjaga relevansi, sementara perpanjangan hidup produk melibatkan penambahan fitur baru atau varian untuk memperpanjang masa pakai produk. Di sisi lain, pensiun produk merupakan langkah untuk menarik produk dari pasar jika tidak lagi memberikan nilai atau tidak menguntungkan. Pembaruan dan pensiun produk memerlukan perencanaan yang cermat serta strategi transisi pelanggan untuk memastikan transisi yang mulus ke produk yang baru atau yang diperbarui. Strategi ini membantu perusahaan mengelola portofolio produknya secara efisien dan responsif terhadap perubahan dalam kebutuhan dan preferensi pasar.",
          "url_video": "https://youtu.be/eQwytDppzy0?si=b5jrgrQjnSgPDT9k"
        },
        {
          "id": 129,
          "chapter_id": 66,
          "course_id": 17,
          "title": "Optimisasi dan Pengukuran",
          "content": "Pengukuran Kinerja Produk (KPIs) merupakan serangkaian indikator yang digunakan untuk mengevaluasi sejauh mana produk mencapai tujuan yang ditetapkan. KPIs mencakup aspek seperti peningkatan pendapatan, pertumbuhan pengguna aktif, retensi pelanggan, tingkat kepuasan pelanggan, dan efisiensi operasional. Sementara itu, penggunaan feedback adalah proses yang melibatkan pengumpulan, analisis, dan penerapan tanggapan dari pengguna terhadap produk untuk meningkatkan kualitas produk. Langkah-langkahnya mencakup pengumpulan beragam umpan balik dari survei, ulasan, analisis data pengguna, serta implementasi perubahan berdasarkan analisis umpan balik untuk memperbaiki fitur, fungsionalitas, atau kualitas produk. Kombinasi pengukuran kinerja melalui KPIs dan penggunaan feedback memungkinkan perusahaan untuk terus memperbaiki produknya, meningkatkan pengalaman pengguna, dan merespons kebutuhan pasar dengan lebih baik.",
          "url_video": "https://youtu.be/wtDFgx41Rho?si=Hexg49K2K9QjWlp4"
        },
        {
          "id": 130,
          "chapter_id": 66,
          "course_id": 17,
          "title": "Keterampilan Kepemimpinan dan Kolaborasi",
          "content": "Komunikasi efektif dalam tim adalah pilar utama dalam pengembangan produk yang sukses. Ini membutuhkan keterbukaan, keterlibatan, dan kemampuan mendengarkan yang aktif antar anggota tim untuk memastikan informasi disampaikan secara jelas dan tepat waktu. Selain itu, penggunaan alat komunikasi modern juga memainkan peran penting dalam menjaga aliran informasi yang lancar. Sementara itu, keterampilan kepemimpinan produktif diperlukan untuk memberikan visi yang jelas, memberdayakan tim, mengelola konflik, serta membuat keputusan yang tepat. Kombinasi dari komunikasi yang efektif dan kepemimpinan yang produktif membentuk fondasi yang kuat bagi pengembangan produk yang inovatif, memotivasi kolaborasi yang produktif, dan menciptakan lingkungan kerja yang mendukung pertumbuhan dan peningkatan terus-menerus.",
          "url_video": "https://youtu.be/9XZZinZhvCY?si=mAx766UdG3Y6YXpp"
        }
      ],
      "orders": [
        {
          "id": 7,
          "course_id": 17,
          "user_id": 2,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703048252283",
          "createdAt": "2023-12-20T04:57:32.284Z",
          "updatedAt": "2023-12-20T04:57:32.284Z"
        },
        {
          "id": 12,
          "course_id": 17,
          "user_id": 14,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703079782454",
          "createdAt": "2023-12-20T13:43:02.455Z",
          "updatedAt": "2023-12-20T13:43:02.455Z"
        },
        {
          "id": 15,
          "course_id": 17,
          "user_id": 12,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703415433763",
          "createdAt": "2023-12-24T10:57:13.764Z",
          "updatedAt": "2023-12-24T10:57:13.764Z"
        }
      ],
      "comments": [],
      "ratings": [
        {
          "id": 10,
          "course_id": 17,
          "user_id": 2,
          "rating": 4.8,
          "createdAt": "2023-12-21T12:10:44.663Z",
          "updatedAt": "2023-12-21T12:10:44.663Z"
        },
        {
          "id": 11,
          "course_id": 17,
          "user_id": 2,
          "rating": 4.6,
          "createdAt": "2023-12-21T12:11:06.309Z",
          "updatedAt": "2023-12-21T12:11:06.309Z"
        },
        {
          "id": 12,
          "course_id": 17,
          "user_id": 2,
          "rating": 1,
          "createdAt": "2023-12-21T12:11:33.350Z",
          "updatedAt": "2023-12-21T12:11:33.350Z"
        },
        {
          "id": 13,
          "course_id": 17,
          "user_id": 2,
          "rating": 0,
          "createdAt": "2023-12-21T12:12:14.817Z",
          "updatedAt": "2023-12-21T12:12:14.817Z"
        },
        {
          "id": 19,
          "course_id": 17,
          "user_id": 12,
          "rating": 5,
          "createdAt": "2023-12-24T12:05:15.749Z",
          "updatedAt": "2023-12-24T12:09:01.824Z"
        }
      ],
      "userProgress": [
        {
          "id": 123,
          "user_id": 14,
          "course_id": 17,
          "chapter_id": 64,
          "course_material_id": 125,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 124,
          "user_id": 14,
          "course_id": 17,
          "chapter_id": 64,
          "course_material_id": 126,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 125,
          "user_id": 14,
          "course_id": 17,
          "chapter_id": 64,
          "course_material_id": 127,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 126,
          "user_id": 14,
          "course_id": 17,
          "chapter_id": 66,
          "course_material_id": 128,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 127,
          "user_id": 14,
          "course_id": 17,
          "chapter_id": 66,
          "course_material_id": 129,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 128,
          "user_id": 14,
          "course_id": 17,
          "chapter_id": 66,
          "course_material_id": 130,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 120,
          "user_id": 14,
          "course_id": 17,
          "chapter_id": 63,
          "course_material_id": 122,
          "is_completed": true,
          "completed_at": "2023-12-23T09:34:38.192Z"
        },
        {
          "id": 121,
          "user_id": 14,
          "course_id": 17,
          "chapter_id": 63,
          "course_material_id": 123,
          "is_completed": true,
          "completed_at": "2023-12-23T09:34:51.186Z"
        },
        {
          "id": 122,
          "user_id": 14,
          "course_id": 17,
          "chapter_id": 63,
          "course_material_id": 124,
          "is_completed": true,
          "completed_at": "2023-12-23T09:35:21.300Z"
        },
        {
          "id": 165,
          "user_id": 12,
          "course_id": 17,
          "chapter_id": 63,
          "course_material_id": 122,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 166,
          "user_id": 12,
          "course_id": 17,
          "chapter_id": 63,
          "course_material_id": 123,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 167,
          "user_id": 12,
          "course_id": 17,
          "chapter_id": 63,
          "course_material_id": 124,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 168,
          "user_id": 12,
          "course_id": 17,
          "chapter_id": 64,
          "course_material_id": 125,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 169,
          "user_id": 12,
          "course_id": 17,
          "chapter_id": 64,
          "course_material_id": 126,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 170,
          "user_id": 12,
          "course_id": 17,
          "chapter_id": 64,
          "course_material_id": 127,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 171,
          "user_id": 12,
          "course_id": 17,
          "chapter_id": 66,
          "course_material_id": 128,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 172,
          "user_id": 12,
          "course_id": 17,
          "chapter_id": 66,
          "course_material_id": 129,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 173,
          "user_id": 12,
          "course_id": 17,
          "chapter_id": 66,
          "course_material_id": 130,
          "is_completed": false,
          "completed_at": null
        }
      ],
      "averageRating": 3.0799999999999996
    },
    {
      "id": 16,
      "title": "MERN Stack Course - MongoDB, Express, React and NodeJS",
      "description": "Course ini dirancang untuk memberikan pemahaman mendalam tentang MERN Stack - MongoDB, Express, React, dan Node.js. Dalam kursus ini, Anda akan mempelajari fondasi dari setiap teknologi dalam stack ini serta bagaimana mengintegrasikan keduanya untuk membangun aplikasi web full-stack yang kuat dan responsif.",
      "target_audience": [
        "Pengembang Web Full Stack",
        "Mahasiswa atau Siswa Teknik Informatika",
        "Pemula dalam Pengembangan Web",
        "Pengembang Web Front-end atau Back-end"
      ],
      "prerequisite": [
        "Pemahaman Dasar HTML, CSS, dan JavaScript",
        "Pemahaman Dasar tentang NodeJS, Express, React, dan MongoDB",
        "Pemahaman Dasar Tentang Pengembangan Web",
        "Kemauan untuk Belajar"
      ],
      "price": 150000,
      "type_course": "premium",
      "level": "menengah",
      "url_group": "www.discord.com/backend2",
      "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231212_8rDI5UuRx",
      "createdAt": "2023-12-12T12:26:14.480Z",
      "updatedAt": "2023-12-22T10:22:06.530Z",
      "category_id": 3,
      "chapters": [
        {
          "id": 57,
          "title": "Chapter 1 - Pengenalan ke MERN Stack",
          "course_id": 16,
          "content": "Chapter pertama ini memberikan pemahaman mendalam tentang apa itu MERN Stack, keuntungan utama menggunakan teknologi ini, dan perbandingannya dengan stack lain. Anda akan belajar cara menginstal dan mengkonfigurasi setiap komponen MERN Stack dan memahami dasar-dasar MongoDB."
        },
        {
          "id": 58,
          "title": "Chapter 2 - Pembangunan Backend dengan Node.js dan Express",
          "course_id": 16,
          "content": "Di Chapter ini, fokusnya adalah pada pengembangan backend menggunakan Node.js dan Express. Anda akan belajar membuat server dengan Express, menggunakan MongoDB dalam backend, dan mengembangkan RESTful API untuk berinteraksi dengan basis data, termasuk pembuatan model dengan Mongoose."
        },
        {
          "id": 60,
          "title": "Chapter 3 - Pembangunan Frontend dengan React",
          "course_id": 16,
          "content": "Chapter ini memberikan landasan tentang penggunaan React untuk membangun antarmuka pengguna yang dinamis. Anda akan mempelajari konsep dasar React, manajemen state, komunikasi antara komponen, dan bagaimana menggunakan React untuk berinteraksi dengan backend yang telah dibuat sebelumnya."
        },
        {
          "id": 61,
          "title": "Chapter 4 - Integrasi Frontend dan Backend",
          "course_id": 16,
          "content": "Chapter terakhir ini fokus pada integrasi antara frontend dan backend yang telah Anda bangun sebelumnya. Anda akan mempelajari konsep CORS, autentikasi pengguna, dan bagaimana mengoptimalkan aplikasi. Lebih lanjut, Anda akan melengkapi proyek dengan fitur-fitur seperti autentikasi, otorisasi, dan pengembangan fitur CRUD lengkap."
        }
      ],
      "materials": [
        {
          "id": 115,
          "chapter_id": 58,
          "course_id": 16,
          "title": "Pengembangan RESTful API",
          "content": "Pembuatan API endpoints dalam Express melibatkan definisi rute untuk menangani permintaan HTTP yang masuk dari klien. Ini memungkinkan pengembang untuk menentukan perilaku aplikasi terhadap metode HTTP seperti GET, POST, PUT, dan DELETE. Misalnya, dalam Express, penggunaan app.get() untuk membaca data, app.post() untuk menambahkan data, app.put() untuk memperbarui, dan app.delete() untuk menghapus, membantu dalam menentukan operasi yang akan dilakukan terhadap data. Selain itu, Express Validator digunakan untuk validasi input yang diterima dari klien sebelum data diproses lebih lanjut. Penggunaan middleware ini memungkinkan definisi aturan validasi untuk memeriksa kecocokan data masukan, seperti panjang string atau validitas email. Dengan Express Validator, pengembang dapat menangani data yang masuk sesuai kriteria yang diinginkan sebelum melanjutkan proses lebih lanjut, memastikan keamanan dan konsistensi data pada server. Dengan demikian, Express menyediakan alat yang kuat untuk membuat API endpoints yang responsif dan aman dalam pengembangan aplikasi web.",
          "url_video": "https://youtu.be/UTi_4-3UKmU?si=anCsON7w3oze5D8d"
        },
        {
          "id": 108,
          "chapter_id": 57,
          "course_id": 16,
          "title": "Pengenalan MERN Stack",
          "content": "MERN Stack, singkatan dari MongoDB, Express, React, dan Node.js, merupakan kombinasi empat teknologi utama yang digunakan untuk membangun aplikasi web full-stack. MongoDB berperan sebagai basis data NoSQL yang fleksibel dengan format dokumen JSON. Express adalah kerangka kerja backend yang mempermudah pembuatan server dan menangani permintaan HTTP. React digunakan untuk membangun antarmuka pengguna yang efisien dan responsif di sisi klien, sementara Node.js adalah runtime lingkungan JavaScript yang menjalankan kode di sisi server. Keuntungan menggunakan MERN Stack termasuk keserbagunaan bahasa dengan JavaScript di seluruh stack, reusabilitas kode dengan komponen-komponen React, skalabilitas yang baik dengan MongoDB, kinerja tinggi berkat penggunaan React dengan Virtual DOM, dan dukungan dari komunitas yang aktif. Dalam perbandingan dengan teknologi stack lainnya seperti MEAN Stack, LAMP Stack, atau Ruby on Rails (RoR), MERN Stack menonjol karena keserbagunaan bahasa, performa tinggi, dan fleksibilitas dalam membangun aplikasi web modern.",
          "url_video": "https://youtu.be/lv5SHzZ8uvU?si=VVnKCXvG5tO9NZrf"
        },
        {
          "id": 109,
          "chapter_id": 57,
          "course_id": 16,
          "title": "Instalasi dan Konfigurasi",
          "content": "Instalasi Node.js dan npm dimulai dengan mengunjungi situs resmi Node.js dan mengunduh versi yang sesuai dengan sistem operasi. Setelah mengunduh, instal Node.js dan periksa keberhasilannya melalui terminal dengan perintah node -v untuk Node.js dan npm –v untuk npm. Pemasangan MongoDB melibatkan langkah-langkah unduhan dan instalasi dari situs resmi MongoDB, diikuti dengan memastikan server MongoDB dapat diakses melalui terminal dengan perintah mongod. Untuk memulai proyek awal dengan MERN Stack, gunakan perintah npx create-react-app nama-proyek untuk membuat proyek React baru, kemudian navigasikan ke direktori proyek tersebut. Selanjutnya, dalam direktori proyek, buat backend dengan inisialisasi folder dan instalasi Express untuk backend, serta modul MongoDB untuk koneksi ke database. Terakhir, pastikan frontend (React) terintegrasi dengan backend (Express) menggunakan API yang telah dibuat dalam backend untuk berinteraksi dengan MongoDB, menggunakan metode seperti fetch atau library seperti axios untuk mengirim permintaan data antara frontend dan backend. Langkah-langkah ini membentuk dasar yang diperlukan untuk memulai pengembangan aplikasi web full-stack menggunakan MERN Stack.",
          "url_video": "https://youtu.be/iXhmi0NYdc8?si=7pRdk4-liqERZVDj"
        },
        {
          "id": 110,
          "chapter_id": 57,
          "course_id": 16,
          "title": "Memahami MongoDB",
          "content": "MongoDB, sebagai basis data NoSQL, memanfaatkan format dokumen JSON untuk menyimpan data, menawarkan alternatif yang berbeda dari basis data relasional. Fleksibilitas skema adalah salah satu keunggulan utamanya, memungkinkan dokumen dalam koleksi untuk memiliki struktur yang berbeda-beda tanpa keharusan mengikuti skema tabel yang kaku. Operasi CRUD (Create, Read, Update, Delete) dengan MongoDB memungkinkan manipulasi data dengan mudah. Menciptakan dokumen baru dalam koleksi dilakukan melalui db.collection.insertOne() atau db.collection.insertMany(), sementara membaca data menggunakan db.collection.find() atau db.collection.findOne() untuk menemukan dokumen. Perbarui atau hapus dokumen menggunakan db.collection.updateOne(), db.collection.updateMany(), db.collection.deleteOne(), atau db.collection.deleteMany(). Terkait skema dan hubungan antar koleksi, MongoDB mendukung skema fleksibel tanpa kebutuhan akan struktur yang tetap. Referensi antar dokumen mungkin dilakukan, namun pendekatan NoSQL cenderung memanfaatkan embedding data atau menyimpan informasi terkait di dalam satu dokumen, mengurangi ketergantungan pada hubungan antar koleksi yang kompleks seperti pada basis data relasional. MongoDB memungkinkan pengembang untuk mengelola data secara efisien dengan penekanan pada fleksibilitas skema dan akses yang cepat terhadap data.",
          "url_video": "https://youtu.be/JXXUBiJGu94?si=C9el_kZDPNYZMTiq"
        },
        {
          "id": 112,
          "chapter_id": 58,
          "course_id": 16,
          "title": "Pengenalan Node.js dan Express",
          "content": "Node.js adalah sebuah runtime lingkungan JavaScript yang memungkinkan pengembang untuk mengeksekusi kode JavaScript di sisi server. Ini menggunakan mesin JavaScript V8 dari Google Chrome dan memperluas kemampuan bahasa JavaScript ke luar lingkungan peramban (browser). Express, sebagai kerangka kerja (framework) web untuk Node.js, menghilangkan kerumitan dalam membuat server HTTP. Untuk membangun server dengan Express, pengembang dapat menginstalnya melalui npm, menginisialisasi aplikasi, mendefinisikan endpoint (rute) untuk menangani permintaan HTTP dengan metode tertentu seperti GET, POST, PUT, atau DELETE, dan kemudian memulai server dengan mendengarkan permintaan pada port tertentu. Routing dalam Express memungkinkan penanganan permintaan HTTP yang masuk ke endpoint tertentu sesuai dengan metode yang diberikan. Penggunaan fungsi  app.get(), app.post(), app.put(), atau app.delete() membantu dalam menentukan respons terhadap jenis permintaan tertentu pada endpoint yang sesuai. Selain itu, Express juga memiliki konsep middleware yang memungkinkan pengembang untuk menambahkan fungsi-fungsi penengah yang dijalankan sebelum atau sesudah fungsi penanganan rute. Middleware seperti logging, autentikasi, manipulasi data permintaan, dan lainnya, dapat ditambahkan dengan app.use() secara global atau diterapkan pada rute tertentu untuk memodifikasi atau mengelola permintaan sebelum mencapai penanganan rute utama. Dengan Node.js sebagai runtime lingkungan yang kuat dan Express sebagai kerangka kerja yang ringkas, pengembang dapat dengan mudah membangun aplikasi web yang responsif dan efisien dengan penanganan permintaan yang terstruktur dan penambahan fungsionalitas tambahan melalui penggunaan middleware.",
          "url_video": "https://youtu.be/TecGUz4bPFA?si=G58B2B9qSi67CErV"
        },
        {
          "id": 113,
          "chapter_id": 58,
          "course_id": 16,
          "title": "Penggunaan MongoDB dalam Backend",
          "content": "Untuk menghubungkan MongoDB dengan Node.js, langkah awalnya adalah menginstal modul MongoDB di proyek Node.js dengan perintah npm install mongodb. Setelah itu, dalam kode Node.js, langkah berikutnya adalah mengimpor modul MongoDB, membuat koneksi dengan server MongoDB menggunakan URL koneksi yang sesuai, dan menetapkan opsi koneksi. Proses koneksi ini dapat dilakukan dengan menggunakan MongoClient.connect(), kemudian mengatur akses ke basis data dan melakukan operasi-operasi database yang diinginkan di dalam blok koneksi tersebut, seperti membaca, menulis, mengubah, atau menghapus data. Setelah selesai, penting untuk menutup koneksi dengan client.close(). Selain itu, penggunaan Mongoose memudahkan interaksi antara Node.js dan MongoDB dengan menyediakan ODM (Object Data Modeling) yang memungkinkan definisi skema, pembuatan model, dan operasi-operasi database yang lebih terstruktur. Setelah menginstal Mongoose di proyek Node.js menggunakan npm install mongoose, langkah selanjutnya adalah membuat koneksi dengan server MongoDB menggunakan Mongoose. Dengan definisi skema, Anda dapat membuat model yang berkaitan dengan koleksi dalam basis data MongoDB. Penggunaan model ini memungkinkan Anda untuk melakukan operasi-operasi seperti membuat, membaca, memperbarui, dan menghapus dokumen dengan mudah. Mongoose memberikan cara yang terstruktur dan lebih intuitif untuk berinteraksi dengan basis data MongoDB melalui Node.js, dengan kemampuan yang lebih kompleks seperti validasi data, definisi relasi antar dokumen, dan berbagai fitur bawaan lainnya untuk pengelolaan data yang efisien.",
          "url_video": "https://youtu.be/oUFyCpIl6tA?si=9P1cWbXKcMHc2tsw"
        },
        {
          "id": 116,
          "chapter_id": 60,
          "course_id": 16,
          "title": "Pengenalan React",
          "content": "React adalah sebuah perpustakaan JavaScript yang digunakan untuk membangun antarmuka pengguna (UI) dalam aplikasi web. Konsep dasarnya meliputi penggunaan komponen sebagai unit dasar dalam membangun UI, pengelolaan state untuk data yang dapat berubah, dan props untuk mentransfer data antara komponen. Komponen React dapat dibuat dengan menggunakan sintaks JavaScript atau JSX. Dalam React, komponen bisa berupa kelas (class-based components) yang menggunakan struktur kelas atau berupa fungsi (functional components) yang lebih sederhana. Penggunaan Virtual DOM adalah salah satu keunggulan React, di mana perubahan data dalam aplikasi tidak secara langsung mengubah DOM aktual, melainkan membuat representasi virtual dari DOM di memori, membandingkannya dengan versi sebelumnya, dan hanya memperbarui bagian yang berubah secara efisien. JSX, yang merupakan ekstensi dari JavaScript, memungkinkan penulisan kode dengan sintaks yang mirip HTML di dalam JavaScript, mempermudah pengembang untuk membuat struktur tampilan yang intuitif dan mudah dibaca, serta menggabungkan logika JavaScript dengan tampilan UI dalam komponen React.",
          "url_video": "https://youtu.be/9VTT2Sn1fWs?si=YKi9613pRUxfnitN"
        },
        {
          "id": 118,
          "chapter_id": 60,
          "course_id": 16,
          "title": "State dan Props di React",
          "content": "Pengelolaan state dalam komponen React merujuk pada cara komponen menyimpan dan mengelola data yang berubah seiring waktu. State merupakan objek internal yang memuat informasi yang dapat berubah dalam komponen, dan ketika nilai state berubah, React akan memperbarui tampilan terkait komponen tersebut. Metode seperti setState() pada komponen berbasis kelas atau hook `useState()` pada komponen fungsional digunakan untuk memperbarui dan mengelola state, memungkinkan sinkronisasi antara perubahan data dan tampilan. Props, singkatan dari properties, memungkinkan transfer data dari satu komponen ke komponen lain dalam struktur hierarki React. Props adalah properti yang dilewatkan dari komponen induk ke komponen anak dan digunakan untuk mentransfer data atau pengaturan dari satu komponen ke komponen lainnya. Namun, props bersifat read-only di komponen anak, artinya tidak dapat diubah di dalam komponen yang menerimanya. Perbedaan utama antara state dan props terletak pada sifatnya: state dikelola secara internal oleh komponen dan dapat berubah, sedangkan props digunakan untuk mentransfer data statis atau tidak berubah dari komponen lain ke dalam komponen yang menerimanya. State digunakan untuk data yang berubah seiring waktu dalam komponen, sedangkan props digunakan untuk mentransfer data antara komponen secara satu arah tanpa kemampuan untuk dimodifikasi di komponen yang menerimanya.",
          "url_video": "https://youtu.be/BgapZ6Cqy3s?si=Q6JT5gX2ffrXA5sO"
        },
        {
          "id": 119,
          "chapter_id": 61,
          "course_id": 16,
          "title": "Pengenalan Integrasi",
          "content": "Integrasi Frontend dan Backend merujuk pada keselarasan antara bagian tampilan pengguna (frontend) dengan logika server atau bagian backend dalam sebuah aplikasi. Frontend bertanggung jawab untuk menampilkan antarmuka pengguna dan mengirimkan permintaan ke backend untuk memperoleh atau memanipulasi data. Sementara itu, backend menangani permintaan dari frontend, menjalankan operasi bisnis, mengakses basis data, dan mengirimkan respons yang diperlukan kembali ke frontend. CORS (Cross-Origin Resource Sharing) merupakan kebijakan keamanan web yang mengatur permintaan HTTP dari satu domain ke domain lain. Pentingnya CORS terletak pada kontrol keamanan yang diterapkan oleh browser untuk mencegah akses lintas domain yang tidak sah. Dalam pengaturan CORS, backend harus diatur untuk mengizinkan akses dari domain atau origin yang berbeda dengan menetapkan header HTTP seperti Access-Control-Allow-Origin. Sementara itu, penanganan autentikasi dan otorisasi merupakan aspek kunci dalam pengembangan aplikasi web. Autentikasi merupakan proses verifikasi identitas pengguna menggunakan kredensial yang valid, sementara otorisasi berkaitan dengan hak akses yang diberikan setelah autentikasi berhasil. Teknik autentikasi termasuk penggunaan token seperti JWT atau OAuth, sementara otorisasi melibatkan pemberian izin akses berdasarkan peran pengguna. Hal ini umumnya diatur dengan menggunakan teknologi tokenisasi, penyimpanan informasi pengguna yang aman, serta penggunaan middleware pada backend untuk mengamankan rute tertentu dan memberikan kontrol akses yang tepat kepada pengguna yang telah diautentikasi. Integritas, keamanan, dan manajemen akses ini adalah elemen penting untuk memastikan aplikasi web berjalan dengan baik dan aman bagi pengguna.",
          "url_video": "https://youtu.be/xr8ZdSo8aGo?si=5OL05I6_DBILfjgA"
        },
        {
          "id": 120,
          "chapter_id": 61,
          "course_id": 16,
          "title": "Pengembangan Fitur Tambahan",
          "content": "Fitur login dan registrasi merupakan komponen kunci dalam aplikasi web. Fitur login memungkinkan pengguna untuk masuk ke dalam aplikasi dengan menggunakan kredensial yang valid, sedangkan fitur registrasi memungkinkan pengguna untuk membuat akun baru dengan informasi pribadi. Setelah login berhasil, pengguna sering kali menggunakan token, seperti JSON Web Token (JWT), yang dihasilkan oleh server setelah autentikasi, untuk setiap permintaan yang membutuhkan autentikasi, yang kemudian diverifikasi oleh server untuk memberikan izin akses yang sesuai. Di sisi lain, implementasi fitur CRUD (Create, Read, Update, Delete) adalah inti dari manajemen data dalam aplikasi. Fitur Create memungkinkan pengguna untuk membuat entri baru, Read memungkinkan pengguna untuk melihat atau membaca data yang ada, Update memungkinkan pengguna untuk memodifikasi informasi yang sudah ada, dan Delete memungkinkan pengguna untuk menghapus entri yang tidak diperlukan. Integrasi fitur CRUD melibatkan operasi dasar terhadap data dan memerlukan koneksi antara frontend dan backend agar pengguna dapat berinteraksi secara efektif dengan informasi yang disimpan dalam aplikasi. Dalam pengembangan aplikasi web, keberadaan fitur-login registrasi yang aman dan implementasi fitur CRUD yang baik adalah fondasi penting untuk menciptakan aplikasi yang fungsional, aman, dan responsif bagi pengguna.",
          "url_video": "https://youtu.be/00nHyY-r5e0?si=gg1JotTKZa_hcMz_"
        },
        {
          "id": 121,
          "chapter_id": 61,
          "course_id": 16,
          "title": "Pengoptimalan dan Penyelesaian Proyek",
          "content": "Testing aplikasi web melibatkan beberapa pendekatan untuk memastikan kualitas dan kinerja yang optimal. Unit testing memeriksa setiap komponen atau unit kecil dalam aplikasi, sementara integration testing menguji interaksi antar unit. End-to-end testing mencakup seluruh alur kerja aplikasi dari awal hingga akhir, sementara performance testing mengevaluasi responsivitas dan kinerja aplikasi di bawah beban kerja yang berat. Penanganan kesalahan (error handling) merupakan aspek penting dalam pengembangan aplikasi. Error handling harus dilakukan baik di sisi klien maupun server. Di sisi klien, penanganan kesalahan meliputi validasi form, koneksi jaringan yang terputus, dan masalah kompatibilitas browser. Sementara itu, di sisi server, error handling melibatkan penanganan masalah basis data, kegagalan permintaan API, serta masalah internal server. Error logging juga diperlukan untuk merekam kesalahan guna analisis dan perbaikan. Pengoptimalan performa aplikasi melibatkan serangkaian langkah, mulai dari optimasi kode untuk meningkatkan efisiensi hingga penerapan caching untuk mengurangi waktu akses. Load balancing juga diperlukan agar beban kerja terdistribusi secara seimbang di antara server yang tersedia. Pemantauan performa aplikasi secara terus-menerus, analisis bottleneck, dan perbaikan kontinu juga diperlukan untuk meningkatkan kinerja aplikasi secara keseluruhan. Gabungan dari ketiga aspek ini akan memastikan aplikasi web memiliki kualitas yang baik, kinerja optimal, serta responsif terhadap kebutuhan pengguna.",
          "url_video": "https://youtu.be/EsmZmJyaTyk?si=3ES8uBtgJ0z18r1L"
        }
      ],
      "orders": [
        {
          "id": 8,
          "course_id": 16,
          "user_id": 2,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703076722875",
          "createdAt": "2023-12-20T12:52:02.876Z",
          "updatedAt": "2023-12-20T12:52:02.876Z"
        },
        {
          "id": 11,
          "course_id": 16,
          "user_id": 14,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703079732061",
          "createdAt": "2023-12-20T13:42:12.061Z",
          "updatedAt": "2023-12-20T13:42:12.061Z"
        },
        {
          "id": 20,
          "course_id": 16,
          "user_id": 12,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703416533143",
          "createdAt": "2023-12-24T11:15:33.144Z",
          "updatedAt": "2023-12-24T11:15:33.144Z"
        }
      ],
      "comments": [],
      "ratings": [],
      "userProgress": [
        {
          "id": 109,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 57,
          "course_material_id": 108,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 110,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 57,
          "course_material_id": 109,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 111,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 57,
          "course_material_id": 110,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 112,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 58,
          "course_material_id": 115,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 113,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 58,
          "course_material_id": 112,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 114,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 58,
          "course_material_id": 113,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 115,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 60,
          "course_material_id": 116,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 116,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 60,
          "course_material_id": 118,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 117,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 61,
          "course_material_id": 119,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 118,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 61,
          "course_material_id": 120,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 119,
          "user_id": 14,
          "course_id": 16,
          "chapter_id": 61,
          "course_material_id": 121,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 198,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 57,
          "course_material_id": 108,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 199,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 57,
          "course_material_id": 109,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 200,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 57,
          "course_material_id": 110,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 201,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 58,
          "course_material_id": 115,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 202,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 58,
          "course_material_id": 112,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 203,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 58,
          "course_material_id": 113,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 204,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 60,
          "course_material_id": 116,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 205,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 60,
          "course_material_id": 118,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 206,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 61,
          "course_material_id": 119,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 207,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 61,
          "course_material_id": 120,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 208,
          "user_id": 12,
          "course_id": 16,
          "chapter_id": 61,
          "course_material_id": 121,
          "is_completed": false,
          "completed_at": null
        }
      ],
      "averageRating": null
    },
    {
      "id": 15,
      "title": "UX Research",
      "description": "Course ini adalah pengantar mendalam ke dunia User Experience (UX) Research, yang membawa peserta untuk memahami pentingnya riset pengguna dalam pengembangan produk digital yang sukses. Dibagi menjadi tiga Course yang terstruktur dengan baik, kursus ini membahas dasar-dasar metodologi, teknik, dan penerapan hasil riset pengguna untuk meningkatkan pengalaman pengguna.",
      "target_audience": [
        "Desainer UX UI",
        "Pengembang Perangkat Lunak",
        "Manajer Produk",
        "Profesional Pemasaran"
      ],
      "prerequisite": [
        "Pemahaman Dasar Desain atau Pengalaman Pengguna",
        "Pengetahuan tentang Proses Pengembangan Produk",
        "Kemampuan Analitis",
        "Keterampilan Komunikasi"
      ],
      "price": 150000,
      "type_course": "premium",
      "level": "menengah",
      "url_group": "www.discord.com/backend2",
      "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231212_EhkVfTNRq",
      "createdAt": "2023-12-12T11:53:20.883Z",
      "updatedAt": "2023-12-22T10:11:07.956Z",
      "category_id": 2,
      "chapters": [
        {
          "id": 54,
          "title": "Chapter 1 - Pengenalan UX Research ",
          "course_id": 15,
          "content": "Pada chapter ini, Anda akan memperoleh pemahaman mendalam mengenai dasar-dasar UX Research. Mulai dari pengantar mengenai konsep UX Research, pentingnya peran riset pengguna dalam pengembangan produk, hingga penerapan metodologi yang tepat dalam menyusun dan mengimplementasikan studi UX Research yang efektif."
        },
        {
          "id": 55,
          "title": "Chapter 2 - Teknik dan Alat UX Research",
          "course_id": 15,
          "content": "Dalam chapter ini, Anda akan diperkenalkan pada berbagai teknik dan alat yang esensial dalam melakukan riset pengguna. Materi yang disajikan meliputi penguasaan wawancara pengguna yang efektif, kemahiran dalam pengamatan dan observasi, serta penerapan pengujian pengguna untuk menguji keefektifan desain produk."
        },
        {
          "id": 56,
          "title": "Chapter 3 - Analisis dan Implementasi Hasil UX Research",
          "course_id": 15,
          "content": "Chapter terakhir ini membahas pentingnya analisis data yang dihasilkan dari riset pengguna. Anda akan mempelajari bagaimana menganalisis data kualitatif dan kuantitatif untuk mengekstrak wawasan yang berharga, serta penerapan temuan riset tersebut ke dalam perbaikan konkret pada desain produk. Di samping itu, bab ini juga memberikan panduan dalam membuat laporan riset yang efektif dan strategi presentasi yang persuasif untuk menyampaikan temuan riset kepada tim dan stakeholder produk."
        }
      ],
      "materials": [
        {
          "id": 98,
          "chapter_id": 54,
          "course_id": 15,
          "title": "Pengantar UX Research",
          "content": "Pengantar UX Research merupakan langkah awal yang esensial dalam memahami konsep dasar User Experience (UX) Research. Melalui pengantar ini, kita memperoleh pemahaman yang mendalam tentang tujuan utama dari riset pengguna, yaitu untuk menggali dan memahami kebutuhan, motivasi, serta perilaku pengguna terkait suatu produk atau layanan. Pentingnya UX Research dalam pengembangan produk juga tergambar dalam kemampuannya untuk memberikan wawasan yang kritis dalam validasi desain, meningkatkan pengalaman pengguna, serta mendukung pengambilan keputusan bisnis yang cerdas. Selain itu, pengantar ini juga menggarisbawahi peran utama seorang UX Researcher, yang bertanggung jawab dalam perencanaan, pelaksanaan, dan analisis riset pengguna untuk memastikan pengembangan produk didasarkan pada pemahaman mendalam tentang pengguna yang dituju. Dengan pemahaman yang kuat tentang Pengantar UX Research, kita dapat melangkah maju dalam proses pengembangan produk yang lebih baik, responsif terhadap kebutuhan pengguna, dan mampu bersaing di pasar yang terus berubah.",
          "url_video": "https://youtu.be/TAIrIAMLM4U?si=Svq55FnQxiNTi3Yw"
        },
        {
          "id": 99,
          "chapter_id": 54,
          "course_id": 15,
          "title": "Metodologi UX Research",
          "content": "Metodologi UX Research adalah serangkaian langkah sistematis yang digunakan dalam memahami pengguna dan menerapkan wawasan yang diperoleh ke dalam pengembangan produk. Langkah pertama adalah pemahaman tujuan riset, yang membimbing seluruh proses riset berikutnya. Kemudian, metode yang tepat dipilih sesuai dengan tujuan riset, seperti wawancara, observasi, atau pengujian pengguna. Tahap perancangan studi riset melibatkan persiapan alat dan instrumen untuk pengumpulan data. Eksekusi riset melibatkan interaksi langsung dengan pengguna atau pengujian produk. Data yang terkumpul kemudian dianalisis menggunakan teknik kualitatif atau kuantitatif, dan hasilnya diinterpretasikan untuk menghasilkan wawasan yang berguna. Metodologi ini bersifat iteratif, memungkinkan untuk memperbaiki desain produk berdasarkan temuan riset. Fleksibilitas dalam pendekatan riset adalah kunci, memastikan adaptasi terhadap kebutuhan yang terus berubah dari pengguna dan produk yang dikembangkan. Dengan menggunakan metodologi UX Research, pengembang produk dapat memastikan bahwa produk yang dihasilkan memiliki relevansi yang tinggi, diandalkan, dan memberikan pengalaman pengguna yang optimal.",
          "url_video": "https://youtu.be/YTyBUhCJ4TY?si=TinHjV2DcepzzOup"
        },
        {
          "id": 100,
          "chapter_id": 54,
          "course_id": 15,
          "title": "Etika dalam UX Research",
          "content": "Etika dalam UX Research merupakan fondasi yang mengatur tata kelola dan perilaku peneliti dalam mengadakan riset terhadap pengguna. Prinsip-prinsip etika ini menekankan perlunya melindungi privasi dan keamanan pengguna yang menjadi subjek riset, serta menjunjung tinggi integritas dalam pengumpulan, penggunaan, dan pelaporan data yang terkumpul. Hal ini mencakup menjaga kerahasiaan informasi pribadi pengguna, memperlakukan peserta riset dengan hormat, mendapatkan persetujuan informasional sebelum riset dilakukan, serta menjaga transparansi dan keterbukaan tentang tujuan dan penggunaan data riset. Perlindungan data pengguna juga menjadi perhatian utama, termasuk anonimitas, kontrol akses, dan keamanan data. Praktik etis yang dipegang teguh dalam UX Research bukan hanya sebagai kewajiban moral, tetapi juga sebagai kunci dalam membangun kepercayaan yang kokoh dengan pengguna. Dengan mematuhi prinsip-prinsip etika ini, peneliti dapat memastikan bahwa riset yang dilakukan adalah bermanfaat, legal, dan dilaksanakan dengan integritas penuh demi kebaikan pengguna dan perkembangan yang positif pada produk yang dikembangkan.",
          "url_video": "https://youtu.be/cySX_CmFGcc?si=WLV0mJMtWk2zYo1-"
        },
        {
          "id": 102,
          "chapter_id": 55,
          "course_id": 15,
          "title": "Wawancara Pengguna",
          "content": "Wawancara pengguna merupakan metode riset kualitatif yang mendalam yang digunakan untuk mendapatkan pemahaman mendalam tentang pengalaman, preferensi, dan kebutuhan pengguna terkait produk, layanan, atau pengalaman tertentu. Proses ini dimulai dengan perencanaan yang melibatkan penentuan tujuan wawancara, pengembangan pertanyaan yang relevan, dan pemilihan sampel pengguna yang mewakili audiens yang dituju. Selama wawancara, peneliti membangun hubungan yang baik dengan responden, menciptakan lingkungan yang nyaman, dan menggunakan pertanyaan terstruktur atau semi-terstruktur untuk menggali informasi yang mendalam. Informasi yang diperoleh direkam untuk analisis lebih lanjut. Ada beberapa jenis wawancara pengguna, termasuk terstruktur, semi-terstruktur, dan terbuka, yang masing-masing memiliki pendekatan yang berbeda. Wawancara pengguna adalah alat yang sangat berharga dalam UX Research karena memberikan wawasan yang komprehensif tentang pengalaman pengguna secara langsung dari sumbernya. Dengan memanfaatkan wawancara pengguna dengan baik, tim pengembangan dapat merancang produk yang lebih sesuai dengan kebutuhan pengguna, meningkatkan kepuasan, dan mengidentifikasi area untuk perbaikan atau inovasi lebih lanjut.",
          "url_video": "https://youtu.be/121smD-J7oA?si=b10Thb2rpG767PFk"
        },
        {
          "id": 103,
          "chapter_id": 55,
          "course_id": 15,
          "title": "Observasi dan Pengamatan",
          "content": "Observasi dan pengamatan dalam riset UX merupakan metode yang memungkinkan peneliti untuk mendapatkan wawasan mendalam tentang perilaku pengguna dalam konteks nyata. Proses dimulai dengan perencanaan observasi yang melibatkan penentuan tujuan, lingkungan, dan konteks yang akan diamati. Selama observasi, peneliti secara langsung mengamati interaksi pengguna dengan produk atau lingkungan yang diteliti, mencatat perilaku, interaksi, dan pola yang muncul. Informasi yang teramati direkam melalui catatan tertulis, foto, video, atau sketsa untuk analisis lebih lanjut. Terdapat berbagai jenis observasi seperti terbuka, terarah, dan partisipatif yang digunakan sesuai dengan kebutuhan riset. Dari analisis data observasi ini, peneliti dapat mengekstrak wawasan yang berguna tentang bagaimana pengguna berinteraksi dengan produk, membantu dalam mengidentifikasi masalah, memahami kebutuhan pengguna, serta merancang perbaikan atau inovasi yang lebih tepat sesuai dengan pengalaman pengguna yang diinginkan.",
          "url_video": "https://youtu.be/zGCRhd3r4fE?si=9qD8ENgnLn-jZlmP"
        },
        {
          "id": 104,
          "chapter_id": 55,
          "course_id": 15,
          "title": "Pengujian Pengguna (User Testing)",
          "content": "Pengujian Pengguna (User Testing) merupakan langkah krusial dalam proses pengembangan produk yang bertujuan untuk mengevaluasi kegunaan dan kinerja produk dengan melibatkan pengguna aktual. Tahapan awal melibatkan perencanaan yang mencakup penentuan tujuan pengujian, identifikasi pengguna yang sesuai, serta pembuatan skenario dan tugas yang harus diselesaikan. Selama proses pengujian, pengguna diuji dalam penggunaan produk atau prototipe dalam lingkungan yang bisa berupa laboratorium atau di lapangan. Observasi aktif dilakukan untuk mencatat masalah yang muncul dan interaksi yang terjadi, sementara pengguna memberikan umpan balik langsung terkait pengalaman mereka. Data yang terkumpul dianalisis untuk mengidentifikasi masalah, tren, serta peluang perbaikan yang dapat meningkatkan pengalaman pengguna. Pengujian Pengguna dapat dilakukan pada tahap awal pengembangan (Pengujian Prototipe) maupun pada produk hampir final sebelum diluncurkan ke pasar (Final User Testing). Pendekatan bisa berupa pengujian dimoderasi yang membutuhkan kehadiran moderator atau pengujian tidak dimoderasi yang dilakukan mandiri oleh pengguna. Dengan memanfaatkan pengujian pengguna secara efektif, tim pengembangan dapat memastikan bahwa produk yang dihasilkan lebih sesuai dengan kebutuhan pengguna, meminimalisir masalah, dan meningkatkan keseluruhan pengalaman pengguna.",
          "url_video": "https://youtu.be/AGjJt62j4Fo?si=k81wJhYlyf1e0bLJ"
        },
        {
          "id": 105,
          "chapter_id": 56,
          "course_id": 15,
          "title": "Analisis Data UX Research",
          "content": "Analisis data dalam User Experience (UX) Research merupakan tahapan kritis yang dilakukan setelah pengumpulan data dari berbagai metode penelitian seperti wawancara, observasi, survei, dan pengujian pengguna. Proses dimulai dengan pemrosesan data, termasuk pengorganisasian, penyaringan, dan pengaturan data yang diperoleh, memungkinkan data dapat diolah dengan lebih efisien. Exploratory Data Analysis (EDA) dilakukan untuk memahami karakteristik data dan menemukan pola awal yang menjadi dasar untuk penentuan pendekatan analisis yang tepat. Berbagai metode analisis kemudian diterapkan, seperti analisis kualitatif untuk data deskriptif dan analisis kuantitatif untuk data numerik. Hasil dari analisis ini dianalisis lebih lanjut untuk menghasilkan wawasan yang dapat diinterpretasikan dalam konteks pengembangan produk atau layanan. Ada berbagai perangkat lunak dan alat analisis data seperti R, Python, SPSS, NVivo, dan sebagainya yang digunakan oleh para peneliti UX. Analisis data dalam UX Research membantu tim pengembangan untuk memahami kebutuhan pengguna, mengidentifikasi masalah, menguji hipotesis, dan membuat keputusan berdasarkan bukti yang ada, yang semuanya berkontribusi pada pengembangan produk atau layanan yang fokus pada pengalaman pengguna yang optimal.",
          "url_video": "https://youtu.be/XI8ZHP4xeM0?si=KxCvhTB38C44RUEi"
        },
        {
          "id": 106,
          "chapter_id": 56,
          "course_id": 15,
          "title": "Penerapan Hasil Riset ke Desain ",
          "content": "Penerapan hasil riset ke desain adalah langkah integral dalam pengembangan produk atau layanan yang bertujuan memberikan pengalaman pengguna yang unggul (User Experience/UX). Proses ini melibatkan analisis mendalam terhadap data riset pengguna untuk mengidentifikasi wawasan yang krusial. Temuan-temuan ini menjadi landasan dalam menentukan prioritas desain, memandu tim desain untuk fokus pada aspek yang paling penting bagi pengguna. Dalam tahap iterasi, desain produk direvisi sesuai dengan temuan riset, memungkinkan perubahan antarmuka, fungsi, atau fitur untuk meningkatkan pengalaman pengguna. Prototipe baru dibuat dan diujicobakan kembali kepada pengguna, memastikan efektivitas perubahan yang telah dilakukan. Evaluasi lanjutan dan implementasi produk memungkinkan pengembang untuk terus meningkatkan produk berdasarkan umpan balik dan data yang terkini. Prinsip utama dalam penerapan hasil riset ke desain adalah fokus pada pengguna, pengujian berulang, dan fleksibilitas dalam mengadaptasi perubahan berdasarkan umpan balik pengguna dan perubahan pasar. Hal ini memastikan bahwa produk yang dihasilkan lebih responsif terhadap kebutuhan pengguna, meningkatkan kepuasan dan pengalaman pengguna secara keseluruhan.",
          "url_video": "https://youtu.be/EUMbDMMYhXc?si=wi16X01GGCoJLt9l"
        },
        {
          "id": 107,
          "chapter_id": 56,
          "course_id": 15,
          "title": "Presentasi dan Pelaporan Riset",
          "content": "Presentasi dan pelaporan riset merupakan tahap penting dalam siklus riset, di mana hasil temuan dari proses riset disampaikan kepada berbagai pemangku kepentingan. Langkah awal melibatkan pemahaman audiens yang akan menerima presentasi atau laporan, untuk menyesuaikan gaya dan tingkat kedalaman informasi yang disajikan. Struktur yang jelas, memulai dari pengantar yang menjelaskan tujuan riset, metodologi, hingga kesimpulan, menjadi landasan penting. Visualisasi data melalui grafik, tabel, dan ilustrasi membantu untuk memperjelas temuan riset. Fokus diberikan pada temuan utama yang paling relevan, sambil memberikan implikasi yang jelas serta rekomendasi yang terkait dengan pengembangan produk atau layanan. Penyampaian yang mudah dipahami tanpa jargon teknis yang membingungkan menjadi kunci efektivitas. Ada berbagai bentuk presentasi dan pelaporan, mulai dari presentasi lisan, laporan tertulis, hingga infografik atau pameran, yang dapat dipilih sesuai kebutuhan dan audiens. Secara keseluruhan, tujuan utama dari presentasi dan pelaporan riset adalah memastikan hasil riset disampaikan secara jelas, relevan, dan fokus pada temuan kunci untuk mendukung pengambilan keputusan yang tepat terkait pengembangan produk atau layanan.",
          "url_video": "https://youtu.be/vp_7BKOrQHs?si=BdaoXE3YBZVhPtKn"
        }
      ],
      "orders": [
        {
          "id": 21,
          "course_id": 15,
          "user_id": 12,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703416677024",
          "createdAt": "2023-12-24T11:17:57.025Z",
          "updatedAt": "2023-12-24T11:17:57.025Z"
        }
      ],
      "comments": [],
      "ratings": [],
      "userProgress": [
        {
          "id": 209,
          "user_id": 12,
          "course_id": 15,
          "chapter_id": 54,
          "course_material_id": 98,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 210,
          "user_id": 12,
          "course_id": 15,
          "chapter_id": 54,
          "course_material_id": 99,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 211,
          "user_id": 12,
          "course_id": 15,
          "chapter_id": 54,
          "course_material_id": 100,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 212,
          "user_id": 12,
          "course_id": 15,
          "chapter_id": 55,
          "course_material_id": 102,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 213,
          "user_id": 12,
          "course_id": 15,
          "chapter_id": 55,
          "course_material_id": 103,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 214,
          "user_id": 12,
          "course_id": 15,
          "chapter_id": 55,
          "course_material_id": 104,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 215,
          "user_id": 12,
          "course_id": 15,
          "chapter_id": 56,
          "course_material_id": 105,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 216,
          "user_id": 12,
          "course_id": 15,
          "chapter_id": 56,
          "course_material_id": 106,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 217,
          "user_id": 12,
          "course_id": 15,
          "chapter_id": 56,
          "course_material_id": 107,
          "is_completed": false,
          "completed_at": null
        }
      ],
      "averageRating": null
    },
    {
      "id": 14,
      "title": "Course Kotlin for Android: Beginner",
      "description": "Course Kotlin for Android: Beginner dirancang khusus untuk membantu pemula memahami dasar-dasar pengembangan aplikasi Android menggunakan bahasa pemrograman Kotlin. Dalam kursus ini, Anda akan diperkenalkan dengan konsep-konsep dasar Kotlin dan bagaimana mengaplikasikannya dalam konteks pengembangan aplikasi Android. Kursus ini dirancang untuk membantu Anda membangun landasan yang kuat dalam penggunaan Kotlin untuk membuat aplikasi Android yang efektif dan efisien.",
      "target_audience": [
        "Mahasiswa atau Siswa Teknik Informatika",
        "Pengembang atau Programmer yang Ingin Beralih ke Android"
      ],
      "prerequisite": [
        "Pengetahuan Dasar Pemrograman",
        "Pemahaman Dasar tentang Konsep Pengembangan Aplikasi Mobile",
        "Kemauan untuk Belajar"
      ],
      "price": 0,
      "type_course": "free",
      "level": "pemula",
      "url_group": "www.discord.com/backend2",
      "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231213_7KaF3FAw6",
      "createdAt": "2023-12-09T01:28:22.172Z",
      "updatedAt": "2023-12-22T10:41:08.914Z",
      "category_id": 4,
      "chapters": [
        {
          "id": 49,
          "title": "Chapter 1 - Pengenalan Kotlin dan dasar-dasar Android",
          "course_id": 14,
          "content": "Chapter pertama ini akan memperkenalkan Anda pada bahasa pemrograman Kotlin dan memahami keunggulan serta kegunaannya dalam pengembangan aplikasi Android. Anda akan belajar tentang dasar-dasar Kotlin, termasuk variabel, tipe data, struktur kontrol, dan fungsi. Selain itu, Anda akan memahami bagaimana Kotlin berinteraksi dengan platform Android, mulai dari struktur proyek hingga pembuatan tampilan sederhana menggunakan XML dan Kotlin."
        },
        {
          "id": 50,
          "title": "Chapter 2 - Fundamental Kotlin untuk Pengembangan Android",
          "course_id": 14,
          "content": "Pada chapter kedua, Anda akan menjelajahi konsep-konsep Object-Oriented Programming (OOP) dalam Kotlin dan bagaimana menerapkannya dalam konteks pengembangan Android. Melalui topik ini, Anda akan memahami penggunaan Kotlin Android Extensions, interaksi antara komponen Android seperti Activities dan Fragments, serta manfaat penggunaan Intent untuk navigasi antar aktivitas."
        },
        {
          "id": 52,
          "title": "Chapter 3 - Advanced Topics in Kotlin for Android",
          "course_id": 14,
          "content": "Chapter terakhir akan membawa Anda ke tingkat yang lebih mendalam dalam pengembangan aplikasi Android menggunakan Kotlin. Anda akan mempelajari manajemen data dengan Kotlin, termasuk penggunaan Shared Preferences, SQLite, dan Room Persistence Library. Selain itu, kursus ini akan mengenalkan Anda pada Kotlin Coroutines untuk pemrograman asynchronous, serta teknik optimisasi kode dan alat bantu debugging yang dapat meningkatkan kinerja aplikasi Android Anda."
        }
      ],
      "materials": [
        {
          "id": 86,
          "chapter_id": 49,
          "course_id": 14,
          "title": "Pengenalan Kotlin",
          "content": "Kotlin merupakan bahasa pemrograman modern yang sangat diminati dalam pengembangan aplikasi, terutama di platform Android. Dikembangkan oleh JetBrains, Kotlin menawarkan sintaksis yang bersih, ekspresif, dan ringkas, membuatnya mudah dipelajari dan digunakan oleh para pengembang. Salah satu keunggulan utamanya adalah keamanan jenis data yang kuat, mengurangi risiko kesalahan umum seperti NullPointerException dengan sistem yang memeriksa nilai null secara otomatis. Keunggulan lainnya adalah interoperabilitasnya yang baik dengan Java, memungkinkan integrasi yang lancar dengan kode Java yang sudah ada. Fitur-fitur kunci termasuk null safety, extension functions, dukungan penuh terhadap pemrograman fungsional, dan kemampuan coroutines untuk pemrograman asynchronous yang efisien. Kotlin banyak digunakan dalam pengembangan aplikasi Android dan juga dapat diterapkan dalam pengembangan backend serta aplikasi desktop. Dukungan yang kuat dari komunitas dan perusahaan serta keunggulan fiturnya menjadikan Kotlin sebagai pilihan utama bagi pengembang dalam membangun aplikasi yang aman, efisien, dan inovatif.",
          "url_video": "https://youtu.be/6dSNbskzlz4?si=N4tqsPU0aIS6rIMp"
        },
        {
          "id": 87,
          "chapter_id": 49,
          "course_id": 14,
          "title": "Dasar-dasar Kotlin",
          "content": "Dasar-dasar Kotlin membentuk fondasi yang penting dalam pemrograman dengan bahasa ini. Dalam Kotlin, pengguna dapat mendefinisikan berbagai jenis variabel dengan tipe data seperti Int, Float, Double, Boolean, Char, dan lainnya, menggunakan kata kunci `val` untuk nilai yang tetap dan `var` untuk nilai yang dapat diubah. Struktur kontrol seperti `if`, `else`, `when`, dan perulangan `for` serta `while` memungkinkan pengontrolan alur eksekusi program dan iterasi melalui data. Fungsi-fungsi dapat didefinisikan dengan kata kunci `fun`, termasuk fungsi tingkat tinggi yang dapat diteruskan atau mengembalikan fungsi lain sebagai hasil. Kotlin juga mendukung konsep OOP seperti kelas, objek, pewarisan, enkapsulasi, dan polimorfisme. Salah satu fitur utama Kotlin adalah null safety yang secara alami mengelola nilai-nilai yang dapat bernilai null untuk menghindari NullPointerException. Ekstensi (Extension Functions) memungkinkan penambahan fungsi baru ke kelas yang sudah ada tanpa mengubah struktur asli kelas tersebut. Kotlin juga mendukung paradigma pemrograman fungsional dengan lambda expressions, operasi pada koleksi, dan fitur coroutines yang memudahkan pemrograman asynchronous untuk menangani tugas-tugas latar belakang tanpa kompleksitas yang terkait dengan threading atau callback secara langsung. Pemahaman mendalam terhadap dasar-dasar Kotlin memungkinkan pengembang untuk membangun aplikasi yang efisien, kuat, dan aman dalam bahasa pemrograman ini.",
          "url_video": "https://youtu.be/_x8aEC-si5Y?si=SjqY2Kagwb2ClTtw"
        },
        {
          "id": 88,
          "chapter_id": 49,
          "course_id": 14,
          "title": "Pengantar Pengembangan Android dengan Kotlin",
          "content": "Pengantar Pengembangan Android dengan Kotlin membawa para pemula ke dalam dunia pengembangan aplikasi Android menggunakan bahasa pemrograman Kotlin. Materi ini memperkenalkan lingkungan pengembangan, terutama Android Studio, sebagai IDE utama untuk membuat aplikasi Android dengan Kotlin. Ini juga menjelaskan interaksi antara Kotlin dan XML dalam mengontrol logika aplikasi dan merancang tampilan UI. Fokusnya termasuk pembuatan tampilan sederhana menggunakan XML untuk menampilkan elemen UI dasar seperti tombol, teks, dan gambar, sementara Kotlin memberikan fungsi dan perilaku pada elemen-elemen tersebut. Pengantar ini juga mencakup konsep dasar komponen Android seperti Activities, Fragments, dan Views, serta cara integrasi fitur khusus Android dan praktik terbaik dalam pengembangan aplikasi dengan Kotlin. Tujuannya adalah memberikan landasan pemahaman yang kokoh bagi pemula untuk mulai membangun aplikasi Android dengan Kotlin, memperoleh pemahaman awal yang penting dalam proses pengembangan aplikasi Android.",
          "url_video": "https://youtu.be/W-SE6lGd1E0?si=1dkacn1YArQx4K7i"
        },
        {
          "id": 90,
          "chapter_id": 50,
          "course_id": 14,
          "title": "Konsep OOP dalam Kotlin",
          "content": "Konsep OOP (Object-Oriented Programming) dalam Kotlin menawarkan landasan yang integral dalam pembangunan aplikasi dengan fokus pada objek dan hubungan antar mereka. Dalam Kotlin, kelas berperan sebagai cetakan yang mendefinisikan atribut (variabel) dan metode (fungsi), sementara objek merepresentasikan instance dari kelas tersebut. Pewarisan memungkinkan kelas turunan untuk mewarisi sifat-sifat dari kelas induknya, memperluas fungsionalitas, sedangkan enkapsulasi memungkinkan penyembunyian detail implementasi internal objek. Konsep polimorfisme memungkinkan objek menunjukkan berbagai perilaku dengan overriding (penggantian perilaku fungsi dari kelas induk) dan overloading (fungsi dengan nama yang sama tetapi parameter yang berbeda). Abstraksi memungkinkan pembuatan kelas abstrak sebagai kerangka kerja dasar, sementara interface menentukan perilaku yang harus diimplementasikan oleh kelas. Kotlin juga menawarkan fitur `companion object` untuk pembuatan objek yang terkait dengan kelas tanpa perlu menciptakan instance kelas tersebut, serta konsep Singleton yang memastikan hanya ada satu instance kelas yang dapat diakses secara global. Konsep-konsep OOP dalam Kotlin memberikan struktur yang kokoh bagi pengembang untuk mengorganisir kode secara terstruktur dan mudah dimengerti, memungkinkan pengembangan aplikasi yang lebih terkelola dan skalabel.",
          "url_video": "https://youtu.be/QlmMEagRNnA?si=j3BJzYL4-5MMF0x-"
        },
        {
          "id": 91,
          "chapter_id": 50,
          "course_id": 14,
          "title": "Kotlin Android Extensions",
          "content": "Kotlin Android Extensions adalah fitur penting dalam pengembangan aplikasi Android dengan Kotlin yang mempermudah koneksi antara kode Kotlin dan file XML yang mendefinisikan tampilan aplikasi. Fitur ini menghilangkan kebutuhan untuk menggunakan `findViewById()` secara manual, memungkinkan penggunaan sintaks yang lebih sederhana untuk mereferensikan elemen UI yang telah didefinisikan dalam file XML. Dengan Kotlin Android Extensions, pengembang dapat mengakses elemen UI langsung dalam kode Kotlin hanya dengan menggunakan nama yang sama seperti yang diberikan pada XML, mengurangi kompleksitas dan boilerplate code. Fitur property extensions juga memperluas fungsionalitas kelas bawaan Android, memungkinkan penambahan properti tambahan ke elemen UI atau menetapkan fungsi click listener secara langsung. Meskipun memudahkan pengembangan, beberapa praktik terbaik menyarankan alternatif seperti View Binding atau Data Binding untuk aplikasi yang lebih besar guna manajemen yang lebih baik. Secara keseluruhan, Kotlin Android Extensions memberikan kemudahan signifikan dalam mengakses dan memanipulasi elemen UI, meningkatkan produktivitas pengembangan, dan mempercepat proses pengembangan aplikasi Android.",
          "url_video": "https://youtu.be/K1u8S2e41LA?si=mYwtE3LRLt7hppbe"
        },
        {
          "id": 93,
          "chapter_id": 50,
          "course_id": 14,
          "title": "Interaksi dengan Komponen Android",
          "content": "Interaksi dengan komponen-komponen inti Android merupakan esensi dalam pengembangan aplikasi dengan Kotlin. Hal ini meliputi aktivitas (Activities) yang mewakili layar aplikasi, fragmen (Fragments) sebagai bagian modular yang dapat digunakan kembali, serta views dan layouts untuk mengatur elemen antarmuka pengguna. Intents digunakan untuk memulai komponen baru, mentransfer data, atau menangani aksi tertentu dalam aplikasi. Services berperan di latar belakang untuk menjalankan tugas jangka panjang, sementara Broadcast Receivers mendengarkan pesan sistem atau aplikasi lain. Content Providers memfasilitasi berbagi data antaraplikasi. Pengembang berinteraksi dengan komponen-komponen ini melalui manajemen siklus hidup, pengaturan properti, menangani peristiwa, dan menggunakan berbagai libraries/APIs untuk menambahkan fungsionalitas tambahan seperti sensor perangkat, akses lokasi, kamera, dan lainnya. Pemahaman yang baik tentang interaksi dengan komponen-komponen ini membantu pengembang dalam membuat aplikasi yang responsif, berfungsi optimal, dan memanfaatkan fitur-fitur Android secara efisien.",
          "url_video": "https://youtu.be/0wYkzDNoaZg?si=8mvKOzRWOOIgbbkS"
        },
        {
          "id": 94,
          "chapter_id": 52,
          "course_id": 14,
          "title": "Pengelolaan Data dengan Kotlin",
          "content": "Pengelolaan data dengan Kotlin melibatkan serangkaian strategi untuk menyimpan, memproses, dan menggunakan data dalam aplikasi. Bahasa Kotlin menyediakan berbagai jenis tipe data serta kemampuan pengelompokan data dalam struktur data seperti Array, List, Set, dan Map, memudahkan pengelolaan data dalam berbagai bentuk. Kotlin juga mengatasi masalah nilai null dengan sistem null safety, memastikan keamanan dalam penanganan nilai-nilai yang tidak pasti. Operasi pada koleksi data menggunakan fungsi tingkat tinggi seperti map, filter, atau reduce mempermudah manipulasi data dalam koleksi. Untuk pengelolaan data persisten, Kotlin dapat berinteraksi dengan database SQLite atau menggunakan library seperti Room Persistence untuk menyimpan dan mengakses data lokal. Selain itu, Kotlin mendukung proses serialisasi dan deserialisasi data, integrasi dengan layanan web melalui library seperti Retrofit, serta pengelolaan status aplikasi dan pengujian data. Melalui fitur-fitur dan integrasi ini, pengelolaan data dengan Kotlin menjadi lebih efisien, aman, dan dapat diandalkan dalam pengembangan aplikasi.",
          "url_video": "https://youtu.be/Tmpv2S7fp34?si=T7RSHYKad2nlszAo"
        },
        {
          "id": 95,
          "chapter_id": 52,
          "course_id": 14,
          "title": "Kotlin Coroutines",
          "content": "Kotlin Coroutines adalah fitur dalam bahasa Kotlin yang memungkinkan penulisan kode asynchronous dengan mudah dan efisien. Mereka memfasilitasi penanganan tugas-tugas yang memerlukan waktu, seperti pemanggilan jaringan atau operasi IO, tanpa menghadapi kompleksitas dari callback atau manajemen thread secara langsung. Coroutines adalah lightweight threads yang dikelola oleh Kotlin Runtime, tidak menggunakan sumber daya banyak seperti thread konvensional, dan dapat menjalankan kode asynchronous tanpa memblokir proses utama. Melalui konsep suspend functions, coroutines dapat menjeda eksekusi tanpa menghalangi thread, memungkinkan untuk melakukan operasi asynchronous tanpa memblokir thread utama. Coroutine Scope mengatur siklus hidup sebuah coroutine, memungkinkan kontrol atas waktu hidup dan pengelolaan coroutines. Mekanisme bawaan untuk menangani pengecualian dalam coroutines memudahkan penanganan kesalahan. Terintegrasi dengan baik dalam berbagai library dan framework populer seperti Retrofit, Room, serta kotlinx.coroutines-android untuk pengembangan Android. Selain itu, Kotlin Coroutines memperkenalkan Kotlin Flows, yang memungkinkan pengeluaran sekuens data yang dapat berubah secara asynchronous, sering digunakan untuk pemrosesan data yang berkelanjutan. Dengan ekspresi yang kuat dan ringan, Kotlin Coroutines memberikan pendekatan yang bersih, mudah dibaca, dan responsif dalam menangani pemrograman asynchronous dalam aplikasi Kotlin.",
          "url_video": "https://youtu.be/Cu1c77pBFuo?si=PiCpwSgIh4ZKUT8j"
        },
        {
          "id": 96,
          "chapter_id": 52,
          "course_id": 14,
          "title": "Optimisasi Kode dan Debugging",
          "content": "Optimisasi Kode merupakan praktik penting dalam pengembangan perangkat lunak yang melibatkan pemilihan algoritma efisien, penggunaan struktur data yang tepat, manajemen memori yang bijaksana, penulisan kode yang bersih, serta optimalisasi penggunaan sumber daya seperti jaringan dan database. Sementara itu, debugging adalah proses krusial dalam mengidentifikasi dan memperbaiki kesalahan dalam kode. Menggunakan debugger, menangani pengecualian, logging yang efektif, melakukan pengujian dan profil aplikasi, serta melakukan refaktor kode adalah langkah-langkah penting dalam proses debugging. Keduanya, optimisasi kode dan debugging, merupakan langkah berkelanjutan yang membantu meningkatkan kualitas, kinerja, dan keandalan aplikasi serta meminimalkan kecacatan dan bug yang mungkin terjadi.",
          "url_video": "https://youtu.be/0WYF7mA1xFA?si=q0E1mhrqhABj886K"
        }
      ],
      "orders": [],
      "comments": [],
      "ratings": [
        {
          "id": 7,
          "course_id": 14,
          "user_id": 2,
          "rating": 4.5,
          "createdAt": "2023-12-21T04:14:30.674Z",
          "updatedAt": "2023-12-21T04:14:30.674Z"
        },
        {
          "id": 8,
          "course_id": 14,
          "user_id": 2,
          "rating": 3.2,
          "createdAt": "2023-12-21T07:16:20.750Z",
          "updatedAt": "2023-12-21T07:16:20.750Z"
        }
      ],
      "userProgress": [
        {
          "id": 3,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 88,
          "is_completed": true,
          "completed_at": "2023-12-12T11:10:12.598Z"
        },
        {
          "id": 40,
          "user_id": 13,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 86,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 41,
          "user_id": 13,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 87,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 42,
          "user_id": 13,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 88,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 43,
          "user_id": 13,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 90,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 44,
          "user_id": 13,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 91,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 45,
          "user_id": 13,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 93,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 46,
          "user_id": 13,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 94,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 47,
          "user_id": 13,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 95,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 48,
          "user_id": 13,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 96,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 70,
          "user_id": 14,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 86,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 71,
          "user_id": 14,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 87,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 72,
          "user_id": 14,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 88,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 73,
          "user_id": 14,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 90,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 74,
          "user_id": 14,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 91,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 75,
          "user_id": 14,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 93,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 76,
          "user_id": 14,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 94,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 77,
          "user_id": 14,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 95,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 78,
          "user_id": 14,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 96,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 1,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 86,
          "is_completed": true,
          "completed_at": "2023-12-19T02:53:22.467Z"
        },
        {
          "id": 2,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 87,
          "is_completed": true,
          "completed_at": "2023-12-19T03:38:44.357Z"
        },
        {
          "id": 141,
          "user_id": 15,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 87,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 142,
          "user_id": 15,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 88,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 143,
          "user_id": 15,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 90,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 144,
          "user_id": 15,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 91,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 145,
          "user_id": 15,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 93,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 146,
          "user_id": 15,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 94,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 147,
          "user_id": 15,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 95,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 148,
          "user_id": 15,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 96,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 5,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 91,
          "is_completed": true,
          "completed_at": "2023-12-21T03:38:35.171Z"
        },
        {
          "id": 6,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 93,
          "is_completed": true,
          "completed_at": "2023-12-21T03:38:38.126Z"
        },
        {
          "id": 8,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 95,
          "is_completed": true,
          "completed_at": "2023-12-21T03:38:43.716Z"
        },
        {
          "id": 9,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 96,
          "is_completed": true,
          "completed_at": "2023-12-21T03:38:46.583Z"
        },
        {
          "id": 140,
          "user_id": 15,
          "course_id": 14,
          "chapter_id": 49,
          "course_material_id": 86,
          "is_completed": true,
          "completed_at": "2023-12-21T04:36:55.119Z"
        },
        {
          "id": 4,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 50,
          "course_material_id": 90,
          "is_completed": true,
          "completed_at": "2023-12-21T02:24:31.172Z"
        },
        {
          "id": 7,
          "user_id": 2,
          "course_id": 14,
          "chapter_id": 52,
          "course_material_id": 94,
          "is_completed": true,
          "completed_at": "2023-12-21T03:38:40.822Z"
        }
      ],
      "averageRating": 3.85
    },
    {
      "id": 13,
      "title": "Data Analyst Skillpath: Beginner in Excel, SQL & Python",
      "description": "Course komprehensif ini dirancang untuk membimbing calon Data Analyst dari pengetahuan dasar hingga level yang kompeten dalam menggunakan alat-alat penting untuk manipulasi, analisis, dan visualisasi data. Course ini terbagi menjadi tiga chapter yang berbeda, masing-masing didedikasikan untuk aspek penting dalam analisis data, yaitu Excel, SQL, dan Python.",
      "target_audience": [
        "Mahasiswa atau Siswa Ilmu Komputer atau Ilmu Data",
        "Pengusaha",
        "Pemilik Bisnis"
      ],
      "prerequisite": [
        "Pemahaman Dasar tentang Data dan Analisis",
        "Pemahaman Dasar Matematika dan Statistik",
        "Keterampilan Komputer Dasar",
        "Kemauan untuk Belajar",
        "Kemampuan Logis dan Problem Solving"
      ],
      "price": 0,
      "type_course": "free",
      "level": "menengah",
      "url_group": "www.discord.com/backend2",
      "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231213_3mBHL1HDf",
      "createdAt": "2023-12-08T23:30:50.407Z",
      "updatedAt": "2023-12-22T10:34:25.686Z",
      "category_id": 6,
      "chapters": [
        {
          "id": 46,
          "title": "Chapter 1: Dasar Excel",
          "course_id": 13,
          "content": "Chapter pertama ini bertujuan untuk memperkenalkan dan memperdalam pemahaman peserta dalam penggunaan Excel untuk manipulasi data. Materi dimulai dengan pengenalan antarmuka Excel serta navigasi dasar dalam spreadsheet. Peserta akan belajar tentang penggunaan formula dan referensi sel untuk melakukan perhitungan dan manipulasi data secara efisien. Selain itu, mereka akan mempelajari teknik penyaringan dan pengurutan data, serta penerapan fungsi seperti SUM, AVERAGE, IF, dan VLOOKUP untuk analisis data. Bab ini juga mengajarkan cara membuat grafik dan diagram untuk memvisualisasikan data dengan lebih efektif."
        },
        {
          "id": 47,
          "title": "Chapter 2: Dasar-dasar SQL",
          "course_id": 13,
          "content": "Chapter kedua fokus pada pengenalan dasar SQL untuk mengakses dan mengelola data dalam basis data relasional. Materi dimulai dengan memahami struktur dasar bahasa SQL, termasuk penggunaan perintah SELECT, FROM, dan WHERE. Peserta akan belajar bagaimana melakukan kueri data dari tabel, menerapkan teknik penyaringan, pengurutan, dan pengelompokan data, serta memahami konsep operasi join untuk menggabungkan data dari berbagai tabel. Bab ini juga mencakup teknik manipulasi data seperti menyisipkan, memperbarui, dan menghapus data, serta penggunaan fungsi agregasi untuk analisis data yang lebih mendalam."
        },
        {
          "id": 48,
          "title": "Chapter 3: Python untuk Analisis Data",
          "course_id": 13,
          "content": "Chapter terakhir kursus ini membahas penggunaan Python sebagai alat untuk analisis data. Materi dimulai dengan pengenalan dasar bahasa pemrograman Python serta penggunaan perpustakaan Pandas untuk manipulasi data. Peserta akan mempelajari cara memuat dan membersihkan dataset, serta menerapkan transformasi data menggunakan Pandas. Selain itu, bab ini juga mengajarkan penggunaan perpustakaan Matplotlib untuk menciptakan visualisasi data yang informatif, membantu peserta dalam menyampaikan temuan analisis secara visual dan jelas."
        }
      ],
      "materials": [
        {
          "id": 77,
          "chapter_id": 46,
          "course_id": 13,
          "title": "Pengenalan Excel",
          "content": "Pengenalan Excel adalah fondasi utama dalam analisis data dan pengelolaan informasi menggunakan spreadsheet. Microsoft Excel, yang sering digunakan, memiliki antarmuka pengguna yang terdiri dari toolbar, ribbon, dan worksheet yang terdiri dari sel-sel tempat data dimasukkan. Di dalamnya, formula dan berbagai fungsi bawaan seperti SUM, AVERAGE, dan VLOOKUP memungkinkan perhitungan matematis serta analisis data. Excel memungkinkan pengguna untuk menyortir, menyaring, dan mengelompokkan data, sementara kemampuannya dalam membuat grafik dan diagram memudahkan visualisasi data untuk pemahaman pola dan tren. Dengan fitur analisis statistik sederhana, pemformatan data, dan kemampuan berbagi data secara online, Excel menjadi alat yang vital dalam berbagai bidang, memungkinkan pengguna untuk melakukan tugas analitis dengan efisien dan efektif.",
          "url_video": "https://youtu.be/vbMA72Kl8rw?si=0PzGok3gMaIMuF32"
        },
        {
          "id": 78,
          "chapter_id": 46,
          "course_id": 13,
          "title": "Manipulasi Data di Excel",
          "content": "Manipulasi data di Excel melibatkan serangkaian proses yang memungkinkan pengguna untuk mengelola informasi dengan efisien di dalam spreadsheet. Ini mencakup beragam fitur yang sangat berguna, seperti penyortiran data untuk mengatur data berdasarkan nilai tertentu, penyaringan data untuk menampilkan entri yang memenuhi kriteria yang ditentukan, dan penggunaan fungsi dan formula untuk melakukan perhitungan matematis serta analisis data. Selain itu, pengguna juga dapat melakukan manipulasi teks dan data, mengaplikasikan validasi data untuk memastikan konsistensi, serta menggunakan pengaturan kondisional untuk memberikan format pada sel berdasarkan aturan tertentu. Dengan beragam fitur ini, Excel memungkinkan pengguna untuk mengubah, menyajikan, dan menganalisis data dengan lebih efisien, memudahkan pemahaman informasi yang terdapat dalam dataset yang mereka kelola.",
          "url_video": "https://youtu.be/svoHIomyE2c?si=y42n1tQa7RVn84Ub"
        },
        {
          "id": 79,
          "chapter_id": 46,
          "course_id": 13,
          "title": "Grafik dan Diagram di Excel",
          "content": "Grafik dan diagram merupakan fitur kunci dalam Excel yang memfasilitasi pengguna dalam memvisualisasikan data secara lebih menarik dan mudah dipahami. Dalam Excel, tersedia berbagai jenis grafik, seperti grafik garis, batang, pie, dan scatter plot, yang dapat dipilih sesuai dengan jenis data yang ingin disajikan. Proses pembuatan grafik melibatkan pemilihan data yang ingin divisualisasikan dan pemilihan jenis grafik yang tepat dari menu Excel, kemudian dapat disesuaikan dengan menambahkan judul, sumbu, label, serta mengatur tata letak dan gaya visual. Selain grafik, Excel juga menyediakan berbagai jenis diagram, seperti diagram batang atau lingkaran, yang membantu dalam menggambarkan proporsi data dengan jelas. Fitur-fitur manipulasi yang ada memungkinkan pengguna untuk menyesuaikan konfigurasi grafik, termasuk pengaturan warna, tata letak, serta menambahkan elemen tambahan seperti garis tren atau label data. Grafik dan diagram dalam Excel menjadi alat yang sangat berguna dalam memvisualisasikan tren, perbandingan, dan distribusi data, memungkinkan pengguna untuk dengan cepat menganalisis dan memahami informasi yang terkandung dalam dataset dengan lebih efektif.",
          "url_video": "https://youtu.be/iUU391GgDaY?si=X9oWciScqfIBOqAJ"
        },
        {
          "id": 80,
          "chapter_id": 47,
          "course_id": 13,
          "title": "Pengenalan SQL",
          "content": "Pengenalan SQL (Structured Query Language) merupakan fondasi krusial dalam mengelola dan mengambil data dari basis data relasional. SQL adalah bahasa yang digunakan untuk berinteraksi dengan basis data, memungkinkan pengguna untuk melakukan operasi seperti pengambilan data, manipulasi data, dan mengelola struktur basis data. Bahasa ini terdiri dari pernyataan-pernyataan yang mencakup SELECT, INSERT, UPDATE, DELETE, dan pernyataan DDL (Data Definition Language) seperti CREATE, ALTER, DROP untuk mengatur struktur tabel. Klausa seperti WHERE digunakan untuk menentukan kriteria dalam operasi yang dilakukan. Fungsi dan operasi matematis serta string seperti SUM, AVG, COUNT, MAX, MIN, JOIN, GROUP BY, ORDER BY memungkinkan pengguna untuk melakukan perhitungan, agregasi, dan pengelompokan data dengan efisiensi tinggi. SQL juga memungkinkan pengambilan data menggunakan pernyataan SELECT, pengelolaan data dengan INSERT, UPDATE, DELETE, serta penggabungan data dari tabel berbeda dengan operasi JOIN, memanfaatkan kunci relasi antar tabel. Pengelolaan struktur basis data seperti pembuatan, modifikasi, dan penghapusan tabel juga dapat dilakukan menggunakan pernyataan DDL. Kemampuan untuk menguasai SQL menjadi keterampilan yang sangat berharga dalam mengelola data, memungkinkan pengguna untuk melakukan berbagai operasi esensial terkait basis data relasional dengan kemudahan dan ketepatan.",
          "url_video": "https://youtu.be/MXMVPgcN-gY?si=L6xx5KQfAnoogBKq"
        },
        {
          "id": 81,
          "chapter_id": 47,
          "course_id": 13,
          "title": "Pengambilan Data",
          "content": "Pengambilan data dalam SQL adalah proses inti untuk mengekstrak informasi dari basis data relasional. Ini dilakukan melalui pernyataan SELECT, yang memungkinkan pengguna untuk menentukan data yang ingin diambil dari tabel-tabel dalam basis data. Klausa-klausa seperti FROM digunakan untuk menunjukkan tabel yang diinginkan, sedangkan klausa WHERE digunakan untuk menerapkan filter pada data yang diambil berdasarkan kriteria tertentu. Klausa ORDER BY membantu dalam pengurutan data, sementara klausa GROUP BY digunakan untuk mengelompokkan data. Fungsi agregasi seperti SUM, AVG, COUNT, dan lainnya digunakan untuk melakukan perhitungan statistik pada data yang diambil. Operasi JOIN memungkinkan pengguna untuk menggabungkan data dari beberapa tabel berdasarkan kunci relasional. Subquery atau nested query memungkinkan pengguna untuk menjalankan kueri di dalam kueri, memberikan fleksibilitas tambahan dalam mengekstrak informasi yang kompleks dari basis data. Pengambilan data dalam SQL merupakan pondasi utama untuk analisis data yang efektif, memungkinkan pengguna untuk mengekstrak informasi yang relevan dan spesifik dari basis data yang mereka kelola.",
          "url_video": "https://youtu.be/WWxoeVL8Brs?si=pA24hucYyft7tzxC"
        },
        {
          "id": 82,
          "chapter_id": 47,
          "course_id": 13,
          "title": "Manipulasi Data dengan SQL",
          "content": "Manipulasi data dengan SQL melibatkan sejumlah operasi yang penting untuk mengubah, mengelola, dan mengatur data di dalam basis data relasional. Pernyataan SQL seperti INSERT digunakan untuk menambahkan baris data baru ke dalam tabel, sedangkan pernyataan UPDATE memungkinkan pembaruan nilai dalam baris yang ada. Pernyataan DELETE memungkinkan pengguna untuk menghapus baris dari tabel berdasarkan kriteria tertentu. Selain itu, SQL juga menyediakan perintah-perintah Data Definition Language (DDL) seperti CREATE TABLE untuk membuat tabel baru, ALTER TABLE untuk mengubah struktur tabel yang ada, dan DROP TABLE untuk menghapus tabel dari basis data. Di samping itu, fitur transaksi dalam SQL memastikan kelengkapan eksekusi serangkaian perintah atau dapat membatalkannya secara keseluruhan jika diperlukan. Manipulasi data dengan SQL memberikan kontrol yang kuat kepada pengguna untuk memanipulasi dan mengelola data sesuai kebutuhan dalam basis data relasional. Hal ini memungkinkan pengguna untuk menjaga keakuratan, konsistensi, dan integritas data dalam sistem basis data mereka.",
          "url_video": "https://youtu.be/lhVqna6WFVs?si=hTI_-WtGe_FvDu5b"
        },
        {
          "id": 83,
          "chapter_id": 48,
          "course_id": 13,
          "title": "Pengenalan Python",
          "content": "Python adalah bahasa pemrograman tingkat tinggi yang populer dan serbaguna. Dikenal dengan sintaksis yang mudah dipahami, Python menjadi pilihan utama bagi pemula dalam pemrograman karena strukturnya yang mirip dengan bahasa Inggris. Kelebihan Python terletak pada kemampuannya dalam beragam pengembangan perangkat lunak, termasuk web, analisis data, kecerdasan buatan, jaringan, dan lainnya. Python juga mendukung metode interpretasi dan kompilasi, memberikan fleksibilitas dalam cara menjalankan kode. Kemampuan dinamisnya dan manajemen tipe data yang kuat memungkinkan pengguna tidak perlu mendeklarasikan tipe variabel secara eksplisit. Selain itu, Python memiliki beragam pustaka dan framework yang memperluas fungsionalitasnya di berbagai bidang. Dukungan Python terhadap paradigma pemrograman yang beragam, seperti berorientasi objek, fungsional, dan prosedural, menjadikannya alat yang fleksibel dalam menyelesaikan berbagai macam masalah pemrograman. Keunggulan ini, bersama dengan komunitas yang besar dan aktif, serta dokumentasi yang kuat, menjadikan Python sebagai salah satu bahasa pemrograman yang diminati dalam pengembangan solusi perangkat lunak yang efisien dan kuat.",
          "url_video": "https://youtu.be/iA8lLwmtKQM?si=-jn5V1Grli1CWBuA"
        },
        {
          "id": 84,
          "chapter_id": 48,
          "course_id": 13,
          "title": "Penanganan Data dengan Pandas",
          "content": "Pandas merupakan pustaka yang sangat populer dalam pemrosesan dan analisis data menggunakan Python. Diintegrasikan dengan Python, Pandas menyediakan struktur data utama seperti DataFrame, yang mirip dengan tabel spreadsheet, serta Series, yang merupakan struktur data satu dimensi. Pustaka ini memudahkan pengguna dalam membaca dan menulis data dari berbagai format seperti CSV, Excel, SQL, JSON, dan HTML, memungkinkan impor data dari berbagai sumber. Selain itu, Pandas menawarkan kemampuan manipulasi data yang luas, termasuk seleksi, pengindeksan, pengelompokan, dan pemrosesan data tanggal-waktu. Dalam pengolahan data, Pandas menyediakan berbagai fungsi statistik bawaan, memungkinkan operasi penggabungan data, pengurutan, serta penanganan nilai yang hilang. Selain itu, Pandas dapat berkolaborasi dengan pustaka visualisasi seperti Matplotlib dan Seaborn untuk menciptakan visualisasi data yang informatif. Keunggulan Pandas juga terletak pada kemampuannya mengoptimalkan kinerja dalam memproses data besar dengan teknik vektorisasi dan pengindeksan yang efisien. Secara keseluruhan, Pandas memberikan kemudahan dan kekuatan dalam mengelola, membersihkan, menganalisis, dan memvisualisasikan data, menjadikannya alat yang sangat berharga dalam analisis data dengan Python.",
          "url_video": "https://youtu.be/ma4rv9RFqtk?si=zo2aCI8kyOrAz5DP"
        },
        {
          "id": 85,
          "chapter_id": 48,
          "course_id": 13,
          "title": "Visualisasi Data dengan Matplotlib",
          "content": "Matplotlib merupakan pustaka visualisasi data yang sangat penting dalam analisis data menggunakan Python. Pustaka ini menawarkan beragam jenis grafik seperti grafik garis, batang, histogram, scatter plot, dan lainnya. Dalam menggunakan Matplotlib, pengguna memanfaatkan konsep objek (Figure) sebagai jendela utama visualisasi dan (Axes) sebagai area di dalamnya untuk menampilkan data. Pembuatan grafik dilakukan dengan menggunakan fungsi-fungsi seperti `plot()`, `scatter()`, `bar()`, dan sejenisnya, yang dapat disesuaikan dengan penambahan judul, label sumbu, label data, serta penyesuaian visual seperti warna, gaya garis, dan jenis marker. Pengguna juga dapat membuat subplot, yaitu beberapa grafik dalam satu tampilan, serta menyimpan grafik yang dihasilkan dalam berbagai format file. Selain itu, Matplotlib dapat berkolaborasi dengan pustaka lain seperti Pandas dan Seaborn untuk menyederhanakan proses pembuatan grafik dari data dalam DataFrame. Dengan kemampuannya yang kuat dalam visualisasi data, Matplotlib memungkinkan pengguna untuk menyajikan informasi dengan lebih jelas dan menarik, membantu dalam menggambarkan pola, tren, dan temuan penting dari analisis data.",
          "url_video": "https://youtu.be/5ISmXYJMxmI?si=84yZbNghfCpgOzbr"
        }
      ],
      "orders": [],
      "comments": [],
      "ratings": [
        {
          "id": 14,
          "course_id": 13,
          "user_id": 2,
          "rating": 4.8,
          "createdAt": "2023-12-22T04:03:13.352Z",
          "updatedAt": "2023-12-22T04:03:13.352Z"
        }
      ],
      "userProgress": [
        {
          "id": 13,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 80,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 14,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 81,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 15,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 82,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 16,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 83,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 17,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 84,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 18,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 85,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 49,
          "user_id": 13,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 77,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 50,
          "user_id": 13,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 78,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 51,
          "user_id": 13,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 79,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 52,
          "user_id": 13,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 80,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 53,
          "user_id": 13,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 81,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 54,
          "user_id": 13,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 82,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 55,
          "user_id": 13,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 83,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 56,
          "user_id": 13,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 84,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 57,
          "user_id": 13,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 85,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 100,
          "user_id": 14,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 77,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 101,
          "user_id": 14,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 78,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 102,
          "user_id": 14,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 79,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 103,
          "user_id": 14,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 80,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 104,
          "user_id": 14,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 81,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 105,
          "user_id": 14,
          "course_id": 13,
          "chapter_id": 47,
          "course_material_id": 82,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 106,
          "user_id": 14,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 83,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 107,
          "user_id": 14,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 84,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 108,
          "user_id": 14,
          "course_id": 13,
          "chapter_id": 48,
          "course_material_id": 85,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 12,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 79,
          "is_completed": true,
          "completed_at": "2023-12-25T01:09:15.961Z"
        },
        {
          "id": 10,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 77,
          "is_completed": true,
          "completed_at": "2023-12-21T03:39:15.838Z"
        },
        {
          "id": 11,
          "user_id": 2,
          "course_id": 13,
          "chapter_id": 46,
          "course_material_id": 78,
          "is_completed": true,
          "completed_at": "2023-12-25T01:03:00.317Z"
        }
      ],
      "averageRating": 4.8
    },
    {
      "id": 12,
      "title": "The Web Developer Bootcamp 2023",
      "description": "The Web Developer Bootcamp 2023 adalah Course intensif yang menyajikan fondasi esensial dalam pengembangan web menggunakan HTML, CSS, dan JavaScript. Course ini tidak hanya membahas aspek frontend seperti Flexbox, tetapi juga memperkenalkan konsep-konsep backend dengan Node.js dan database SQL. Peserta akan diberdayakan untuk menjadi full-stack developer dengan pembelajaran tentang pembuatan RESTful APIs, integrasi frontend-backend, serta pemanfaatan Git untuk manajemen versi dan deployment aplikasi web. Dengan pendekatan terstruktur, kursus ini bertujuan untuk mempersiapkan peserta agar memiliki landasan yang kuat dalam industri pengembangan web pada tahun 2023.",
      "target_audience": [
        "Pemula dalam Pengembangan Web",
        "Mahasiswa Teknik Informatika atau Ilmu Komputer",
        "Profesional TI yang ingin Beralih Karier",
        "Desainer Grafis atau Kreatif Digital"
      ],
      "prerequisite": [
        "Pengetahuan Dasar Komputer",
        "Keterampilan Dasar Pemrograman",
        "Kemauan untuk Belajar"
      ],
      "price": 0,
      "type_course": "free",
      "level": "pemula",
      "url_group": "www.discord.com/backend2",
      "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231213_x3Ik1HqON",
      "createdAt": "2023-12-08T22:54:46.209Z",
      "updatedAt": "2023-12-22T10:18:10.165Z",
      "category_id": 3,
      "chapters": [
        {
          "id": 42,
          "title": "Chapter 1: Pengenalan Fundamental Web Development",
          "course_id": 12,
          "content": "Pada chapter ini, peserta akan mempelajari dasar-dasar pengembangan web melalui HTML, CSS, dan JavaScript. Mereka akan menguasai cara membuat struktur dasar halaman web menggunakan HTML, menerapkan styling dengan CSS, dan memperoleh pemahaman tentang logika dan fungsionalitas dasar JavaScript."
        },
        {
          "id": 43,
          "title": "Chapter 2: Pengembangan Web Interaktif",
          "course_id": 12,
          "content": "Chapter ini memperdalam pemahaman peserta tentang JavaScript dengan fokus pada manipulasi DOM, penanganan event, dan penggunaan AJAX & Fetch API untuk berkomunikasi dengan server. Peserta akan belajar bagaimana membuat halaman web yang responsif dan interaktif."
        },
        {
          "id": 44,
          "title": "Chapter 3: Framework & Tools Modern Web Development",
          "course_id": 12,
          "content": "Pada chapter ini, peserta akan diperkenalkan dengan framework front-end seperti React.js atau Vue.js, serta belajar tentang pengembangan back-end menggunakan Node.js dan Express. Mereka juga akan memahami penggunaan Git untuk kontrol versi dan kolaborasi dalam pengembangan perangkat lunak."
        },
        {
          "id": 45,
          "title": "Chapter 4: Pengembangan Proyek dan Deployment",
          "course_id": 12,
          "content": "Chapter terakhir ini menekankan pada penerapan praktis dari pengetahuan yang diperoleh dalam proyek nyata. Peserta akan belajar tentang debugging, optimisasi kinerja, dan tahap-tahap deployment sebuah proyek web. Mereka akan mengembangkan keterampilan dalam mempersiapkan aplikasi untuk produksi dan memilih opsi hosting yang tepat."
        }
      ],
      "materials": [
        {
          "id": 64,
          "chapter_id": 42,
          "course_id": 12,
          "title": "Pengenalan HTML",
          "content": "Pengenalan HTML merupakan fondasi utama dalam pembangunan halaman web. HTML, singkatan dari HyperText Markup Language, adalah bahasa markup yang menentukan struktur dasar suatu halaman web dengan menggunakan elemen-elemen (tags) yang menandai berbagai jenis konten. Setiap elemen HTML dimulai dengan sebuah tag pembuka dan diakhiri dengan tag penutup, kecuali elemen tertentu yang tidak memerlukan penutup. Dalam struktur dasar dokumen HTML, terdapat elemen-elemen seperti `<html>`, `<head>`, `<title>`, dan `<body>`. Semantik memainkan peran penting dalam HTML dengan menyediakan elemen-elemen bawaan seperti `<header>`, `<footer>`, dan lainnya, yang memperjelas struktur konten. Konsep dasar seperti tag untuk judul (`<h1>` hingga `<h6>`), paragraf (`<p>`), tautan (`<a>`), gambar (`<img>`), serta list (`<ul>`, `<ol>`, `<li>`) merupakan bagian integral dari penulisan HTML. Atribut seperti `id`, `class`, `href`, dan `src` memberikan informasi tambahan atau menentukan karakteristik dari setiap elemen. Lebih lanjut, pemahaman tentang HTML5, validasi HTML, dan responsive design akan memperkaya kemampuan dalam membangun halaman web yang informatif dan responsif di berbagai perangkat. Dengan pemahaman yang kuat tentang struktur dasar HTML, pengembang web dapat menciptakan halaman web yang terstruktur dan kompatibel dengan berbagai browser.",
          "url_video": "https://youtu.be/NBZ9Ro6UKV8?si=L8IFo2zMEkTXleN1"
        },
        {
          "id": 65,
          "chapter_id": 42,
          "course_id": 12,
          "title": "CSS Dasar",
          "content": "CSS (Cascading Style Sheets) merupakan bahasa yang mengontrol tampilan dan presentasi elemen dalam dokumen HTML. Fungsinya adalah untuk mengatur gaya seperti warna, font, ukuran, dan layout halaman web. Konsep dasar CSS meliputi penggunaan selektor untuk menentukan elemen mana yang akan diubah gayanya, properti yang mengatur atribut seperti warna dan ukuran, serta box model yang memahami pemosisian elemen dalam halaman. Ada dua cara utama dalam menulis CSS: Internal CSS, yang dituliskan di dalam tag <style> dalam elemen <head> dokumen HTML, dan External CSS, yang terdapat dalam file terpisah dan dihubungkan ke dokumen HTML melalui tag <link>. Pengembangan lebih lanjut dalam CSS melibatkan pemahaman yang mendalam tentang selektor yang lebih spesifik, tata letak responsif menggunakan CSS Grid dan Flexbox, serta aspek kepatuhan dan kompatibilitas CSS dengan berbagai browser. Dengan pemahaman yang kuat tentang CSS, pengembang web mampu meningkatkan penampilan, kejelasan, dan responsivitas dari halaman web yang mereka bangun.",
          "url_video": "https://youtu.be/CleFk3BZB3g?si=bBCzaFtHDtRGuv6U"
        },
        {
          "id": 66,
          "chapter_id": 42,
          "course_id": 12,
          "title": "JavaScript Fundamentals",
          "content": "JavaScript, sebagai bahasa pemrograman tingkat tinggi yang berjalan di sisi klien pada web browser, memiliki peran krusial dalam memberikan interaktivitas pada halaman web. Konsep dasar JavaScript mencakup variabel untuk menyimpan nilai yang berubah, tipe data seperti string, number, boolean, serta operator untuk melakukan operasi pada nilai. Kontrol alur, dalam bentuk kondisional dan perulangan, memungkinkan pengaturan alur program berdasarkan kondisi yang ditentukan serta mengeksekusi blok kode secara berulang. Fungsi, sebagai blok kode yang dapat dipanggil dan digunakan kembali, memungkinkan untuk menerima input dan mengembalikan output. Penggunaan utama JavaScript meliputi manipulasi DOM untuk mengubah struktur dan konten halaman web, penggunaan AJAX & Fetch API untuk pengambilan data asinkron, serta penggunaan objek dan metode bawaan yang memfasilitasi operasi dalam bahasa ini. Kemampuan lebih lanjut dalam JavaScript mencakup pemahaman tentang ES6 dan fitur modern, penggunaan framework dan library seperti React, Angular, atau Vue.js untuk pengembangan aplikasi web yang kompleks, serta teknik debugging untuk mengidentifikasi dan memperbaiki kesalahan dalam kode JavaScript. Dengan pemahaman yang mendalam tentang JavaScript, pengembang dapat menciptakan aplikasi web yang dinamis, interaktif, dan responsif untuk meningkatkan pengalaman pengguna secara keseluruhan.",
          "url_video": "https://youtu.be/vEROU2XtPR8?si=LmllMxGOHEVQ8GSf"
        },
        {
          "id": 67,
          "chapter_id": 43,
          "course_id": 12,
          "title": "DOM Manipulasi dengan JavaScript",
          "content": "Manipulasi DOM (Document Object Model) dengan JavaScript adalah proses di mana JavaScript dapat mengakses, memodifikasi, dan mengubah elemen-elemen HTML pada halaman web secara dinamis. DOM adalah representasi struktur hierarkis dari dokumen HTML yang dibuat oleh browser. JavaScript menggunakan berbagai metode seperti `getElementById`, `getElementsByClassName`, `getElementsByTagName`, dan `querySelector` untuk memilih elemen-elemen dalam DOM. Setelah elemen terpilih, JavaScript dapat mengubah konten dengan mengedit properti seperti `innerHTML`, `innerText`, atau `textContent`, serta menambah atau menghapus elemen dengan menggunakan metode seperti `appendChild`, `removeChild`, `createElement`, dan lainnya. Selain itu, JavaScript juga dapat mengubah nilai atribut elemen seperti `class`, `id`, `src`, `href`, menggunakan metode seperti `setAttribute`, `getAttribute`, dan `removeAttribute`. Melalui manipulasi DOM, pengembang dapat menciptakan halaman web yang dinamis, menanggapi interaksi pengguna, validasi formulir, membuat animasi, serta meningkatkan responsivitas dan interaktivitas halaman web secara keseluruhan. Manipulasi DOM dengan JavaScript menjadi kunci dalam menciptakan pengalaman pengguna yang lebih baik dan interaktif dalam pengembangan aplikasi web.",
          "url_video": "https://youtu.be/Y8wDTG7qjuA?si=JvOtOUdxWg857Mw5"
        },
        {
          "id": 69,
          "chapter_id": 43,
          "course_id": 12,
          "title": "Event Handling",
          "content": "Event Handling dalam konteks pengembangan web merujuk pada kemampuan JavaScript dalam mendeteksi serta menanggapi berbagai peristiwa yang terjadi di dalam browser. Peristiwa ini bisa berupa tindakan pengguna seperti klik mouse, input keyboard, atau penggunaan form, maupun peristiwa lain seperti pemuatan halaman atau perubahan ukuran jendela. Konsep dasar dari Event Handling melibatkan penggunaan event listener, yaitu mekanisme yang mengaitkan fungsi atau aksi tertentu dengan peristiwa yang terjadi. Dengan menggunakan metode seperti `addEventListener()`, JavaScript dapat menambahkan event listener ke suatu elemen, yang kemudian menangkap event tersebut dan menjalankan aksi yang telah ditetapkan saat event tersebut terjadi. Berbagai jenis event seperti mouse events, keyboard events, form events, dan window events dapat dideteksi dan ditangani oleh JavaScript. Penggunaan Event Handling sangat bervariasi, mulai dari meningkatkan interaktivitas pengguna, validasi form, hingga mengatur animasi atau efek transisi berdasarkan peristiwa yang terjadi. Keseluruhan, Event Handling merupakan fitur yang krusial dalam pengembangan web, memungkinkan pengembang untuk menciptakan pengalaman pengguna yang lebih dinamis, responsif, dan interaktif di dalam aplikasi web.",
          "url_video": "https://youtu.be/YiOlaiscqDY?si=LVzWCqRZf2gql3Za"
        },
        {
          "id": 70,
          "chapter_id": 43,
          "course_id": 12,
          "title": "AJAX & Fetch API",
          "content": "AJAX (Asynchronous JavaScript and XML) dan Fetch API merupakan teknologi yang memungkinkan interaksi asinkronus antara halaman web dan server tanpa perlu memuat ulang halaman secara keseluruhan. Konsep dasar dari AJAX melibatkan penggunaan objek XMLHttpRequest (XHR) yang digunakan untuk mengirim permintaan ke server dan menerima respon tanpa mempengaruhi tampilan keseluruhan halaman. AJAX memungkinkan manipulasi data yang diterima dalam format JSON, XML, atau teks untuk diperbarui di dalam halaman web dengan bantuan event listener yang mendeteksi dan menanggapi respon dari server. Sementara itu, Fetch API adalah API modern dalam JavaScript yang menawarkan pendekatan yang lebih sederhana dan bersih dalam mengelola permintaan HTTP serta menangani respons dari server. Fetch API menggunakan metode `fetch()` yang menghasilkan Promise untuk mengirim permintaan dan menangani respons data dari server. Dengan sintaks yang lebih ringkas dan dukungan terhadap Promise, Fetch API menjadi pilihan yang lebih populer dalam pengembangan aplikasi web modern dibandingkan dengan pendekatan yang lebih klasik seperti AJAX. Kedua teknologi ini digunakan untuk memperbarui konten halaman secara dinamis, memungkinkan pengembang untuk mengambil atau mengirim data dari dan ke server tanpa mengganggu pengalaman pengguna secara keseluruhan. Kemampuan untuk melakukan komunikasi asinkronus ini meningkatkan responsivitas aplikasi web dan memungkinkan perubahan konten yang lebih dinamis tanpa perlu me-refresh halaman secara keseluruhan. Pemahaman yang baik tentang AJAX dan Fetch API menjadi penting dalam pengembangan web modern untuk memperkaya pengalaman pengguna dan meningkatkan kinerja aplikasi web secara keseluruhan.",
          "url_video": "https://youtu.be/ZTQcJWixB1k?si=gLvuMAuPcsC3rnY8"
        },
        {
          "id": 71,
          "chapter_id": 44,
          "course_id": 12,
          "title": "Pengantar Framework Front-End (Contoh: React.js atau Vue.js)",
          "content": "Framework front-end seperti React.js atau Vue.js adalah alat yang sangat berharga dalam pengembangan aplikasi web modern. React.js, yang merupakan sebuah library JavaScript yang dikembangkan oleh Facebook, difokuskan pada pembuatan komponen yang dapat digunakan kembali untuk membangun antarmuka pengguna yang efisien dan dinamis. Dengan fitur seperti Virtual DOM dan JSX, React memungkinkan pengembang untuk membangun aplikasi dengan tampilan yang kompleks dan dinamis. Di sisi lain, Vue.js, sebuah framework JavaScript progresif, menawarkan pendekatan yang mudah diimplementasikan dan fleksibel dalam membangun antarmuka pengguna yang reaktif. Vue juga berbasis komponen dan menawarkan reaktivitas yang kuat, memungkinkan perubahan data untuk secara otomatis diperbarui dalam UI. Kedua framework ini memiliki keunggulan dan kelemahan masing-masing; React dengan kinerja tinggi namun memerlukan kurva pembelajaran yang lebih curam, sementara Vue mudah dipelajari dan diimplementasikan tetapi mungkin memiliki dukungan komunitas yang lebih sedikit. Kedua framework ini memiliki komunitas yang besar, dokumentasi yang baik, serta digunakan secara luas dalam pengembangan web modern, memberikan pengembang berbagai pilihan untuk membangun aplikasi web yang responsif, interaktif, dan sesuai dengan kebutuhan proyek yang mereka kerjakan. Pemilihan antara React.js dan Vue.js seringkali didasarkan pada preferensi pengembang, kompleksitas proyek, dan kebutuhan spesifik aplikasi yang akan dibangun.",
          "url_video": "https://youtu.be/Fzcr0rTVRwo?si=fsbh3DJbL201HVYE"
        },
        {
          "id": 72,
          "chapter_id": 44,
          "course_id": 12,
          "title": "Node.js dan Express",
          "content": "Node.js merupakan lingkungan runtime JavaScript yang menggunakan mesin JavaScript V8 dari Google Chrome untuk menjalankan kode di sisi server. Hal ini memungkinkan pengembang untuk membuat aplikasi web skalabel dan berkinerja tinggi dengan menggunakan JavaScript. Node.js mengadopsi pendekatan event-driven dan non-blocking I/O yang memungkinkan penanganan banyak permintaan secara efisien tanpa menghentikan proses lain. Selain itu, Node.js memiliki sistem modul built-in dan memanfaatkan paket-paket dari npm (Node Package Manager) yang luas. Di sisi lain, Express adalah framework aplikasi web yang berjalan di atas Node.js, menyediakan alat yang membantu dalam pengembangan aplikasi web dengan cepat. Express memiliki fitur seperti sistem routing yang memungkinkan penanganan permintaan HTTP ke endpoint tertentu, middleware untuk pengolahan permintaan sebelum mencapai endpoint, dan dukungan untuk berbagai mesin template. Biasanya, Node.js digunakan sebagai lingkungan runtime untuk menjalankan JavaScript di sisi server, sementara Express memberikan bingkai kerja untuk mempermudah pengembangan aplikasi web di atas Node.js. Kombinasi Node.js dan Express sering digunakan untuk membangun backend aplikasi web, API, atau server untuk aplikasi web modern karena memberikan kecepatan pengembangan yang tinggi dan fleksibilitas dalam membangun aplikasi yang efisien dan skalabel.",
          "url_video": "https://youtu.be/TecGUz4bPFA?si=Y2-NsXJMrOqyMNCJ"
        },
        {
          "id": 73,
          "chapter_id": 44,
          "course_id": 12,
          "title": "Penggunaan Git & Version Control",
          "content": "Git adalah sistem kontrol versi yang memungkinkan pengembang untuk melacak perubahan dalam kode sumber selama pengembangan perangkat lunak. Dengan konsep dasar seperti repository (tempat penyimpanan file proyek beserta riwayat perubahannya), commit (penyimpanan perubahan dengan pesan yang menjelaskan perubahan yang dilakukan), branching (membuat cabang dari kode untuk pengembangan fitur baru atau perbaikan bug), dan merging (menggabungkan perubahan dari satu cabang ke cabang lainnya), Git memberikan pengembang kontrol yang kuat atas kode yang mereka tulis. Penggunaan dasar Git meliputi inisialisasi repositori, perintah seperti add, commit, push, pull, branching, checkout, merge, dan menggunakan hosting platform seperti GitHub atau GitLab untuk kolaborasi tim dan manajemen proyek secara terpusat. Dengan manfaat seperti kolaborasi tim yang efisien, melacak riwayat perubahan, eksperimen yang aman di branch terpisah, serta kemampuan untuk pemulihan cepat saat terjadi masalah, Git menjadi kunci dalam pengembangan perangkat lunak modern, membantu memfasilitasi kolaborasi yang efisien dan pengelolaan kode sumber yang efektif.",
          "url_video": "https://youtu.be/fQbTeNX1mvM?si=UnYU2Zp2HAw21bK7"
        },
        {
          "id": 74,
          "chapter_id": 45,
          "course_id": 12,
          "title": "Pengembangan Proyek Web",
          "content": "Pengembangan proyek web merupakan serangkaian proses mulai dari perencanaan hingga peluncuran serta pemeliharaan aplikasi atau situs web. Tahap awal mencakup perencanaan yang mencakup definisi tujuan, penentuan lingkup, dan penyusunan rencana kerja. Desain melibatkan pembuatan wireframe, mockup, dan arsitektur teknis yang mendukung aplikasi. Tahap pengembangan melibatkan penulisan kode, pengujian, dan pengembangan perangkat lunak. Setelah itu, dilakukan peluncuran awal dan pemilihan platform hosting yang tepat. Tahap pemeliharaan dan pengembangan lanjutan menjadi esensial untuk memastikan kelangsungan aplikasi dengan perbaikan bug, pembaruan, serta penambahan fitur. Ada berbagai metode pengembangan seperti waterfall, agile, dan scrum, dengan penggunaan beragam alat dan teknologi seperti bahasa pemrograman, framework, database, dan platform hosting. Tantangan dalam pengembangan termasuk perubahan persyaratan, kinerja, keamanan, dan ketersediaan sumber daya. Dengan perencanaan yang matang, pemilihan metode yang tepat, serta penggunaan alat dan teknologi yang sesuai, pengembangan proyek web dapat menghasilkan aplikasi atau situs web yang sukses dan sesuai dengan kebutuhan pengguna.",
          "url_video": "https://youtu.be/vnZ4LEMhap4?si=V99TnDrJli4ajsMj"
        },
        {
          "id": 75,
          "chapter_id": 45,
          "course_id": 12,
          "title": "Optimisasi & Debugging",
          "content": "Optimisasi dan debugging merupakan proses krusial dalam pengembangan perangkat lunak yang bertujuan untuk meningkatkan kualitas, performa, dan kehandalan aplikasi. Optimisasi melibatkan perbaikan dalam kode, performa aplikasi, dan pengaturan pada berbagai tingkatan seperti front-end, back-end, serta database. Ini melibatkan strategi untuk meminimalkan ukuran file, mempercepat waktu respon server, dan memperbaiki kueri database. Pemantauan kinerja dan analisis data menjadi penting untuk mengidentifikasi area yang memerlukan perbaikan. Sementara itu, debugging melibatkan identifikasi masalah, isolasi bug dalam kode, dan perbaikan kode untuk memastikan perbaikan telah mengatasi masalah tanpa menimbulkan dampak negatif lainnya. Alat debugging seperti debugger, logging, dan monitoring digunakan untuk membantu dalam mengidentifikasi serta memperbaiki kesalahan atau perilaku tidak diinginkan. Keduanya memiliki peran yang krusial: optimisasi untuk meningkatkan performa dan kualitas, sedangkan debugging untuk memastikan stabilitas dan keandalan aplikasi. Dengan menerapkan praktik-praktik ini secara terus-menerus, aplikasi dapat ditingkatkan secara signifikan dalam hal performa, kualitas, dan keandalan.",
          "url_video": "https://youtu.be/C2Pv_ZHUdv0?si=1-KChuom0iSsH4EE"
        },
        {
          "id": 76,
          "chapter_id": 45,
          "course_id": 12,
          "title": "Deployment & Hosting",
          "content": "Deployment dan hosting merupakan dua tahapan penting dalam siklus pengembangan perangkat lunak, khususnya dalam konteks aplikasi web. Deployment merujuk pada proses memindahkan aplikasi dari lingkungan pengembangan ke lingkungan produksi, memungkinkan aplikasi tersebut dapat diakses oleh pengguna. Tahapan-tahapan deployment meliputi pemilihan lingkungan, pemrosesan aplikasi, konfigurasi untuk lingkungan produksi, pengujian terakhir, dan pengiriman ke server atau platform hosting. Sementara hosting adalah layanan yang menyediakan ruang dan infrastruktur untuk menyimpan serta menjalankan aplikasi atau situs web sehingga dapat diakses melalui internet. Ada beberapa tipe hosting seperti shared hosting, VPS hosting, dedicated hosting, dan cloud hosting, masing-masing dengan kelebihan dan tujuan penggunaan yang berbeda. Pilihan platform hosting seperti AWS, Heroku, atau DigitalOcean, juga menjadi kunci dalam menentukan ketersediaan, kinerja, dan stabilitas aplikasi di lingkungan produksi. Keduanya, deployment dan hosting, berperan penting dalam memastikan aplikasi dapat diakses secara online dengan kinerja dan keandalan yang optimal setelah selesai dikembangkan.",
          "url_video": "https://youtu.be/pXHkqQz8xlE?si=IddvUsKMcwPv0mbL"
        }
      ],
      "orders": [],
      "comments": [],
      "ratings": [
        {
          "id": 15,
          "course_id": 12,
          "user_id": 2,
          "rating": 4.5,
          "createdAt": "2023-12-22T04:04:02.905Z",
          "updatedAt": "2023-12-22T04:04:02.905Z"
        }
      ],
      "userProgress": [
        {
          "id": 21,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 66,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 22,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 67,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 23,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 69,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 24,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 70,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 25,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 71,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 26,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 72,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 27,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 73,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 28,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 74,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 29,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 75,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 30,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 76,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 58,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 64,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 59,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 65,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 60,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 66,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 61,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 67,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 62,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 69,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 63,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 70,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 64,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 71,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 65,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 72,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 66,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 73,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 67,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 74,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 68,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 75,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 69,
          "user_id": 13,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 76,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 88,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 64,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 89,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 65,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 90,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 66,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 91,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 67,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 92,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 69,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 93,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 43,
          "course_material_id": 70,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 94,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 71,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 95,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 72,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 96,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 44,
          "course_material_id": 73,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 97,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 74,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 98,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 75,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 99,
          "user_id": 14,
          "course_id": 12,
          "chapter_id": 45,
          "course_material_id": 76,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 19,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 64,
          "is_completed": true,
          "completed_at": "2023-12-22T07:02:49.405Z"
        },
        {
          "id": 20,
          "user_id": 2,
          "course_id": 12,
          "chapter_id": 42,
          "course_material_id": 65,
          "is_completed": true,
          "completed_at": "2023-12-22T07:02:55.786Z"
        }
      ],
      "averageRating": 4.5
    },
    {
      "id": 11,
      "title": "Dasar-Dasar User Interface (UI)",
      "description": "Course ini dirancang untuk memberikan pemahaman menyeluruh tentang Dasar-Dasar User Interface (UI) kepada para peserta yang ingin memahami prinsip-prinsip dasar desain antarmuka pengguna yang efektif. Dibagi menjadi tiga chapter yang terstruktur dengan baik, setiap chapter memberikan wawasan mendalam tentang aspek-aspek utama yang terkait dengan UI.",
      "target_audience": [
        "Desainer UI UX Pemula",
        "Mahasiswa atau Siswa Desain Grafis",
        "Pengembang Perangkat Lunak"
      ],
      "prerequisite": [
        "Pemahaman Komputer dan Penggunaan Perangkat Lunak Desain",
        "Pemahaman Tentang Pengalaman Pengguna (UX):",
        "Kemauan untuk Belajar",
        "Kreativitas dan Ketertarikan terhadap Desain"
      ],
      "price": 0,
      "type_course": "free",
      "level": "pemula",
      "url_group": "www.discord.com/backend2",
      "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231213_U4UeP6nFw",
      "createdAt": "2023-12-08T22:27:22.622Z",
      "updatedAt": "2023-12-22T10:54:40.202Z",
      "category_id": 2,
      "chapters": [
        {
          "id": 39,
          "title": "Chapter 1 - Pengenalan UI",
          "course_id": 11,
          "content": "Chapter pertama kursus ini akan membawa Anda memahami secara mendalam peran penting User Interface (UI) dalam konteks pengalaman pengguna. Anda akan belajar tentang definisi UI, prinsip-prinsip dasar dalam desain UI, dan sejarah perkembangan UI dari waktu ke waktu. Bab ini akan memberikan fondasi yang kuat untuk memahami konsep dasar UI."
        },
        {
          "id": 40,
          "title": "Chapter 2 - Desain Visual",
          "course_id": 11,
          "content": "Di Chapter kedua, fokus akan tertuju pada aspek visual dari UI. Anda akan mendalami teori warna dan penggunaannya dalam UI, tata letak (layout) yang efektif untuk menciptakan komposisi UI yang menarik, serta penggunaan tipografi yang tepat untuk memperkuat pesan dalam desain UI."
        },
        {
          "id": 41,
          "title": "Chapter 3 - Interaksi Pengguna",
          "course_id": 11,
          "content": "Chapter terakhir akan mengeksplorasi interaksi pengguna yang efektif. Ini mencakup prinsip-prinsip interaksi pengguna (UI/UX) yang mempengaruhi pengalaman pengguna, desain responsif dan adaptif untuk berbagai perangkat, serta pentingnya navigasi yang intuitif dalam menciptakan pengalaman pengguna yang menyenangkan."
        }
      ],
      "materials": [
        {
          "id": 55,
          "chapter_id": 39,
          "course_id": 11,
          "title": "Definisi dan Peran UI dalam Pengalaman Pengguna",
          "content": "User Interface (UI) merujuk pada semua elemen yang memungkinkan interaksi antara manusia dan perangkat. Ini meliputi tampilan, tombol, ikon, dan elemen visual lainnya yang memfasilitasi interaksi pengguna dengan sistem atau aplikasi. Dalam pengalaman pengguna (UX), UI berperan penting dalam mempermudah interaksi, menghadirkan keselarasan antara harapan pengguna dan sistem, meningkatkan keterlibatan melalui desain menarik, serta meminimalkan kesalahan pengguna. Desain UI yang baik juga bertugas menyampaikan informasi dengan jelas, menciptakan kesan positif, dan membangun identitas merek yang kuat. Dengan demikian, UI menjadi salah satu faktor utama dalam menciptakan pengalaman pengguna yang memuaskan dan efisien.",
          "url_video": "https://youtu.be/dAtNLaAyWjM?si=W4A2_mjNk2j-N1k0"
        },
        {
          "id": 63,
          "chapter_id": 41,
          "course_id": 11,
          "title": "Prinsip Navigasi dalam UI",
          "content": "Prinsip navigasi dalam desain antarmuka pengguna (UI) memainkan peran krusial dalam memandu pengguna untuk berinteraksi dengan lancar dalam suatu aplikasi atau situs web. Navigasi yang efektif memiliki tujuan untuk membimbing pengguna dengan jelas, menciptakan pengalaman yang nyaman, dan memastikan struktur informasi terorganisir dengan baik. Konsistensi dalam penempatan elemen navigasi, kesederhanaan dalam presentasi, dan kejelasan elemen navigasi seperti menu dropdown atau tombol berkontribusi pada kemudahan dalam navigasi. Desain navigasi yang responsif, mudah digunakan, dan memiliki fitur pencarian yang efektif membantu pengguna menemukan informasi dengan cepat. Prinsip ini juga menekankan pentingnya pengujian, pembaruan terus-menerus, serta memberikan umpan balik yang jelas untuk memastikan keterbacaan, keteraturan, dan kesesuaian navigasi dengan kebutuhan pengguna. Dengan menerapkan prinsip-prinsip navigasi ini, desainer dapat menciptakan antarmuka yang memandu pengguna dengan baik, meningkatkan interaksi, dan menyediakan pengalaman pengguna yang memuaskan dalam aplikasi atau situs web.",
          "url_video": "https://youtu.be/4sSquW6jiEE?si=5vyp6xs2bIqfR_ZT"
        },
        {
          "id": 56,
          "chapter_id": 39,
          "course_id": 11,
          "title": "Prinsip-prinsip Dasar Desain UI",
          "content": "Prinsip-prinsip dasar dalam Desain User Interface (UI) merupakan pedoman esensial yang membimbing desainer dalam menciptakan antarmuka yang efektif dan menarik bagi pengguna. Keterpaduan (Consistency) menekankan penggunaan yang seragam dalam elemen-elemen desain untuk meminimalisir kebingungan, sementara Visibilitas (Visibility) memastikan bahwa fungsi-fungsi penting mudah ditemukan oleh pengguna. Prinsip Feedback yang Jelas (Clear Feedback) menggarisbawahi pentingnya respon yang tepat waktu untuk memastikan pengguna mendapatkan umpan balik yang informatif. Konteks menjadi kunci dalam Ketergantungan pada Konteks (Contextual Relevance) agar UI dapat menyesuaikan diri dengan kebutuhan pengguna. Efisiensi dan Efektivitas (Efficiency and Effectiveness) berfokus pada kemudahan mencapai tujuan dengan langkah yang minimal, sementara Pengaturan Pengguna (User Control) memberikan kontrol kepada pengguna. Kesederhanaan (Simplicity) menjadi prinsip penting dalam menyederhanakan desain, mengurangi kompleksitas, dan memfokuskan pada hal-hal yang esensial untuk menciptakan pengalaman pengguna yang baik dan mudah dipahami. Dengan memperhatikan prinsip-prinsip ini, desainer dapat menciptakan antarmuka yang responsif, intuitif, serta menghasilkan pengalaman pengguna yang memuaskan.",
          "url_video": "https://youtu.be/uwNClNmekGU?si=T5u2tZcf_M2bFkS7"
        },
        {
          "id": 57,
          "chapter_id": 39,
          "course_id": 11,
          "title": "Sejarah Perkembangan UI",
          "content": "Sejarah perkembangan User Interface (UI) mencerminkan evolusi yang signifikan seiring dengan kemajuan teknologi dari masa ke masa. Dimulai dari era mainframe dengan antarmuka teks yang terbatas, kemudian berkembang dengan munculnya GUI (Graphical User Interface) yang revolusioner oleh Xerox PARC pada tahun 1970-an hingga 1980-an. Apple dan Macintosh membawa konsep GUI ke pasar massal dengan tampilan yang lebih ramah pengguna. Microsoft dengan Windows 1.0 juga ikut mengubah wajah UI di komputer PC. Perkembangan internet dan web membawa pengalaman visual yang lebih kaya melalui browser seperti Netscape Navigator pada tahun 1990-an. Puncaknya, perkembangan mobile UI membawa layar sentuh yang memperkaya pengalaman pengguna pada smartphone. Selanjutnya, desain UI terus beradaptasi dengan berbagai perangkat dan layar yang berbeda, menjadi responsif dan adaptif di era modern. Pengembangan AR/VR menghadirkan antarmuka yang revolusioner dengan interaksi yang lebih imersif. Evolusi ini mencerminkan transformasi teknologi, desain, serta kebutuhan pengguna, terus membawa UI menuju pengalaman yang lebih baik, intuitif, dan responsif.",
          "url_video": "https://youtu.be/hxHwOgY9Lms?si=V1Ef8WStLxzw50qk"
        },
        {
          "id": 58,
          "chapter_id": 40,
          "course_id": 11,
          "title": "Teori Warna dan Penggunaannya dalam UI",
          "content": "Teori warna adalah studi tentang interaksi dan pengaruh warna dalam konteks pengalaman visual. Dalam Desain User Interface (UI), teori warna sangat signifikan karena memiliki kekuatan dalam mempengaruhi suasana hati, fokus, dan kesan visual pengguna. Melalui roda warna, kontras, serta konsep kecerahan, kejenuhan, dan nilai warna, desainer dapat memilih kombinasi warna yang sesuai untuk mencapai tujuan tertentu. Penggunaan warna dalam UI dapat meliputi identifikasi merek, pengaruh emosional, bantuan navigasi, penekanan pada elemen penting, keterbacaan teks, serta penciptaan harmoni visual. Pemahaman yang kuat terhadap teori warna memungkinkan desainer untuk menciptakan antarmuka yang menarik, mudah dipahami, dan mampu memengaruhi pengguna dengan cara yang diinginkan secara visual dan emosional.",
          "url_video": "https://youtu.be/H201gb46u_U?si=QXszNuugox9ggqe2"
        },
        {
          "id": 59,
          "chapter_id": 40,
          "course_id": 11,
          "title": "Tata Letak (Layout) dan Komposisi Desain UI",
          "content": "Tata Letak (Layout) dan Komposisi dalam Desain User Interface (UI) merujuk pada susunan dan pengaturan elemen-elemen desain yang bertujuan menciptakan hierarki visual yang jelas serta pengalaman pengguna yang efektif. Tata letak yang baik memperhatikan hierarki visual, konsistensi, penggunaan grid system, dan whitespace untuk mengatur elemen dengan terstruktur dan memberikan pengalaman yang konsisten. Komposisi, sementara itu, melibatkan prinsip-prinsip seperti aturan ketiga (rule of thirds), keseimbangan visual, penekanan pada titik fokus, dan keterbacaan yang optimal, membantu menyusun elemen-elemen desain agar terlihat seimbang, menarik, dan mudah dipahami oleh pengguna. Memahami prinsip-prinsip tata letak dan komposisi memungkinkan desainer untuk menciptakan antarmuka yang menarik secara visual, mudah dinavigasi, serta memberikan pengalaman pengguna yang lebih baik dan lebih efisien.",
          "url_video": "https://youtu.be/UB5q7-RE2oc?si=SdU4RZxohAuPg_Te"
        },
        {
          "id": 60,
          "chapter_id": 40,
          "course_id": 11,
          "title": "Tipografi dan Penggunaannya dalam UI",
          "content": "Tipografi dalam Desain User Interface (UI) adalah seni dan ilmu pemilihan serta penyusunan teks yang berperan penting dalam menyampaikan informasi secara jelas dan estetis. Penggunaan tipografi yang tepat, termasuk jenis huruf, ukuran, spasi, dan hierarki teks, memiliki dampak besar pada keterbacaan, suasana, dan kesan visual dari suatu antarmuka. Pemilihan jenis huruf yang cocok, pengaturan ukuran dan ruang antar huruf yang tepat, serta penekanan hierarki informasi melalui perbedaan ukuran dan gaya huruf, semuanya berkontribusi pada pengalaman pengguna yang lebih baik. Konsistensi dalam tipografi, baik dalam branding maupun kesesuaian antar elemen desain, juga penting untuk menciptakan kesan yang teratur dan mudah dipahami. Dengan mempertimbangkan aspek-aspek tersebut, desainer UI dapat menciptakan tampilan teks yang menarik, mudah dipahami, dan mendukung pengalaman pengguna yang optimal.",
          "url_video": "https://youtu.be/ot-5dQG2v5M?si=hwdV81Ogp5iaNq97"
        },
        {
          "id": 61,
          "chapter_id": 41,
          "course_id": 11,
          "title": "Prinsip-prinsip Interaksi Pengguna (UI/UX)",
          "content": "Prinsip-prinsip Interaksi Pengguna (UI/UX) merupakan pedoman kunci dalam desain produk digital yang bertujuan menciptakan pengalaman pengguna yang intuitif dan memuaskan. Konsistensi dalam tata letak, keteraturan, dan prediktabilitas dalam respons sistem memastikan pengguna merasa nyaman dan mampu memahami produk dengan cepat. Menggunakan mental model pengguna sebagai landasan, desain UI/UX harus sesuai dengan harapan pengguna. Feedback yang jelas setelah tindakan pengguna, fokus pada perbaikan pengalaman pengguna, serta desain yang sederhana dan keterbacaan yang tinggi, semuanya turut berkontribusi dalam menciptakan antarmuka yang baik. Konteks dan adaptabilitas menjadi penting, memastikan desain yang responsif, aksesibilitas yang baik, serta interaksi yang responsif dan intuitif. Keseluruhan prinsip-prinsip ini membantu dalam menciptakan produk yang memahami dan mengakomodasi kebutuhan pengguna secara menyeluruh, memberikan pengalaman pengguna yang lebih baik.",
          "url_video": "https://youtu.be/aql-GpvBFBo?si=OmihDbVwoFvosWtk"
        },
        {
          "id": 62,
          "chapter_id": 41,
          "course_id": 11,
          "title": "Desain Responsif dan Adaptif",
          "content": "Desain responsif dan adaptif merupakan dua strategi kunci dalam merancang antarmuka yang dapat menyesuaikan tampilannya dengan berbagai perangkat dan ukuran layar. Desain responsif menggunakan pendekatan fleksibel dengan grid system, media queries, dan fleksibilitas konten untuk menyesuaikan tampilan secara dinamis pada berbagai perangkat, mulai dari desktop hingga ponsel, tetap memperhatikan pengalaman pengguna yang konsisten. Sementara itu, desain adaptif melibatkan pembuatan beberapa versi desain yang dioptimalkan untuk kisaran resolusi layar tertentu, memberikan pengalaman yang lebih spesifik dan dioptimalkan. Responsif lebih menekankan fleksibilitas, sedangkan adaptif memberikan kontrol yang lebih besar terhadap tampilan dan fungsi pada setiap ukuran layar yang ditargetkan. Kedua pendekatan ini memiliki tujuan sama dalam memberikan pengalaman pengguna yang optimal, dan kombinasi dari keduanya kadang-kadang digunakan untuk memperkuat responsivitas dan kontrol desain secara keseluruhan.",
          "url_video": "https://youtu.be/jEGPKL7n4Uw?si=O2RsbpFO_Yy4Pm6w"
        }
      ],
      "orders": [],
      "comments": [],
      "ratings": [
        {
          "id": 17,
          "course_id": 11,
          "user_id": 2,
          "rating": 1,
          "createdAt": "2023-12-22T04:40:48.448Z",
          "updatedAt": "2023-12-22T05:38:03.409Z"
        }
      ],
      "userProgress": [
        {
          "id": 32,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 56,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 33,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 57,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 34,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 58,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 35,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 59,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 36,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 60,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 37,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 63,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 38,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 61,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 39,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 62,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 82,
          "user_id": 14,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 58,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 83,
          "user_id": 14,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 59,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 84,
          "user_id": 14,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 60,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 85,
          "user_id": 14,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 63,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 86,
          "user_id": 14,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 61,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 87,
          "user_id": 14,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 62,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 79,
          "user_id": 14,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 55,
          "is_completed": true,
          "completed_at": "2023-12-19T03:44:12.794Z"
        },
        {
          "id": 80,
          "user_id": 14,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 56,
          "is_completed": true,
          "completed_at": "2023-12-19T03:53:48.837Z"
        },
        {
          "id": 81,
          "user_id": 14,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 57,
          "is_completed": true,
          "completed_at": "2023-12-19T04:38:08.250Z"
        },
        {
          "id": 31,
          "user_id": 2,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 55,
          "is_completed": true,
          "completed_at": "2023-12-25T02:28:05.747Z"
        },
        {
          "id": 159,
          "user_id": 12,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 58,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 160,
          "user_id": 12,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 59,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 161,
          "user_id": 12,
          "course_id": 11,
          "chapter_id": 40,
          "course_material_id": 60,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 162,
          "user_id": 12,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 63,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 163,
          "user_id": 12,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 61,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 164,
          "user_id": 12,
          "course_id": 11,
          "chapter_id": 41,
          "course_material_id": 62,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 156,
          "user_id": 12,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 55,
          "is_completed": true,
          "completed_at": "2023-12-24T09:35:17.893Z"
        },
        {
          "id": 157,
          "user_id": 12,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 56,
          "is_completed": true,
          "completed_at": "2023-12-24T09:38:06.167Z"
        },
        {
          "id": 158,
          "user_id": 12,
          "course_id": 11,
          "chapter_id": 39,
          "course_material_id": 57,
          "is_completed": true,
          "completed_at": "2023-12-24T10:49:20.160Z"
        }
      ],
      "averageRating": 1
    },
    {
      "id": 10,
      "title": "Mastering Product Development and Strategy",
      "description": "Course ini bertujuan untuk membekali Anda dengan pemahaman komprehensif tentang pengembangan produk, strategi, serta praktik terbaik dalam mengelola produk dari konsepsi hingga peluncuran, dan pemeliharaan produk yang sudah ada di pasar.",
      "target_audience": [
        "Manajer Produk",
        "Pengusaha",
        "Profesional Pemasaran",
        "Manajer Proyek",
        "Pemimpin Bisnis"
      ],
      "prerequisite": [
        "Pengetahuan Dasar Bisnis",
        "Pengalaman atau Pengetahuan Produk",
        "Pemahaman tentang Strategi Bisnis",
        "Kemampuan Analitis",
        "Keterampilan Komunikasi"
      ],
      "price": 200000,
      "type_course": "premium",
      "level": "pemula",
      "url_group": "www.discord.com/backend2",
      "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231207_Izk6d-l33",
      "createdAt": "2023-12-07T03:25:05.699Z",
      "updatedAt": "2023-12-22T10:07:05.883Z",
      "category_id": 1,
      "chapters": [
        {
          "id": 36,
          "title": "Chapter 2 - Strategi Produk yang Efektif",
          "course_id": 10,
          "content": "Pada chapter ini akan mempelajari metode untuk mengidentifikasi kebutuhan pengguna, menganalisis pasar, menetapkan tujuan produk yang jelas, dan merancang roadmap yang efektif untuk memenuhi kebutuhan pasar."
        },
        {
          "id": 37,
          "title": "Chapter 3 - Praktik Pengembangan Produk",
          "course_id": 10,
          "content": "Chapter  ini mencakup berbagai metode pengembangan produk, manajemen siklus hidup produk, desain produk, serta proses prototyping dan uji coba yang relevan untuk memastikan produk berkualitas."
        },
        {
          "id": 38,
          "title": "Chapter 4 - Manajemen Proyek dalam Pengembangan Produk",
          "course_id": 10,
          "content": "Pada Chapter ini anda akan memahami strategi perencanaan proyek produk, pengelolaan tim pengembangan, manajemen risiko produk, dan pengukuran kinerja produk yang efektif"
        },
        {
          "id": 35,
          "title": "Chapter 1 - Product Development",
          "course_id": 10,
          "content": "pada chapter ini memperkenalkan konsep dasar dan pentingnya pengembangan produk, menggali peran serta tanggung jawab seorang Product Manager, serta evolusi dalam domain Product Development."
        }
      ],
      "materials": [
        {
          "id": 44,
          "chapter_id": 35,
          "course_id": 10,
          "title": "Pengenalan Product Development",
          "content": "Pengenalan Product Development merujuk pada konsep, prinsip, dan proses yang terlibat dalam menciptakan, merancang, mengembangkan, dan memperkenalkan produk baru ke pasar. Ini merupakan tahap awal dan penting dalam siklus hidup suatu produk yang melibatkan serangkaian langkah dari konsepsi ide hingga peluncuran produk yang siap dipasarkan. Pengembangan produk adalah proses merancang, memproduksi, dan membawa produk baru ke pasar. Ini melibatkan identifikasi kebutuhan pasar, analisis kompetisi, perancangan produk, pengembangan prototipe, pengujian, dan peluncuran produk. Tahapan-tahapannya antara lain. Konseptualisasi yaitu pembentukan ide produk awal berdasarkan analisis pasar atau kebutuhan pengguna. Perencanaan yaitu penetapan tujuan, jadwal, dan sumber daya yang diperlukan untuk pengembangan produk. Pengembangan yaitu proses pembuatan dan pengujian prototipe produk. Pengujian yaitu pengumpulan umpan balik, evaluasi, dan penyempurnaan produk berdasarkan hasil pengujian. Peluncuran yaitu tahap memasarkan produk ke pasar dan memulai penjualan. ",
          "url_video": "https://youtu.be/1JQcTpTuyyU?si=TAGnTWedK1eA3PuB"
        },
        {
          "id": 45,
          "chapter_id": 35,
          "course_id": 10,
          "title": "Perbandingan Product Management dan Product Marketing",
          "content": "Perbandingan antara Product Management dan Product Marketing mencerminkan dua fungsi yang berbeda tetapi saling terkait dalam siklus hidup produk. Product Management fokus pada pengembangan produk dari konsepsi hingga peluncuran, mengidentifikasi kebutuhan pengguna, membuat roadmap produk, dan berkolaborasi dengan tim pengembangan. Di sisi lain, Product Marketing berkonsentrasi pada memasarkan produk yang telah dikembangkan, menentukan pesan pemasaran yang tepat, mengidentifikasi target pasar, dan merencanakan strategi pemasaran. Product Management lebih berfokus pada fitur dan fungsionalitas produk, sementara Product Marketing menitikberatkan pada posisi produk di pasar, komunikasi pesan pemasaran, dan tujuan penjualan. Keduanya saling melengkapi, di mana Product Management memberikan arahan kepada Product Marketing untuk strategi pemasaran yang sesuai dengan visi produk, sementara Product Marketing mengkomunikasikan nilai produk kepada pelanggan dan pasar. Kolaborasi antara keduanya penting dalam menyusun strategi produk yang sukses dan mengkomunikasikan nilai produk kepada konsumen.",
          "url_video": "https://youtu.be/ASPTeAQdvZc?si=T2DCTOh1B91eWWtj"
        },
        {
          "id": 46,
          "chapter_id": 35,
          "course_id": 10,
          "title": "Tinjauan Sejarah dan Evolusi Produktivitas",
          "content": "Tinjauan sejarah dan evolusi dalam Product Management menggambarkan perkembangan konsep, metode, serta perubahan dalam manajemen produk dari awal hingga saat ini. Awalnya, fokus terarah pada proses produksi dan efisiensi, namun dengan Revolusi Industri, metode produksi bergeser dari manual menjadi mesin-mesin, meningkatkan kapasitas produksi. Konsep manajemen produk mulai muncul pada awal abad ke-20 sebagai fungsi manajemen yang terpisah. Evolusi Produktivitas menandai pergeseran dari manajemen tradisional yang linier menuju pendekatan modern yang lebih terdesentralisasi dan adaptif seperti metodologi Agile, Lean, dan Desain Berbasis Pengalaman (Design Thinking). Kemajuan teknologi, terutama teknologi informasi, memainkan peran besar dalam mempercepat proses manajemen produk dan fokus pada kepuasan pelanggan. Perubahan ini memungkinkan inovasi yang lebih cepat, penekanan pada kebutuhan pengguna, dan kolaborasi tim yang lebih erat antar berbagai fungsi dalam pengembangan produk. Sejarah dan evolusi Produktivitas dalam Product Management mencerminkan perubahan besar dalam pendekatan, teknologi, serta fokus pada pengalaman pengguna, menggambarkan transisi dari pendekatan tradisional yang linier menuju pendekatan modern yang lebih adaptif dan berorientasi pada kepuasan pelanggan.",
          "url_video": "https://youtu.be/Ua61VNESI9g?si=RFlS-fHkuQjwBgX4"
        },
        {
          "id": 47,
          "chapter_id": 36,
          "course_id": 10,
          "title": "Identifikasi Kebutuhan Pengguna",
          "content": "Identifikasi kebutuhan pengguna adalah proses esensial dalam pengembangan produk yang melibatkan pengumpulan, analisis, dan pemahaman atas kebutuhan serta masalah yang dihadapi oleh pengguna terkait produk atau layanan. Proses ini terdiri dari berbagai langkah, seperti penelitian pasar, wawancara langsung dengan pengguna, analisis data, dan pemetaan perjalanan pengguna. Dengan memahami kebutuhan pengguna, perusahaan dapat merancang solusi yang lebih relevan, mengurangi risiko pengembangan produk yang tidak tepat, meningkatkan pengalaman pengguna, serta membuka peluang untuk inovasi yang lebih baik. Teknik identifikasi kebutuhan pengguna mencakup survei, wawancara, dan analisis data, yang membantu dalam mengumpulkan informasi yang diperlukan untuk menciptakan produk yang lebih sesuai dengan kebutuhan pasar.",
          "url_video": "https://youtu.be/LBtTzcnhYxc?si=ydo6j2XAiR4u6y6G"
        },
        {
          "id": 48,
          "chapter_id": 36,
          "course_id": 10,
          "title": "Analisis Pasar dan Penetapan Tujuan Produk",
          "content": "Analisis pasar merupakan proses penting dalam memahami pasar yang melibatkan pengumpulan informasi, segmentasi pasar, pemahaman persaingan, dan analisis SWOT. Sementara itu, penetapan tujuan produk melibatkan perumusan tujuan yang spesifik dan terukur, penyusunan strategi produk, perencanaan pengembangan, serta penetapan indikator kinerja kunci untuk mengukur kesuksesan produk. Keduanya saling terkait: analisis pasar membantu merumuskan tujuan produk berdasarkan pemahaman pasar yang mendalam, sementara penetapan tujuan produk memberikan arahan dalam memenuhi kebutuhan pasar serta mengurangi risiko pengembangan produk yang tidak sesuai dengan pasar. Melalui dua proses ini, perusahaan dapat mengarahkan strategi pengembangan yang tepat dan mengukur kesuksesan produk secara lebih terukur.",
          "url_video": "https://youtu.be/0WniCTEWr5A?si=cTLkpUo9EGWsmbPF"
        },
        {
          "id": 49,
          "chapter_id": 36,
          "course_id": 10,
          "title": "Pembuatan Roadmap Produk",
          "content": "Pembuatan roadmap produk melibatkan perencanaan strategis yang merinci visi dan rencana jangka panjang dalam pengembangan produk. Langkah-langkahnya mencakup pengumpulan data pasar, definisi visi produk, penentuan prioritas fitur, penjadwalan tahapan, komunikasi internal, serta iterasi dan penyesuaian berdasarkan umpan balik. Komponen kunci dalam roadmap produk mencakup visi produk, fitur utama, timeline, serta prioritas dan sumber daya yang dibutuhkan untuk setiap tahap pengembangan. Roadmap ini bersifat dinamis, dapat disesuaikan dengan perubahan pasar atau umpan balik, memungkinkan perbaikan dan penyesuaian untuk menghadapi situasi yang berkembang.",
          "url_video": "https://www.youtube.com/live/wkGN_FJdApQ?si=9pNGtxQlM4ch8XVD"
        },
        {
          "id": 50,
          "chapter_id": 37,
          "course_id": 10,
          "title": "Metode Pengembangan Produk",
          "content": "Metode pengembangan produk adalah proses sistematis dalam merancang, mengembangkan, dan memperkenalkan produk baru atau mengubah produk yang ada. Langkah-langkahnya dimulai dari pengidentifikasian ide, evaluasi, analisis konsep, pengembangan prototipe, uji coba, hingga pengembangan produk akhir. Metode umum seperti Waterfall (linier), Agile (fleksibel dan iteratif), dan Design Thinking (pemecahan masalah inovatif) sering digunakan dalam proses ini. Pentingnya metode ini mencakup ketepatan dengan kebutuhan pasar, efisiensi, kualitas, keterlibatan pelanggan, serta mendorong inovasi berkelanjutan. Metode ini memberikan kerangka kerja yang terstruktur untuk pengembangan produk yang responsif, efisien, dan sesuai dengan kebutuhan pasar dan pelanggan.",
          "url_video": "https://youtu.be/-DUWCMo0R1I?si=jS02GQUP7ChJOq7z"
        },
        {
          "id": 51,
          "chapter_id": 37,
          "course_id": 10,
          "title": "Manajemen Siklus Hidup Produk",
          "content": "Manajemen siklus hidup produk (Product Lifecycle Management/PLM) adalah pendekatan holistik yang mengelola seluruh rentang kehidupan produk, dari konsepsi hingga penghapusan. Tahapannya meliputi konsepsi, pengembangan, pengenalan ke pasar, pertumbuhan, kematangan, penurunan, dan pensiun. PLM berperan dalam perencanaan strategis, koordinasi tim, pengelolaan informasi, dan mendukung pengambilan keputusan. Manfaatnya mencakup peningkatan efisiensi, kualitas, inovasi, serta penghematan biaya dalam pengembangan, produksi, dan pemasaran produk. Dengan PLM, organisasi dapat mengelola produk mereka dengan efisien, inovatif, dan responsif terhadap perubahan pasar sepanjang siklus hidupnya.",
          "url_video": "https://youtu.be/4qhsbl1lOQY?si=a0KDIHZPmBgGLIFR"
        },
        {
          "id": 52,
          "chapter_id": 37,
          "course_id": 10,
          "title": "Desain Produk yang Efektif",
          "content": "Desain produk yang efektif adalah proses pengembangan produk yang memperhitungkan fungsi, kegunaan, estetika, dan kebutuhan pengguna. Proses ini melibatkan komponen seperti fungsi, kegunaan, estetika, keandalan, dan keberlanjutan, sambil menerapkan prinsip-prinsip seperti kesesuaian dengan kebutuhan pengguna, sederhana dan intuitif, fleksibel dan adaptif, inovatif dan kreatif, serta keselarasan dan konsistensi. Prosesnya mencakup penelitian, perancangan konsep, pengembangan detail, uji coba, dan produksi untuk menghasilkan produk yang memenuhi kebutuhan pengguna dengan baik dan berhasil di pasar.",
          "url_video": "https://youtu.be/XP587wKfVs0?si=1bXo6c1rr9cAtvNg"
        },
        {
          "id": 53,
          "chapter_id": 37,
          "course_id": 10,
          "title": "Desain Produk yang Efektif",
          "content": "Desain produk yang efektif adalah proses pengembangan produk yang memperhitungkan fungsi, kegunaan, estetika, dan kebutuhan pengguna. Proses ini melibatkan komponen seperti fungsi, kegunaan, estetika, keandalan, dan keberlanjutan, sambil menerapkan prinsip-prinsip seperti kesesuaian dengan kebutuhan pengguna, sederhana dan intuitif, fleksibel dan adaptif, inovatif dan kreatif, serta keselarasan dan konsistensi. Prosesnya mencakup penelitian, perancangan konsep, pengembangan detail, uji coba, dan produksi untuk menghasilkan produk yang memenuhi kebutuhan pengguna dengan baik dan berhasil di pasar.",
          "url_video": "https://youtu.be/XP587wKfVs0?si=1bXo6c1rr9cAtvNg"
        },
        {
          "id": 54,
          "chapter_id": 37,
          "course_id": 10,
          "title": "Prototyping dan Uji Coba Produk",
          "content": "Prototyping adalah tahap pembuatan model awal dari produk yang sedang dikembangkan, sementara uji coba produk merupakan proses evaluasi menyeluruh terhadap prototipe atau produk sebelum diperkenalkan ke pasar. Prototyping dimulai dari model sederhana hingga versi yang lebih terperinci, bertujuan untuk menguji ide, fungsi, dan desain sebelum masuk tahap produksi massal. Sementara itu, uji coba produk melibatkan penilaian kinerja, keandalan, kegunaan, dan respon pengguna terhadap produk. Proses ini penting karena membantu mengidentifikasi masalah awal, mengurangi biaya dan waktu pengembangan, meningkatkan kualitas produk, dan memastikan pengalaman pengguna yang lebih baik sebelum produk dipasarkan. Melalui prototyping dan uji coba produk yang baik, perbaikan dan perubahan yang diperlukan dapat dilakukan sebelum produk masuk ke tahap produksi massal, memastikan produk yang lebih baik sesuai dengan kebutuhan pengguna.",
          "url_video": "https://youtu.be/2PzT0aAi9Lw?si=OpJvc3cyjpmKobMC"
        }
      ],
      "orders": [
        {
          "id": 2,
          "course_id": 10,
          "user_id": 2,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703035925847",
          "createdAt": "2023-12-20T01:32:05.848Z",
          "updatedAt": "2023-12-20T01:32:05.848Z"
        },
        {
          "id": 13,
          "course_id": 10,
          "user_id": 14,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703080110865",
          "createdAt": "2023-12-20T13:48:30.866Z",
          "updatedAt": "2023-12-20T13:48:30.866Z"
        },
        {
          "id": 18,
          "course_id": 10,
          "user_id": 12,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703415979637",
          "createdAt": "2023-12-24T11:06:19.638Z",
          "updatedAt": "2023-12-24T11:06:19.638Z"
        }
      ],
      "comments": [],
      "ratings": [],
      "userProgress": [
        {
          "id": 129,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 36,
          "course_material_id": 47,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 130,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 36,
          "course_material_id": 48,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 131,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 36,
          "course_material_id": 49,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 132,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 37,
          "course_material_id": 50,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 133,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 37,
          "course_material_id": 51,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 134,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 37,
          "course_material_id": 52,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 135,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 37,
          "course_material_id": 53,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 136,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 37,
          "course_material_id": 54,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 137,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 35,
          "course_material_id": 44,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 138,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 35,
          "course_material_id": 45,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 139,
          "user_id": 14,
          "course_id": 10,
          "chapter_id": 35,
          "course_material_id": 46,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 180,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 36,
          "course_material_id": 47,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 181,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 36,
          "course_material_id": 48,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 182,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 36,
          "course_material_id": 49,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 183,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 37,
          "course_material_id": 50,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 184,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 37,
          "course_material_id": 51,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 185,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 37,
          "course_material_id": 52,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 186,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 37,
          "course_material_id": 53,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 187,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 37,
          "course_material_id": 54,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 188,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 35,
          "course_material_id": 44,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 189,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 35,
          "course_material_id": 45,
          "is_completed": false,
          "completed_at": null
        },
        {
          "id": 190,
          "user_id": 12,
          "course_id": 10,
          "chapter_id": 35,
          "course_material_id": 46,
          "is_completed": false,
          "completed_at": null
        }
      ],
      "averageRating": null
    },
    {
      "id": 9,
      "title": "Data Scientist fundamentals",
      "description": "pondasi dasar dalam Data Science meliputi matematika dan statistik, pemrograman, pengetahuan domain, algoritma dan machine learning, pengolahan data, visualisasi data, pengambilan keputusan dan storytelling.",
      "target_audience": [
        "Calon Data Scientist",
        "Mahasiswa Ilmu Komputer atau Ilmu Data"
      ],
      "prerequisite": [
        "Pemahaman Dasar Matematika dan Statistik",
        "Pemrograman Dasar",
        "Pemahaman Tentang Data dan Database"
      ],
      "price": 100000,
      "type_course": "premium",
      "level": "pemula",
      "url_group": "www.discord.com/backend2",
      "thumbnail": "https://ik.imagekit.io/amarafiif/thumbnail_20231207_3eISL7rYd",
      "createdAt": "2023-12-06T10:37:52.255Z",
      "updatedAt": "2023-12-22T10:37:17.576Z",
      "category_id": 6,
      "chapters": [
        {
          "id": 32,
          "title": "Pengenalan Ilmu Data",
          "course_id": 9,
          "content": "Ilmu Data Science adalah bidang yang menggunakan metode ilmiah, algoritma komputasi, dan teknik analitik untuk menganalisis data dan mendapatkan wawasan berharga. Prosesnya meliputi pengumpulan, pemrosesan, eksplorasi, pemodelan, evaluasi, dan komunikasi data. Tujuannya adalah untuk mengambil keputusan yang lebih baik dan memecahkan masalah yang kompleks."
        },
        {
          "id": 33,
          "title": "Statistik Dasar untuk Ilmu Data",
          "course_id": 9,
          "content": "Statistik dasar dalam Ilmu Data meliputi pengukuran pusat (mean, median, mode), penyebaran data (range, varians, standar deviasi), distribusi data, korelasi antara variabel, hipotesis dan uji signifikansi, analisis regresi, dan probabilitas. Pemahaman konsep-konsep ini penting dalam analisis data dan pengambilan keputusan."
        }
      ],
      "materials": [
        {
          "id": 42,
          "chapter_id": 32,
          "course_id": 9,
          "title": "Definisi dan peran data scientist.",
          "content": "Data Scientist adalah profesional yang menganalisis data untuk menghasilkan wawasan berharga. Mereka mengumpulkan, memproses, dan menjelajahi data, membangun model dan algoritma, serta berkomunikasi hasil analisis kepada pemangku kepentingan. Peran mereka membantu organisasi mengambil keputusan yang lebih baik dan memecahkan masalah yang kompleks dengan memanfaatkan data.",
          "url_video": "https://youtu.be/vOvRXovBv9I?si=zBQynUhYj_i4zNS2"
        },
        {
          "id": 43,
          "chapter_id": 32,
          "course_id": 9,
          "title": "Perbandingan antara ilmu data, statistik, dan analisis data.",
          "content": "Ilmu Data (Data Science), Statistik, dan Analisis Data adalah bidang yang berhubungan dengan pengolahan dan pemahaman data. Ilmu Data melibatkan penggunaan metode ilmiah dan algoritma komputasi, Statistik fokus pada metode statistik, dan Analisis Data adalah pendekatan yang lebih luas dalam pemahaman data.",
          "url_video": "https://youtu.be/T08eJt9DlgU?si=WRtSeb48oX9uJui2"
        }
      ],
      "orders": [
        {
          "id": 3,
          "course_id": 9,
          "user_id": 2,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703036113705",
          "createdAt": "2023-12-20T01:35:13.705Z",
          "updatedAt": "2023-12-20T01:35:13.705Z"
        },
        {
          "id": 9,
          "course_id": 9,
          "user_id": 14,
          "payment_methods_id": null,
          "status": "paid",
          "reference": "ORDER_1703078199942",
          "createdAt": "2023-12-20T13:16:39.943Z",
          "updatedAt": "2023-12-20T13:16:39.943Z"
        }
      ],
      "comments": [],
      "ratings": [],
      "userProgress": [],
      "averageRating": null
    }
  ],
  "pagination": {
    "currentPage": 1,
    "pageSize": 10,
    "totalItems": 16,
    "totalPages": 2
  }
}